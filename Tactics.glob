DIGEST e30f22542e97a6e6c58eb643323e40b1
FTactics
R601:604 Poly <> <> lib
prf 878:883 <> silly1
R905:907 Coq.Init.Datatypes <> nat ind
R921:930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R944:952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R958:960 Coq.Init.Logic <> :type_scope:x_'='_x not
R953:953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R957:957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Tactics <> o var
R954:954 Tactics <> n var
R961:961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R963:963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R965:965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R964:964 Tactics <> p var
R962:962 Tactics <> m var
R936:938 Coq.Init.Logic <> :type_scope:x_'='_x not
R931:931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R933:933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R935:935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R934:934 Tactics <> o var
R932:932 Tactics <> n var
R939:939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R941:941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R943:943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R942:942 Tactics <> p var
R940:940 Tactics <> n var
R917:919 Coq.Init.Logic <> :type_scope:x_'='_x not
R916:916 Tactics <> n var
R920:920 Tactics <> m var
prf 1501:1506 <> silly2
R1528:1530 Coq.Init.Datatypes <> nat ind
R1544:1553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1554:1554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1597:1606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1612:1614 Coq.Init.Logic <> :type_scope:x_'='_x not
R1607:1607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1609:1609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Tactics <> o var
R1608:1608 Tactics <> n var
R1615:1615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1617:1617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Tactics <> p var
R1616:1616 Tactics <> m var
R1569:1571 Coq.Init.Datatypes <> nat ind
R1580:1583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1589:1591 Coq.Init.Logic <> :type_scope:x_'='_x not
R1584:1584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1586:1586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Tactics <> o var
R1585:1585 Tactics <> q var
R1592:1592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1594:1594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Tactics <> p var
R1593:1593 Tactics <> r var
R1576:1578 Coq.Init.Logic <> :type_scope:x_'='_x not
R1575:1575 Tactics <> q var
R1579:1579 Tactics <> r var
R1540:1542 Coq.Init.Logic <> :type_scope:x_'='_x not
R1539:1539 Tactics <> n var
R1543:1543 Tactics <> m var
prf 2286:2292 <> silly2a
R2310:2312 Coq.Init.Datatypes <> nat ind
R2334:2343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2344:2344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2391:2400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2404:2406 Coq.Init.Logic <> :type_scope:x_'='_x not
R2401:2401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2402:2402 Tactics <> n var
R2407:2407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2408:2408 Tactics <> m var
R2359:2361 Coq.Init.Datatypes <> nat ind
R2378:2381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2385:2387 Coq.Init.Logic <> :type_scope:x_'='_x not
R2382:2382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2383:2383 Tactics <> q var
R2388:2388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2389:2389 Tactics <> r var
R2370:2372 Coq.Init.Logic <> :type_scope:x_'='_x not
R2365:2365 Poly <> ::'('_x_','_x_')' not
R2367:2367 Poly <> ::'('_x_','_x_')' not
R2369:2369 Poly <> ::'('_x_','_x_')' not
R2366:2366 Tactics <> q var
R2368:2368 Tactics <> q var
R2373:2373 Poly <> ::'('_x_','_x_')' not
R2375:2375 Poly <> ::'('_x_','_x_')' not
R2377:2377 Poly <> ::'('_x_','_x_')' not
R2374:2374 Tactics <> r var
R2376:2376 Tactics <> r var
R2326:2328 Coq.Init.Logic <> :type_scope:x_'='_x not
R2321:2321 Poly <> ::'('_x_','_x_')' not
R2323:2323 Poly <> ::'('_x_','_x_')' not
R2325:2325 Poly <> ::'('_x_','_x_')' not
R2322:2322 Tactics <> n var
R2324:2324 Tactics <> n var
R2329:2329 Poly <> ::'('_x_','_x_')' not
R2331:2331 Poly <> ::'('_x_','_x_')' not
R2333:2333 Poly <> ::'('_x_','_x_')' not
R2330:2330 Tactics <> m var
R2332:2332 Tactics <> m var
prf 2592:2599 <> silly_ex
R2608:2608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2654:2663 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2678:2686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2693:2695 Coq.Init.Logic <> :type_scope:x_'='_x not
R2687:2690 Basics <> oddb def
R2696:2699 Basics <> true constr
R2671:2673 Coq.Init.Logic <> :type_scope:x_'='_x not
R2664:2668 Basics <> evenb def
R2674:2677 Basics <> true constr
R2633:2636 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2647:2649 Coq.Init.Logic <> :type_scope:x_'='_x not
R2637:2640 Basics <> oddb def
R2643:2643 Coq.Init.Datatypes <> S constr
R2645:2645 Tactics <> n var
R2650:2653 Basics <> true constr
R2626:2628 Coq.Init.Logic <> :type_scope:x_'='_x not
R2619:2623 Basics <> evenb def
R2625:2625 Tactics <> n var
R2629:2632 Basics <> true constr
prf 2977:2991 <> silly3_firsttry
R3007:3009 Coq.Init.Datatypes <> nat ind
R3036:3045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3065:3067 Coq.Init.Logic <> :type_scope:x_'='_x not
R3046:3052 Basics <> beq_nat def
R3055:3055 Coq.Init.Datatypes <> S constr
R3058:3058 Coq.Init.Datatypes <> S constr
R3060:3060 Tactics <> n var
R3068:3071 Basics <> true constr
R3022:3024 Coq.Init.Logic <> :type_scope:x_'='_x not
R3018:3021 Basics <> true constr
R3025:3031 Basics <> beq_nat def
R3033:3033 Tactics <> n var
prf 3291:3296 <> silly3
R3312:3314 Coq.Init.Datatypes <> nat ind
R3341:3350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3370:3372 Coq.Init.Logic <> :type_scope:x_'='_x not
R3351:3357 Basics <> beq_nat def
R3360:3360 Coq.Init.Datatypes <> S constr
R3363:3363 Coq.Init.Datatypes <> S constr
R3365:3365 Tactics <> n var
R3373:3376 Basics <> true constr
R3327:3329 Coq.Init.Logic <> :type_scope:x_'='_x not
R3323:3326 Basics <> true constr
R3330:3336 Basics <> beq_nat def
R3338:3338 Tactics <> n var
prf 3761:3773 <> rev_exercise1
R3792:3795 Poly <> list ind
R3797:3799 Coq.Init.Datatypes <> nat ind
R3818:3826 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3829:3831 Coq.Init.Logic <> :type_scope:x_'='_x not
R3827:3828 Tactics <> l' var
R3832:3834 Poly <> rev def
R3836:3836 Tactics <> l var
R3809:3811 Coq.Init.Logic <> :type_scope:x_'='_x not
R3808:3808 Tactics <> l var
R3812:3814 Poly <> rev def
R3816:3817 Tactics <> l' var
R3874:3887 Poly <> rev_involutive prfax
R3874:3887 Poly <> rev_involutive prfax
R3874:3887 Poly <> rev_involutive prfax
R3917:3930 Poly <> rev_involutive prfax
R3917:3930 Poly <> rev_involutive prfax
R3917:3930 Poly <> rev_involutive prfax
R3949:3962 Poly <> rev_involutive prfax
R3949:3962 Poly <> rev_involutive prfax
def 4785:4800 <> trans_eq_example
R4826:4828 Coq.Init.Datatypes <> nat ind
R4850:4858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4872:4880 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4886:4888 Coq.Init.Logic <> :type_scope:x_'='_x not
R4881:4881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4883:4883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4885:4885 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4884:4884 Tactics <> b var
R4882:4882 Tactics <> a var
R4889:4889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4891:4891 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4893:4893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4892:4892 Tactics <> f var
R4890:4890 Tactics <> e var
R4864:4866 Coq.Init.Logic <> :type_scope:x_'='_x not
R4859:4859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4861:4861 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4863:4863 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4862:4862 Tactics <> d var
R4860:4860 Tactics <> c var
R4867:4867 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4869:4869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4871:4871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4870:4870 Tactics <> f var
R4868:4868 Tactics <> e var
R4842:4844 Coq.Init.Logic <> :type_scope:x_'='_x not
R4837:4837 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4839:4839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4841:4841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4840:4840 Tactics <> b var
R4838:4838 Tactics <> a var
R4845:4845 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4847:4847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4849:4849 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4848:4848 Tactics <> d var
R4846:4846 Tactics <> c var
prf 5150:5157 <> trans_eq
R5186:5186 Tactics <> X var
R5197:5200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5206:5209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5211:5213 Coq.Init.Logic <> :type_scope:x_'='_x not
R5210:5210 Tactics <> n var
R5214:5214 Tactics <> o var
R5202:5204 Coq.Init.Logic <> :type_scope:x_'='_x not
R5201:5201 Tactics <> m var
R5205:5205 Tactics <> o var
R5193:5195 Coq.Init.Logic <> :type_scope:x_'='_x not
R5192:5192 Tactics <> n var
R5196:5196 Tactics <> m var
def 5469:5485 <> trans_eq_example'
R5511:5513 Coq.Init.Datatypes <> nat ind
R5535:5543 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5557:5565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5571:5573 Coq.Init.Logic <> :type_scope:x_'='_x not
R5566:5566 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5568:5568 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5570:5570 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5569:5569 Tactics <> b var
R5567:5567 Tactics <> a var
R5574:5574 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5576:5576 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5578:5578 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5577:5577 Tactics <> f var
R5575:5575 Tactics <> e var
R5549:5551 Coq.Init.Logic <> :type_scope:x_'='_x not
R5544:5544 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5546:5546 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5548:5548 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5547:5547 Tactics <> d var
R5545:5545 Tactics <> c var
R5552:5552 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5554:5554 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5556:5556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5555:5555 Tactics <> f var
R5553:5553 Tactics <> e var
R5527:5529 Coq.Init.Logic <> :type_scope:x_'='_x not
R5522:5522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5524:5524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5526:5526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5525:5525 Tactics <> b var
R5523:5523 Tactics <> a var
R5530:5530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5532:5532 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5534:5534 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5533:5533 Tactics <> d var
R5531:5531 Tactics <> c var
R6049:6049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6051:6051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6053:6053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6031:6038 Tactics <> trans_eq thm
R6049:6049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6051:6051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6053:6053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6031:6038 Tactics <> trans_eq thm
def 6383:6399 <> trans_eq_exercise
R6421:6423 Coq.Init.Datatypes <> nat ind
R6448:6456 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6468:6476 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6477:6477 Coq.Init.Logic <> :type_scope:x_'='_x not
R6483:6487 Coq.Init.Logic <> :type_scope:x_'='_x not
R6498:6498 Coq.Init.Logic <> :type_scope:x_'='_x not
R6479:6481 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6478:6478 Tactics <> n var
R6482:6482 Tactics <> p var
R6488:6495 Basics <> minustwo def
R6497:6497 Tactics <> o var
R6457:6457 Coq.Init.Logic <> :type_scope:x_'='_x not
R6463:6466 Coq.Init.Logic <> :type_scope:x_'='_x not
R6459:6461 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6458:6458 Tactics <> n var
R6462:6462 Tactics <> p var
R6467:6467 Tactics <> m var
R6433:6436 Coq.Init.Logic <> :type_scope:x_'='_x not
R6447:6447 Coq.Init.Logic <> :type_scope:x_'='_x not
R6432:6432 Tactics <> m var
R6437:6444 Basics <> minustwo def
R6446:6446 Tactics <> o var
R6548:6555 Tactics <> trans_eq thm
R6548:6555 Tactics <> trans_eq thm
prf 8082:8092 <> S_injective
R8110:8112 Coq.Init.Datatypes <> nat ind
R8127:8132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8134:8136 Coq.Init.Logic <> :type_scope:x_'='_x not
R8133:8133 Tactics <> n var
R8137:8137 Tactics <> m var
R8121:8123 Coq.Init.Logic <> :type_scope:x_'='_x not
R8118:8118 Coq.Init.Datatypes <> S constr
R8120:8120 Tactics <> n var
R8124:8124 Coq.Init.Datatypes <> S constr
R8126:8126 Tactics <> m var
prf 8624:8636 <> inversion_ex1
R8656:8658 Coq.Init.Datatypes <> nat ind
R8679:8684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8688:8690 Coq.Init.Logic <> :type_scope:x_'='_x not
R8685:8685 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8687:8687 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8686:8686 Tactics <> n var
R8691:8691 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8693:8693 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8692:8692 Tactics <> m var
R8670:8672 Coq.Init.Logic <> :type_scope:x_'='_x not
R8664:8664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8666:8667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8669:8669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8668:8668 Tactics <> m var
R8665:8665 Tactics <> n var
R8673:8673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8675:8676 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8678:8678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8677:8677 Tactics <> o var
R8674:8674 Tactics <> o var
prf 8862:8874 <> inversion_ex2
R8892:8894 Coq.Init.Datatypes <> nat ind
R8909:8914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8916:8918 Coq.Init.Logic <> :type_scope:x_'='_x not
R8915:8915 Tactics <> n var
R8919:8919 Tactics <> m var
R8903:8905 Coq.Init.Logic <> :type_scope:x_'='_x not
R8900:8900 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8902:8902 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8901:8901 Tactics <> n var
R8906:8906 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8908:8908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8907:8907 Tactics <> m var
def 9041:9053 <> inversion_ex3
R9084:9084 Tactics <> X var
R9094:9097 Poly <> list ind
R9099:9099 Tactics <> X var
R9125:9130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9146:9151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9153:9155 Coq.Init.Logic <> :type_scope:x_'='_x not
R9152:9152 Tactics <> x var
R9156:9156 Tactics <> y var
R9137:9139 Coq.Init.Logic <> :type_scope:x_'='_x not
R9132:9135 Poly <> ::x_'::'_x not
R9131:9131 Tactics <> y var
R9136:9136 Tactics <> l var
R9141:9144 Poly <> ::x_'::'_x not
R9140:9140 Tactics <> x var
R9145:9145 Tactics <> j var
R9116:9118 Coq.Init.Logic <> :type_scope:x_'='_x not
R9106:9109 Poly <> ::x_'::'_x not
R9105:9105 Tactics <> x var
R9111:9114 Poly <> ::x_'::'_x not
R9110:9110 Tactics <> y var
R9115:9115 Tactics <> l var
R9120:9123 Poly <> ::x_'::'_x not
R9119:9119 Tactics <> z var
R9124:9124 Tactics <> j var
prf 9534:9540 <> f_equal
R9569:9572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9573:9573 Tactics <> B var
R9568:9568 Tactics <> A var
R9582:9582 Tactics <> A var
R9593:9596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9600:9602 Coq.Init.Logic <> :type_scope:x_'='_x not
R9597:9597 Tactics <> f var
R9599:9599 Tactics <> x var
R9603:9603 Tactics <> f var
R9605:9605 Tactics <> y var
R9589:9591 Coq.Init.Logic <> :type_scope:x_'='_x not
R9588:9588 Tactics <> x var
R9592:9592 Tactics <> y var
prf 9897:9907 <> beq_nat_0_l
R9942:9945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9947:9949 Coq.Init.Logic <> :type_scope:x_'='_x not
R9946:9946 Tactics <> n var
R9935:9937 Coq.Init.Logic <> :type_scope:x_'='_x not
R9924:9930 Basics <> beq_nat def
R9934:9934 Tactics <> n var
R9938:9941 Basics <> true constr
prf 10869:10881 <> inversion_ex4
R10897:10899 Coq.Init.Datatypes <> nat ind
R10912:10917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10923:10925 Coq.Init.Logic <> :type_scope:x_'='_x not
R10919:10921 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10908:10910 Coq.Init.Logic <> :type_scope:x_'='_x not
R10905:10905 Coq.Init.Datatypes <> S constr
R10907:10907 Tactics <> n var
prf 10987:10999 <> inversion_ex5
R11017:11019 Coq.Init.Datatypes <> nat ind
R11037:11042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11046:11048 Coq.Init.Logic <> :type_scope:x_'='_x not
R11043:11043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11045:11045 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11044:11044 Tactics <> n var
R11049:11049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11051:11051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11050:11050 Tactics <> m var
R11030:11032 Coq.Init.Logic <> :type_scope:x_'='_x not
R11025:11029 Basics <> false constr
R11033:11036 Basics <> true constr
def 11530:11542 <> inversion_ex6
R11599:11599 Tactics <> X var
R11609:11612 Poly <> list ind
R11614:11614 Tactics <> X var
R11636:11641 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11657:11662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11664:11666 Coq.Init.Logic <> :type_scope:x_'='_x not
R11663:11663 Tactics <> x var
R11667:11667 Tactics <> z var
R11648:11650 Coq.Init.Logic <> :type_scope:x_'='_x not
R11643:11646 Poly <> ::x_'::'_x not
R11642:11642 Tactics <> y var
R11647:11647 Tactics <> l var
R11652:11655 Poly <> ::x_'::'_x not
R11651:11651 Tactics <> z var
R11656:11656 Tactics <> j var
R11631:11633 Coq.Init.Logic <> :type_scope:x_'='_x not
R11621:11624 Poly <> ::x_'::'_x not
R11620:11620 Tactics <> x var
R11626:11629 Poly <> ::x_'::'_x not
R11625:11625 Tactics <> y var
R11630:11630 Tactics <> l var
R11634:11635 Poly <> ::'['_']' not
prf 12976:12980 <> S_inj
R12998:13000 Coq.Init.Datatypes <> nat ind
R13008:13011 Basics <> bool ind
R13043:13052 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13064:13066 Coq.Init.Logic <> :type_scope:x_'='_x not
R13053:13059 Basics <> beq_nat def
R13063:13063 Tactics <> m var
R13061:13061 Tactics <> n var
R13067:13067 Tactics <> b var
R13039:13041 Coq.Init.Logic <> :type_scope:x_'='_x not
R13020:13026 Basics <> beq_nat def
R13035:13035 Coq.Init.Datatypes <> S constr
R13037:13037 Tactics <> m var
R13029:13029 Coq.Init.Datatypes <> S constr
R13031:13031 Tactics <> n var
R13042:13042 Tactics <> b var
prf 13905:13911 <> silly3'
R13927:13929 Coq.Init.Datatypes <> nat ind
R13935:13935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13984:13990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14009:14015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14020:14022 Coq.Init.Logic <> :type_scope:x_'='_x not
R14016:14019 Basics <> true constr
R14023:14029 Basics <> beq_nat def
R14032:14032 Coq.Init.Datatypes <> S constr
R14035:14035 Coq.Init.Datatypes <> S constr
R14037:14037 Tactics <> n var
R13995:13997 Coq.Init.Logic <> :type_scope:x_'='_x not
R13991:13994 Basics <> true constr
R13998:14004 Basics <> beq_nat def
R14006:14006 Tactics <> n var
R13954:13957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13977:13979 Coq.Init.Logic <> :type_scope:x_'='_x not
R13958:13964 Basics <> beq_nat def
R13967:13967 Coq.Init.Datatypes <> S constr
R13970:13970 Coq.Init.Datatypes <> S constr
R13972:13972 Tactics <> n var
R13980:13983 Basics <> true constr
R13947:13949 Coq.Init.Logic <> :type_scope:x_'='_x not
R13936:13942 Basics <> beq_nat def
R13944:13944 Tactics <> n var
R13950:13953 Basics <> true constr
prf 14919:14936 <> plus_n_n_injective
R14970:14978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14980:14982 Coq.Init.Logic <> :type_scope:x_'='_x not
R14979:14979 Tactics <> n var
R14983:14983 Tactics <> m var
R14962:14964 Coq.Init.Logic <> :type_scope:x_'='_x not
R14958:14960 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14957:14957 Tactics <> n var
R14961:14961 Tactics <> n var
R14966:14968 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14965:14965 Tactics <> m var
R14969:14969 Tactics <> m var
R15231:15239 Induction <> plus_n_Sm thm
R15231:15239 Induction <> plus_n_Sm thm
R15231:15239 Induction <> plus_n_Sm thm
R15265:15273 Induction <> plus_n_Sm thm
R15265:15273 Induction <> plus_n_Sm thm
R15265:15273 Induction <> plus_n_Sm thm
prf 16271:16293 <> double_injective_FAILED
R16333:16341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16343:16345 Coq.Init.Logic <> :type_scope:x_'='_x not
R16342:16342 Tactics <> n var
R16346:16346 Tactics <> m var
R16322:16324 Coq.Init.Logic <> :type_scope:x_'='_x not
R16314:16319 Induction <> double def
R16321:16321 Tactics <> n var
R16325:16330 Induction <> double def
R16332:16332 Tactics <> m var
R16627:16633 Tactics <> f_equal thm
R16627:16633 Tactics <> f_equal thm
prf 18879:18894 <> double_injective
R18934:18942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18944:18946 Coq.Init.Logic <> :type_scope:x_'='_x not
R18943:18943 Tactics <> n var
R18947:18947 Tactics <> m var
R18923:18925 Coq.Init.Logic <> :type_scope:x_'='_x not
R18915:18920 Induction <> double def
R18922:18922 Tactics <> n var
R18926:18931 Induction <> double def
R18933:18933 Tactics <> m var
R19820:19826 Tactics <> f_equal thm
R19820:19826 Tactics <> f_equal thm
prf 20721:20732 <> beq_nat_true
R20770:20773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20775:20777 Coq.Init.Logic <> :type_scope:x_'='_x not
R20774:20774 Tactics <> n var
R20778:20778 Tactics <> m var
R20763:20765 Coq.Init.Logic <> :type_scope:x_'='_x not
R20752:20758 Basics <> beq_nat def
R20762:20762 Tactics <> m var
R20760:20760 Tactics <> n var
R20766:20769 Basics <> true constr
prf 22363:22391 <> double_injective_take2_FAILED
R22431:22439 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22441:22443 Coq.Init.Logic <> :type_scope:x_'='_x not
R22440:22440 Tactics <> n var
R22444:22444 Tactics <> m var
R22420:22422 Coq.Init.Logic <> :type_scope:x_'='_x not
R22412:22417 Induction <> double def
R22419:22419 Tactics <> n var
R22423:22428 Induction <> double def
R22430:22430 Tactics <> m var
R22725:22731 Tactics <> f_equal thm
R22725:22731 Tactics <> f_equal thm
prf 23667:23688 <> double_injective_take2
R23728:23736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23738:23740 Coq.Init.Logic <> :type_scope:x_'='_x not
R23737:23737 Tactics <> n var
R23741:23741 Tactics <> m var
R23717:23719 Coq.Init.Logic <> :type_scope:x_'='_x not
R23709:23714 Induction <> double def
R23716:23716 Tactics <> n var
R23720:23725 Induction <> double def
R23727:23727 Tactics <> m var
R24204:24210 Tactics <> f_equal thm
R24204:24210 Tactics <> f_equal thm
prf 26414:26424 <> beq_id_true
R26459:26462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26464:26466 Coq.Init.Logic <> :type_scope:x_'='_x not
R26463:26463 Tactics <> x var
R26467:26467 Tactics <> y var
R26452:26454 Coq.Init.Logic <> :type_scope:x_'='_x not
R26442:26447 Lists <> beq_id def
R26451:26451 Tactics <> y var
R26449:26449 Tactics <> x var
R26455:26458 Basics <> true constr
R26528:26530 Coq.Init.Logic <> :type_scope:x_'='_x not
R26528:26530 Coq.Init.Logic <> :type_scope:x_'='_x not
R26543:26554 Tactics <> beq_nat_true thm
R26543:26554 Tactics <> beq_nat_true thm
prf 26712:26731 <> nth_error_after_last
R26746:26748 Coq.Init.Datatypes <> nat ind
R26767:26770 Poly <> list ind
R26772:26772 Tactics <> X var
R26793:26801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26815:26817 Coq.Init.Logic <> :type_scope:x_'='_x not
R26802:26810 Poly <> nth_error def
R26814:26814 Tactics <> n var
R26812:26812 Tactics <> l var
R26818:26821 Poly <> None constr
R26789:26791 Coq.Init.Logic <> :type_scope:x_'='_x not
R26781:26786 Poly <> length def
R26788:26788 Tactics <> l var
R26792:26792 Tactics <> n var
prf 27214:27228 <> app_length_cons
R27259:27262 Poly <> list ind
R27264:27264 Tactics <> X var
R27306:27306 Tactics <> X var
R27314:27316 Coq.Init.Datatypes <> nat ind
R27353:27361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27383:27385 Coq.Init.Logic <> :type_scope:x_'='_x not
R27362:27362 Coq.Init.Datatypes <> S constr
R27365:27370 Poly <> length def
R27375:27378 Poly <> ::x_'++'_x not
R27373:27374 Tactics <> l1 var
R27379:27380 Tactics <> l2 var
R27386:27386 Tactics <> n var
R27349:27351 Coq.Init.Logic <> :type_scope:x_'='_x not
R27325:27330 Poly <> length def
R27335:27339 Poly <> ::x_'++'_x not
R27347:27347 Poly <> ::x_'++'_x not
R27333:27334 Tactics <> l1 var
R27341:27344 Poly <> ::x_'::'_x not
R27340:27340 Tactics <> x var
R27345:27346 Tactics <> l2 var
R27352:27352 Tactics <> n var
prf 27587:27602 <> app_length_twice
R27625:27627 Coq.Init.Datatypes <> nat ind
R27633:27636 Poly <> list ind
R27638:27638 Tactics <> X var
R27659:27667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27683:27685 Coq.Init.Logic <> :type_scope:x_'='_x not
R27668:27673 Poly <> length def
R27677:27680 Poly <> ::x_'++'_x not
R27676:27676 Tactics <> l var
R27681:27681 Tactics <> l var
R27687:27689 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27686:27686 Tactics <> n var
R27690:27690 Tactics <> n var
R27655:27657 Coq.Init.Logic <> :type_scope:x_'='_x not
R27647:27652 Poly <> length def
R27654:27654 Tactics <> l var
R27658:27658 Tactics <> n var
prf 27880:27895 <> double_induction
R27913:27916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27920:27923 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27917:27919 Coq.Init.Datatypes <> nat ind
R27910:27912 Coq.Init.Datatypes <> nat ind
R27938:27943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27944:27944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27973:27979 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27980:27980 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28009:28015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28016:28016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28051:28057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28070:28070 Tactics <> P var
R28074:28074 Tactics <> n var
R28072:28072 Tactics <> m var
R28034:28037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28038:28038 Tactics <> P var
R28047:28047 Coq.Init.Datatypes <> S constr
R28049:28049 Tactics <> n var
R28041:28041 Coq.Init.Datatypes <> S constr
R28043:28043 Tactics <> m var
R28029:28029 Tactics <> P var
R28033:28033 Tactics <> n var
R28031:28031 Tactics <> m var
R27996:27999 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28000:28000 Tactics <> P var
R28005:28005 Coq.Init.Datatypes <> S constr
R28007:28007 Tactics <> n var
R27991:27991 Tactics <> P var
R27995:27995 Tactics <> n var
R27960:27963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27964:27964 Tactics <> P var
R27967:27967 Coq.Init.Datatypes <> S constr
R27969:27969 Tactics <> m var
R27955:27955 Tactics <> P var
R27957:27957 Tactics <> m var
R27933:27933 Tactics <> P var
def 28400:28405 <> square
R28413:28415 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28412:28412 Tactics <> n var
R28416:28416 Tactics <> n var
prf 28487:28497 <> square_mult
R28527:28529 Coq.Init.Logic <> :type_scope:x_'='_x not
R28513:28518 Tactics <> square def
R28522:28524 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28521:28521 Tactics <> n var
R28525:28525 Tactics <> m var
R28538:28540 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28530:28535 Tactics <> square def
R28537:28537 Tactics <> n var
R28541:28546 Tactics <> square def
R28548:28548 Tactics <> m var
R28865:28870 Tactics <> square def
R29197:29206 Induction <> mult_assoc thm
R29197:29206 Induction <> mult_assoc thm
R29197:29206 Induction <> mult_assoc thm
R29232:29234 Coq.Init.Logic <> :type_scope:x_'='_x not
R29228:29230 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29224:29226 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29240:29242 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29236:29238 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29232:29234 Coq.Init.Logic <> :type_scope:x_'='_x not
R29228:29230 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29224:29226 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29240:29242 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29236:29238 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29259:29267 Induction <> mult_comm thm
R29259:29267 Induction <> mult_comm thm
R29259:29267 Induction <> mult_comm thm
R29276:29285 Induction <> mult_assoc thm
R29276:29285 Induction <> mult_assoc thm
R29311:29320 Induction <> mult_assoc thm
R29311:29320 Induction <> mult_assoc thm
R29311:29320 Induction <> mult_assoc thm
def 29704:29706 <> foo
R29712:29714 Coq.Init.Datatypes <> nat ind
prf 29927:29938 <> silly_fact_1
R29961:29963 Coq.Init.Logic <> :type_scope:x_'='_x not
R29957:29959 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29952:29954 Tactics <> foo def
R29956:29956 Tactics <> m var
R29975:29977 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29964:29966 Tactics <> foo def
R29970:29972 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29969:29969 Tactics <> m var
def 30208:30210 <> bar
R30225:30225 Tactics <> x var
R30248:30248 Coq.Init.Datatypes <> S constr
prf 30322:30340 <> silly_fact_2_FAILED
R30363:30365 Coq.Init.Logic <> :type_scope:x_'='_x not
R30359:30361 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30354:30356 Tactics <> bar def
R30358:30358 Tactics <> m var
R30377:30379 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30366:30368 Tactics <> bar def
R30372:30374 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30371:30371 Tactics <> m var
prf 31368:31379 <> silly_fact_2
R31402:31404 Coq.Init.Logic <> :type_scope:x_'='_x not
R31398:31400 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31393:31395 Tactics <> bar def
R31397:31397 Tactics <> m var
R31416:31418 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31405:31407 Tactics <> bar def
R31411:31413 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31410:31410 Tactics <> m var
prf 31769:31781 <> silly_fact_2'
R31804:31806 Coq.Init.Logic <> :type_scope:x_'='_x not
R31800:31802 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31795:31797 Tactics <> bar def
R31799:31799 Tactics <> m var
R31818:31820 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31807:31809 Tactics <> bar def
R31813:31815 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31812:31812 Tactics <> m var
R31852:31854 Tactics <> bar def
def 32498:32505 <> sillyfun
R32512:32514 Coq.Init.Datatypes <> nat ind
R32519:32522 Basics <> bool ind
R32532:32538 Basics <> beq_nat def
R32540:32540 Tactics <> n var
R32565:32571 Basics <> beq_nat def
R32573:32573 Tactics <> n var
R32595:32599 Basics <> false constr
R32582:32586 Basics <> false constr
R32549:32553 Basics <> false constr
prf 32611:32624 <> sillyfun_false
R32640:32642 Coq.Init.Datatypes <> nat ind
R32658:32660 Coq.Init.Logic <> :type_scope:x_'='_x not
R32648:32655 Tactics <> sillyfun def
R32657:32657 Tactics <> n var
R32661:32665 Basics <> false constr
R32694:32701 Tactics <> sillyfun def
R32716:32722 Basics <> beq_nat def
R32716:32722 Basics <> beq_nat def
R32816:32822 Basics <> beq_nat def
R32816:32822 Basics <> beq_nat def
prf 33621:33633 <> combine_split
R33653:33656 Poly <> list ind
R33660:33662 Poly <> :type_scope:x_'*'_x not
R33659:33659 Tactics <> X var
R33663:33663 Tactics <> Y var
R33694:33699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33713:33715 Coq.Init.Logic <> :type_scope:x_'='_x not
R33700:33706 Poly <> combine def
R33711:33712 Tactics <> l2 var
R33708:33709 Tactics <> l1 var
R33716:33716 Tactics <> l var
R33683:33685 Coq.Init.Logic <> :type_scope:x_'='_x not
R33676:33680 Poly <> split def
R33682:33682 Tactics <> l var
R33686:33686 Poly <> ::'('_x_','_x_')' not
R33689:33690 Poly <> ::'('_x_','_x_')' not
R33693:33693 Poly <> ::'('_x_','_x_')' not
R33687:33688 Tactics <> l1 var
R33691:33692 Tactics <> l2 var
def 34001:34009 <> sillyfun1
R34016:34018 Coq.Init.Datatypes <> nat ind
R34023:34026 Basics <> bool ind
R34036:34042 Basics <> beq_nat def
R34044:34044 Tactics <> n var
R34068:34074 Basics <> beq_nat def
R34076:34076 Tactics <> n var
R34097:34101 Basics <> false constr
R34085:34088 Basics <> true constr
R34053:34056 Basics <> true constr
prf 34360:34379 <> sillyfun1_odd_FAILED
R34395:34397 Coq.Init.Datatypes <> nat ind
R34424:34432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34439:34441 Coq.Init.Logic <> :type_scope:x_'='_x not
R34433:34436 Basics <> oddb def
R34438:34438 Tactics <> n var
R34442:34445 Basics <> true constr
R34417:34419 Coq.Init.Logic <> :type_scope:x_'='_x not
R34406:34414 Tactics <> sillyfun1 def
R34416:34416 Tactics <> n var
R34420:34423 Basics <> true constr
R34477:34485 Tactics <> sillyfun1 def
R34506:34512 Basics <> beq_nat def
R34506:34512 Basics <> beq_nat def
prf 35362:35374 <> sillyfun1_odd
R35390:35392 Coq.Init.Datatypes <> nat ind
R35419:35427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35434:35436 Coq.Init.Logic <> :type_scope:x_'='_x not
R35428:35431 Basics <> oddb def
R35433:35433 Tactics <> n var
R35437:35440 Basics <> true constr
R35412:35414 Coq.Init.Logic <> :type_scope:x_'='_x not
R35401:35409 Tactics <> sillyfun1 def
R35411:35411 Tactics <> n var
R35415:35418 Basics <> true constr
R35472:35480 Tactics <> sillyfun1 def
R35501:35507 Basics <> beq_nat def
R35501:35507 Basics <> beq_nat def
R35756:35767 Tactics <> beq_nat_true thm
R35756:35767 Tactics <> beq_nat_true thm
R36054:36060 Basics <> beq_nat def
R36054:36060 Basics <> beq_nat def
R36120:36131 Tactics <> beq_nat_true thm
R36120:36131 Tactics <> beq_nat_true thm
prf 36295:36316 <> bool_fn_applied_thrice
R36338:36341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36342:36345 Basics <> bool ind
R36334:36337 Basics <> bool ind
R36353:36356 Basics <> bool ind
R36373:36375 Coq.Init.Logic <> :type_scope:x_'='_x not
R36362:36362 Tactics <> f var
R36365:36365 Tactics <> f var
R36368:36368 Tactics <> f var
R36370:36370 Tactics <> b var
R36376:36376 Tactics <> f var
R36378:36378 Tactics <> b var
R36432:36435 Basics <> true constr
R36432:36435 Basics <> true constr
R36497:36501 Basics <> false constr
R36497:36501 Basics <> false constr
R36550:36554 Basics <> false constr
R36550:36554 Basics <> false constr
R36582:36585 Basics <> true constr
R36582:36585 Basics <> true constr
prf 38894:38904 <> beq_nat_sym
R38922:38924 Coq.Init.Datatypes <> nat ind
R38941:38943 Coq.Init.Logic <> :type_scope:x_'='_x not
R38930:38936 Basics <> beq_nat def
R38940:38940 Tactics <> m var
R38938:38938 Tactics <> n var
R38944:38950 Basics <> beq_nat def
R38954:38954 Tactics <> n var
R38952:38952 Tactics <> m var
prf 39450:39462 <> beq_nat_trans
R39500:39505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39524:39529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39541:39543 Coq.Init.Logic <> :type_scope:x_'='_x not
R39530:39536 Basics <> beq_nat def
R39540:39540 Tactics <> p var
R39538:39538 Tactics <> n var
R39544:39547 Basics <> true constr
R39517:39519 Coq.Init.Logic <> :type_scope:x_'='_x not
R39506:39512 Basics <> beq_nat def
R39516:39516 Tactics <> p var
R39514:39514 Tactics <> m var
R39520:39523 Basics <> true constr
R39493:39495 Coq.Init.Logic <> :type_scope:x_'='_x not
R39482:39488 Basics <> beq_nat def
R39492:39492 Tactics <> m var
R39490:39490 Tactics <> n var
R39496:39499 Basics <> true constr
R39587:39598 Tactics <> beq_nat_true thm
R39587:39598 Tactics <> beq_nat_true thm
R39615:39626 Tactics <> beq_nat_true thm
R39615:39626 Tactics <> beq_nat_true thm
R39682:39693 Induction <> beq_nat_refl thm
R39682:39693 Induction <> beq_nat_refl thm
def 40407:40429 <> split_combine_statement
R40458:40461 Poly <> list ind
R40463:40463 Tactics <> X var
R40472:40475 Poly <> list ind
R40477:40477 Tactics <> Y var
R40506:40509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40531:40533 Coq.Init.Logic <> :type_scope:x_'='_x not
R40510:40514 Poly <> split def
R40517:40523 Poly <> combine def
R40528:40529 Tactics <> l2 var
R40525:40526 Tactics <> l1 var
R40534:40534 Poly <> ::'('_x_','_x_')' not
R40537:40538 Poly <> ::'('_x_','_x_')' not
R40541:40541 Poly <> ::'('_x_','_x_')' not
R40535:40536 Tactics <> l1 var
R40539:40540 Tactics <> l2 var
R40494:40496 Coq.Init.Logic <> :type_scope:x_'='_x not
R40485:40490 Poly <> length def
R40492:40493 Tactics <> l1 var
R40497:40502 Poly <> length def
R40504:40505 Tactics <> l2 var
prf 40553:40565 <> split_combine
R40569:40591 Tactics <> split_combine_statement def
R40804:40808 Poly <> split def
R40811:40817 Poly <> combine def
R40804:40808 Poly <> split def
R40811:40817 Poly <> combine def
prf 41049:41063 <> filter_exercise
R41094:41097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41098:41101 Basics <> bool ind
R41093:41093 Tactics <> X var
R41138:41138 Tactics <> X var
R41149:41152 Poly <> list ind
R41154:41154 Tactics <> X var
R41186:41194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41201:41203 Coq.Init.Logic <> :type_scope:x_'='_x not
R41195:41198 Tactics <> test var
R41200:41200 Tactics <> x var
R41204:41207 Basics <> true constr
R41176:41178 Coq.Init.Logic <> :type_scope:x_'='_x not
R41163:41168 Poly <> filter def
R41175:41175 Tactics <> l var
R41170:41173 Tactics <> test var
R41180:41183 Poly <> ::x_'::'_x not
R41179:41179 Tactics <> x var
R41184:41185 Tactics <> lf var
def 42366:42372 <> forallb
R42387:42390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42391:42394 Basics <> bool ind
R42386:42386 Tactics <> X var
R42400:42403 Poly <> list ind
R42405:42405 Tactics <> X var
R42410:42413 Basics <> bool ind
R42426:42426 Tactics <> l var
R42439:42441 Poly <> nil constr
R42446:42449 Basics <> true constr
R42458:42461 Poly <> ::x_'::'_x not
R42467:42470 Basics <> andb def
R42479:42485 Tactics <> forallb def
R42487:42487 Tactics <> f var
R42473:42473 Tactics <> f var
def 42509:42515 <> existsb
R42530:42533 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42534:42537 Basics <> bool ind
R42529:42529 Tactics <> X var
R42543:42546 Poly <> list ind
R42548:42548 Tactics <> X var
R42553:42556 Basics <> bool ind
R42569:42569 Tactics <> l var
R42584:42586 Poly <> nil constr
R42591:42595 Basics <> false constr
R42606:42609 Poly <> ::x_'::'_x not
R42615:42617 Basics <> orb def
R42626:42632 Tactics <> existsb def
R42634:42634 Tactics <> f var
R42620:42620 Tactics <> f var
def 42658:42665 <> existsb'
R42680:42683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42684:42687 Basics <> bool ind
R42679:42679 Tactics <> X var
R42693:42696 Poly <> list ind
R42698:42698 Tactics <> X var
R42703:42706 Basics <> bool ind
R42713:42716 Basics <> negb def
R42719:42725 Tactics <> forallb def
R42749:42749 Tactics <> l var
R42737:42740 Basics <> negb def
R42743:42743 Tactics <> f var
R42745:42745 Tactics <> X var
prf 42762:42777 <> existsb_existsb'
R42801:42804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42805:42808 Basics <> bool ind
R42800:42800 Tactics <> X var
R42814:42817 Poly <> list ind
R42819:42819 Tactics <> X var
R42836:42838 Coq.Init.Logic <> :type_scope:x_'='_x not
R42825:42831 Tactics <> existsb def
R42835:42835 Tactics <> l var
R42833:42833 Tactics <> f var
R42839:42846 Tactics <> existsb' def
R42850:42850 Tactics <> l var
R42848:42848 Tactics <> f var
R42913:42920 Tactics <> existsb' def

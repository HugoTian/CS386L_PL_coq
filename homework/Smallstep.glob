DIGEST f66c10360cdca5a3a2e48965b2b9e5f8
FSmallstep
R69:83 Coq.Arith.Arith <> <> lib
R101:115 Coq.Arith.EqNat <> <> lib
R133:147 Coq.omega.Omega <> <> lib
R165:178 Coq.Lists.List <> <> lib
R218:221 Maps <> <> lib
R239:241 Imp <> <> lib
ind 4166:4167 <> tm
constr 4183:4183 <> C
constr 4224:4224 <> P
R4190:4193 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4194:4195 Smallstep <> tm ind
R4187:4189 Coq.Init.Datatypes <> nat ind
R4230:4233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4236:4239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4240:4241 Smallstep <> tm ind
R4234:4235 Smallstep <> tm ind
R4228:4229 Smallstep <> tm ind
def 4397:4401 <> evalF
R4408:4409 Smallstep <> tm ind
R4414:4416 Coq.Init.Datatypes <> nat ind
R4429:4429 Smallstep <> t var
R4440:4440 Smallstep <> C constr
R4453:4453 Smallstep <> P constr
R4472:4474 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4464:4468 Smallstep <> evalF def
R4475:4479 Smallstep <> evalF def
ind 5100:5103 <> eval
constr 5132:5138 <> E_Const
constr 5171:5176 <> E_Plus
R5109:5112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5116:5119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5113:5115 Coq.Init.Datatypes <> nat ind
R5107:5108 Smallstep <> tm ind
R5289:5292 Smallstep <> eval ind
R5161:5164 Smallstep <> ::x_'\\'_x not
R5158:5158 Smallstep <> C constr
R5160:5160 Smallstep <> n var
R5165:5165 Smallstep <> n var
R5214:5223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5232:5241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5249:5253 Smallstep <> ::x_'\\'_x not
R5261:5261 Smallstep <> ::x_'\\'_x not
R5242:5242 Smallstep <> P constr
R5247:5248 Smallstep <> t2 var
R5244:5245 Smallstep <> t1 var
R5256:5258 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5254:5255 Smallstep <> n1 var
R5259:5260 Smallstep <> n2 var
R5226:5229 Smallstep <> ::x_'\\'_x not
R5224:5225 Smallstep <> t2 var
R5230:5231 Smallstep <> n2 var
R5208:5211 Smallstep <> ::x_'\\'_x not
R5206:5207 Smallstep <> t1 var
R5212:5213 Smallstep <> n1 var
R5289:5292 Smallstep <> eval ind
not 5272:5272 <> ::x_'\\'_x
mod 5308:5319 <> SimpleArith1
ind 5937:5940 SimpleArith1 step
constr 5968:5984 SimpleArith1 ST_PlusConstConst
constr 6044:6051 SimpleArith1 ST_Plus1
constr 6124:6131 SimpleArith1 ST_Plus2
R5946:5949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5952:5955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5950:5951 Smallstep SimpleArith1 tm ind
R5944:5945 Smallstep SimpleArith1 tm ind
R6236:6239 Smallstep <> step ind
R6023:6027 Smallstep SimpleArith1 ::x_'==>'_x not
R6008:6008 Smallstep SimpleArith1 P constr
R6018:6018 Smallstep SimpleArith1 C constr
R6020:6021 Smallstep <> n2 var
R6011:6011 Smallstep SimpleArith1 C constr
R6013:6014 Smallstep <> n1 var
R6028:6028 Smallstep SimpleArith1 C constr
R6033:6035 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6031:6032 Smallstep <> n1 var
R6036:6037 Smallstep <> n2 var
R6089:6098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6106:6110 Smallstep SimpleArith1 ::x_'==>'_x not
R6099:6099 Smallstep SimpleArith1 P constr
R6104:6105 Smallstep <> t2 var
R6101:6102 Smallstep <> t1 var
R6111:6111 Smallstep SimpleArith1 P constr
R6117:6118 Smallstep <> t2 var
R6113:6115 Smallstep <> t1' var
R6081:6085 Smallstep SimpleArith1 ::x_'==>'_x not
R6079:6080 Smallstep <> t1 var
R6086:6088 Smallstep <> t1' var
R6169:6178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6190:6194 Smallstep SimpleArith1 ::x_'==>'_x not
R6179:6179 Smallstep SimpleArith1 P constr
R6188:6189 Smallstep <> t2 var
R6182:6182 Smallstep SimpleArith1 C constr
R6184:6185 Smallstep <> n1 var
R6195:6195 Smallstep SimpleArith1 P constr
R6204:6206 Smallstep <> t2' var
R6198:6198 Smallstep SimpleArith1 C constr
R6200:6201 Smallstep <> n1 var
R6161:6165 Smallstep SimpleArith1 ::x_'==>'_x not
R6159:6160 Smallstep <> t2 var
R6166:6168 Smallstep <> t2' var
R6236:6239 Smallstep SimpleArith1 step ind
not 6217:6217 SimpleArith1 ::x_'==>'_x
def 6874:6884 SimpleArith1 test_step_1
R6943:6959 Smallstep SimpleArith1 ::x_'==>'_x not
R6894:6894 Smallstep SimpleArith1 P constr
R6929:6929 Smallstep SimpleArith1 P constr
R6938:6938 Smallstep SimpleArith1 C constr
R6932:6932 Smallstep SimpleArith1 C constr
R6905:6905 Smallstep SimpleArith1 P constr
R6914:6914 Smallstep SimpleArith1 C constr
R6908:6908 Smallstep SimpleArith1 C constr
R6960:6960 Smallstep SimpleArith1 P constr
R6991:6991 Smallstep SimpleArith1 P constr
R7000:7000 Smallstep SimpleArith1 C constr
R6994:6994 Smallstep SimpleArith1 C constr
R6971:6971 Smallstep SimpleArith1 C constr
R6975:6977 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7022:7029 Smallstep SimpleArith1 ST_Plus1 constr
R7022:7029 Smallstep SimpleArith1 ST_Plus1 constr
R7038:7054 Smallstep SimpleArith1 ST_PlusConstConst constr
R7038:7054 Smallstep SimpleArith1 ST_PlusConstConst constr
def 7295:7305 SimpleArith1 test_step_2
R7384:7400 Smallstep SimpleArith1 ::x_'==>'_x not
R7315:7315 Smallstep SimpleArith1 P constr
R7340:7340 Smallstep SimpleArith1 P constr
R7369:7369 Smallstep SimpleArith1 P constr
R7378:7378 Smallstep SimpleArith1 C constr
R7372:7372 Smallstep SimpleArith1 C constr
R7353:7353 Smallstep SimpleArith1 C constr
R7326:7326 Smallstep SimpleArith1 C constr
R7401:7401 Smallstep SimpleArith1 P constr
R7426:7426 Smallstep SimpleArith1 P constr
R7455:7455 Smallstep SimpleArith1 C constr
R7459:7461 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7439:7439 Smallstep SimpleArith1 C constr
R7412:7412 Smallstep SimpleArith1 C constr
R7483:7490 Smallstep SimpleArith1 ST_Plus2 constr
R7483:7490 Smallstep SimpleArith1 ST_Plus2 constr
R7499:7506 Smallstep SimpleArith1 ST_Plus2 constr
R7499:7506 Smallstep SimpleArith1 ST_Plus2 constr
R7515:7531 Smallstep SimpleArith1 ST_PlusConstConst constr
R7515:7531 Smallstep SimpleArith1 ST_PlusConstConst constr
R7556:7567 Smallstep SimpleArith1 <> mod
def 8173:8180 <> relation
R8196:8197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8199:8200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8198:8198 Smallstep <> X var
R8195:8195 Smallstep <> X var
def 9956:9968 <> deterministic
R9984:9991 Smallstep <> relation def
R9993:9993 Smallstep <> X var
R10018:10018 Smallstep <> X var
R10027:10030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10037:10040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10043:10045 Coq.Init.Logic <> :type_scope:x_'='_x not
R10041:10042 Smallstep <> y1 var
R10046:10047 Smallstep <> y2 var
R10031:10031 Smallstep <> R var
R10035:10036 Smallstep <> y2 var
R10033:10033 Smallstep <> x var
R10021:10021 Smallstep <> R var
R10025:10026 Smallstep <> y1 var
R10023:10023 Smallstep <> x var
mod 10058:10069 <> SimpleArith2
prf 10102:10119 SimpleArith2 step_deterministic
R10124:10136 Smallstep SimpleArith2 deterministic def
R10138:10141 Smallstep SimpleArith1 step ind
R10160:10172 Smallstep SimpleArith2 deterministic def
R10916:10927 Smallstep SimpleArith2 <> mod
R11619:11619 Coq.Init.Datatypes <> S constr
R11622:11622 Coq.Init.Datatypes <> S constr
R11619:11619 Coq.Init.Datatypes <> S constr
R11622:11622 Coq.Init.Datatypes <> S constr
R11659:11659 Coq.Init.Datatypes <> S constr
mod 12582:12593 <> SimpleArith3
prf 12626:12647 SimpleArith3 step_deterministic_alt
R12650:12662 Smallstep SimpleArith3 deterministic def
R12664:12667 Smallstep SimpleArith1 step ind
R12994:13005 Smallstep SimpleArith3 <> mod
ind 14158:14162 <> value
constr 14182:14188 <> v_const
R14168:14171 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14166:14167 Smallstep <> tm ind
R14202:14206 Smallstep <> value ind
R14209:14209 Smallstep <> C constr
R14211:14211 Smallstep <> n var
ind 15428:15431 <> step
constr 15459:15475 <> ST_PlusConstConst
constr 15545:15552 <> ST_Plus1
constr 15629:15636 <> ST_Plus2
R15437:15440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15443:15446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15441:15442 Smallstep <> tm ind
R15435:15436 Smallstep <> tm ind
R15795:15798 Smallstep <> step ind
R15518:15528 Smallstep <> ::x_'==>'_x not
R15503:15503 Smallstep <> P constr
R15513:15513 Smallstep <> C constr
R15515:15516 Smallstep <> n2 var
R15506:15506 Smallstep <> C constr
R15508:15509 Smallstep <> n1 var
R15529:15529 Smallstep <> C constr
R15534:15536 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15532:15533 Smallstep <> n1 var
R15537:15538 Smallstep <> n2 var
R15592:15603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15611:15615 Smallstep <> ::x_'==>'_x not
R15604:15604 Smallstep <> P constr
R15609:15610 Smallstep <> t2 var
R15606:15607 Smallstep <> t1 var
R15616:15616 Smallstep <> P constr
R15622:15623 Smallstep <> t2 var
R15618:15620 Smallstep <> t1' var
R15584:15588 Smallstep <> ::x_'==>'_x not
R15582:15583 Smallstep <> t1 var
R15589:15591 Smallstep <> t1' var
R15674:15723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15734:15745 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15753:15757 Smallstep <> ::x_'==>'_x not
R15746:15746 Smallstep <> P constr
R15751:15752 Smallstep <> t2 var
R15748:15749 Smallstep <> v1 var
R15758:15758 Smallstep <> P constr
R15763:15765 Smallstep <> t2' var
R15760:15761 Smallstep <> v1 var
R15726:15730 Smallstep <> ::x_'==>'_x not
R15724:15725 Smallstep <> t2 var
R15731:15733 Smallstep <> t2' var
R15666:15670 Smallstep <> value ind
R15672:15673 Smallstep <> v1 var
R15795:15798 Smallstep <> step ind
not 15776:15776 <> ::x_'==>'_x
prf 17073:17090 <> step_deterministic
R17096:17108 Smallstep <> deterministic def
R17110:17113 Smallstep <> step ind
R17132:17144 Smallstep <> deterministic def
prf 18987:19001 <> strong_progress
R19024:19028 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19048:19048 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19017:19021 Smallstep <> value ind
R19023:19023 Smallstep <> t var
R19029:19035 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19038:19039 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19041:19045 Smallstep <> ::x_'==>'_x not
R19040:19040 Smallstep <> t var
R19046:19047 Smallstep <> t' var
R19099:19105 Smallstep <> v_const constr
R19099:19105 Smallstep <> v_const constr
R19240:19240 Smallstep <> C constr
R19244:19246 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19240:19240 Smallstep <> C constr
R19244:19246 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19269:19285 Smallstep <> ST_PlusConstConst constr
R19269:19285 Smallstep <> ST_PlusConstConst constr
R19349:19349 Smallstep <> P constr
R19349:19349 Smallstep <> P constr
R19375:19382 Smallstep <> ST_Plus2 constr
R19375:19382 Smallstep <> ST_Plus2 constr
R19462:19462 Smallstep <> P constr
R19462:19462 Smallstep <> P constr
R19488:19495 Smallstep <> ST_Plus1 constr
R19488:19495 Smallstep <> ST_Plus1 constr
def 20171:20181 <> normal_form
R20195:20202 Smallstep <> relation def
R20204:20204 Smallstep <> X var
R20210:20210 Smallstep <> X var
R20225:20226 Coq.Init.Logic <> :type_scope:'~'_x not
R20227:20233 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20236:20237 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20238:20238 Smallstep <> R var
R20242:20243 Smallstep <> t' var
R20240:20240 Smallstep <> t var
prf 20793:20803 <> value_is_nf
R20826:20829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20830:20840 Smallstep <> normal_form def
R20847:20847 Smallstep <> v var
R20842:20845 Smallstep <> step ind
R20819:20823 Smallstep <> value ind
R20825:20825 Smallstep <> v var
R20866:20876 Smallstep <> normal_form def
prf 20965:20975 <> nf_is_value
R21009:21012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21013:21017 Smallstep <> value ind
R21019:21019 Smallstep <> t var
R20991:21001 Smallstep <> normal_form def
R21008:21008 Smallstep <> t var
R21003:21006 Smallstep <> step ind
R21080:21090 Smallstep <> normal_form def
R21126:21129 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21119:21123 Smallstep <> value ind
R21130:21136 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21139:21140 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21142:21146 Smallstep <> ::x_'==>'_x not
R21147:21148 Smallstep <> t' var
R21126:21129 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21119:21123 Smallstep <> value ind
R21130:21136 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21139:21140 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21142:21146 Smallstep <> ::x_'==>'_x not
R21147:21148 Smallstep <> t' var
R21187:21201 Smallstep <> strong_progress thm
R21187:21201 Smallstep <> strong_progress thm
prf 21306:21321 <> nf_same_as_value
R21355:21359 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21337:21347 Smallstep <> normal_form def
R21354:21354 Smallstep <> t var
R21349:21352 Smallstep <> step ind
R21360:21364 Smallstep <> value ind
R21366:21366 Smallstep <> t var
R21391:21401 Smallstep <> nf_is_value thm
R21391:21401 Smallstep <> nf_is_value thm
R21410:21420 Smallstep <> value_is_nf thm
R21410:21420 Smallstep <> value_is_nf thm
mod 22146:22150 <> Temp1
ind 22164:22168 Temp1 value
constr 22188:22194 Temp1 v_const
constr 22222:22228 Temp1 v_funny
R22174:22177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22172:22173 Smallstep Temp1 tm ind
R22208:22212 Smallstep <> value ind
R22215:22215 Smallstep Temp1 C constr
R22217:22217 Smallstep <> n var
R22294:22298 Smallstep <> value ind
R22301:22301 Smallstep Temp1 P constr
R22307:22307 Smallstep Temp1 C constr
R22309:22310 Smallstep <> n2 var
R22303:22304 Smallstep <> t1 var
ind 22375:22378 Temp1 step
constr 22406:22422 Temp1 ST_PlusConstConst
constr 22482:22489 Temp1 ST_Plus1
constr 22562:22569 Temp1 ST_Plus2
R22384:22387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22390:22393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22388:22389 Smallstep Temp1 tm ind
R22382:22383 Smallstep Temp1 tm ind
R22684:22687 Smallstep <> step ind
R22461:22465 Smallstep Temp1 ::x_'==>'_x not
R22446:22446 Smallstep Temp1 P constr
R22456:22456 Smallstep Temp1 C constr
R22458:22459 Smallstep <> n2 var
R22449:22449 Smallstep Temp1 C constr
R22451:22452 Smallstep <> n1 var
R22466:22466 Smallstep Temp1 C constr
R22471:22473 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22469:22470 Smallstep <> n1 var
R22474:22475 Smallstep <> n2 var
R22527:22536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22544:22548 Smallstep Temp1 ::x_'==>'_x not
R22537:22537 Smallstep Temp1 P constr
R22542:22543 Smallstep <> t2 var
R22539:22540 Smallstep <> t1 var
R22549:22549 Smallstep Temp1 P constr
R22555:22556 Smallstep <> t2 var
R22551:22553 Smallstep <> t1' var
R22519:22523 Smallstep Temp1 ::x_'==>'_x not
R22517:22518 Smallstep <> t1 var
R22524:22526 Smallstep <> t1' var
R22605:22614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22625:22634 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22642:22646 Smallstep Temp1 ::x_'==>'_x not
R22635:22635 Smallstep Temp1 P constr
R22640:22641 Smallstep <> t2 var
R22637:22638 Smallstep <> v1 var
R22647:22647 Smallstep Temp1 P constr
R22652:22654 Smallstep <> t2' var
R22649:22650 Smallstep <> v1 var
R22617:22621 Smallstep Temp1 ::x_'==>'_x not
R22615:22616 Smallstep <> t2 var
R22622:22624 Smallstep <> t2' var
R22597:22601 Smallstep Temp1 value ind
R22603:22604 Smallstep <> v1 var
R22684:22687 Smallstep Temp1 step ind
not 22665:22665 Temp1 ::x_'==>'_x
prf 22703:22731 Temp1 value_not_same_as_normal_form
R22737:22743 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22745:22746 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22754:22757 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22747:22751 Smallstep Temp1 value ind
R22753:22753 Smallstep <> v var
R22758:22759 Coq.Init.Logic <> :type_scope:'~'_x not
R22760:22770 Smallstep Temp1 normal_form def
R22777:22777 Smallstep <> v var
R22772:22775 Smallstep Temp1 step ind
R22832:22836 Smallstep Temp1 <> mod
mod 23051:23055 <> Temp2
ind 23069:23073 Temp2 value
constr 23093:23099 Temp2 v_const
R23079:23082 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23077:23078 Smallstep Temp2 tm ind
R23113:23117 Smallstep <> value ind
R23120:23120 Smallstep Temp2 C constr
R23122:23122 Smallstep <> n var
ind 23186:23189 Temp2 step
constr 23217:23224 Temp2 ST_Funny
constr 23306:23322 Temp2 ST_PlusConstConst
constr 23382:23389 Temp2 ST_Plus1
constr 23462:23469 Temp2 ST_Plus2
R23195:23198 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23201:23204 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23199:23200 Smallstep Temp2 tm ind
R23193:23194 Smallstep Temp2 tm ind
R23584:23587 Smallstep <> step ind
R23283:23287 Smallstep Temp2 ::x_'==>'_x not
R23280:23280 Smallstep Temp2 C constr
R23282:23282 Smallstep <> n var
R23288:23288 Smallstep Temp2 P constr
R23297:23297 Smallstep Temp2 C constr
R23291:23291 Smallstep Temp2 C constr
R23293:23293 Smallstep <> n var
R23361:23365 Smallstep Temp2 ::x_'==>'_x not
R23346:23346 Smallstep Temp2 P constr
R23356:23356 Smallstep Temp2 C constr
R23358:23359 Smallstep <> n2 var
R23349:23349 Smallstep Temp2 C constr
R23351:23352 Smallstep <> n1 var
R23366:23366 Smallstep Temp2 C constr
R23371:23373 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23369:23370 Smallstep <> n1 var
R23374:23375 Smallstep <> n2 var
R23427:23436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23444:23448 Smallstep Temp2 ::x_'==>'_x not
R23437:23437 Smallstep Temp2 P constr
R23442:23443 Smallstep <> t2 var
R23439:23440 Smallstep <> t1 var
R23449:23449 Smallstep Temp2 P constr
R23455:23456 Smallstep <> t2 var
R23451:23453 Smallstep <> t1' var
R23419:23423 Smallstep Temp2 ::x_'==>'_x not
R23417:23418 Smallstep <> t1 var
R23424:23426 Smallstep <> t1' var
R23505:23514 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23525:23534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23542:23546 Smallstep Temp2 ::x_'==>'_x not
R23535:23535 Smallstep Temp2 P constr
R23540:23541 Smallstep <> t2 var
R23537:23538 Smallstep <> v1 var
R23547:23547 Smallstep Temp2 P constr
R23552:23554 Smallstep <> t2' var
R23549:23550 Smallstep <> v1 var
R23517:23521 Smallstep Temp2 ::x_'==>'_x not
R23515:23516 Smallstep <> t2 var
R23522:23524 Smallstep <> t2' var
R23497:23501 Smallstep Temp2 value ind
R23503:23504 Smallstep <> v1 var
R23584:23587 Smallstep Temp2 step ind
not 23565:23565 Temp2 ::x_'==>'_x
prf 23603:23631 Temp2 value_not_same_as_normal_form
R23637:23643 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23645:23646 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23654:23657 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23647:23651 Smallstep Temp2 value ind
R23653:23653 Smallstep <> v var
R23658:23659 Coq.Init.Logic <> :type_scope:'~'_x not
R23660:23670 Smallstep Temp2 normal_form def
R23677:23677 Smallstep <> v var
R23672:23675 Smallstep Temp2 step ind
R23733:23737 Smallstep Temp2 <> mod
mod 24214:24218 <> Temp3
ind 24232:24236 Temp3 value
constr 24258:24264 Temp3 v_const
R24242:24245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24240:24241 Smallstep Temp3 tm ind
R24278:24282 Smallstep <> value ind
R24285:24285 Smallstep Temp3 C constr
R24287:24287 Smallstep <> n var
ind 24351:24354 Temp3 step
constr 24382:24398 Temp3 ST_PlusConstConst
constr 24458:24465 Temp3 ST_Plus1
R24360:24363 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24366:24369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24364:24365 Smallstep Temp3 tm ind
R24358:24359 Smallstep Temp3 tm ind
R24562:24565 Smallstep <> step ind
R24437:24441 Smallstep Temp3 ::x_'==>'_x not
R24422:24422 Smallstep Temp3 P constr
R24432:24432 Smallstep Temp3 C constr
R24434:24435 Smallstep <> n2 var
R24425:24425 Smallstep Temp3 C constr
R24427:24428 Smallstep <> n1 var
R24442:24442 Smallstep Temp3 C constr
R24447:24449 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24445:24446 Smallstep <> n1 var
R24450:24451 Smallstep <> n2 var
R24503:24512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24520:24524 Smallstep Temp3 ::x_'==>'_x not
R24513:24513 Smallstep Temp3 P constr
R24518:24519 Smallstep <> t2 var
R24515:24516 Smallstep <> t1 var
R24525:24525 Smallstep Temp3 P constr
R24531:24532 Smallstep <> t2 var
R24527:24529 Smallstep <> t1' var
R24495:24499 Smallstep Temp3 ::x_'==>'_x not
R24493:24494 Smallstep <> t1 var
R24500:24502 Smallstep <> t1' var
R24562:24565 Smallstep Temp3 step ind
not 24543:24543 Temp3 ::x_'==>'_x
prf 24624:24652 Temp3 value_not_same_as_normal_form
R24658:24664 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24666:24667 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24677:24680 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24668:24669 Coq.Init.Logic <> :type_scope:'~'_x not
R24670:24674 Smallstep Temp3 value ind
R24676:24676 Smallstep <> t var
R24681:24691 Smallstep Temp3 normal_form def
R24698:24698 Smallstep <> t var
R24693:24696 Smallstep Temp3 step ind
R24754:24758 Smallstep Temp3 <> mod
mod 24874:24878 <> Temp4
ind 25083:25084 Temp4 tm
constr 25100:25104 Temp4 ttrue
constr 25115:25120 Temp4 tfalse
constr 25131:25133 Temp4 tif
R25108:25109 Smallstep <> tm ind
R25124:25125 Smallstep <> tm ind
R25139:25142 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25145:25148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25151:25154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25155:25156 Smallstep <> tm ind
R25149:25150 Smallstep <> tm ind
R25143:25144 Smallstep <> tm ind
R25137:25138 Smallstep <> tm ind
ind 25170:25174 Temp4 value
constr 25196:25201 Temp4 v_true
constr 25221:25227 Temp4 v_false
R25180:25183 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25178:25179 Smallstep Temp4 tm ind
R25205:25209 Smallstep <> value ind
R25211:25215 Smallstep Temp4 ttrue constr
R25231:25235 Smallstep <> value ind
R25237:25242 Smallstep Temp4 tfalse constr
ind 25305:25308 Temp4 step
constr 25336:25344 Temp4 ST_IfTrue
constr 25395:25404 Temp4 ST_IfFalse
constr 25456:25460 Temp4 ST_If
R25314:25317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25320:25323 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25318:25319 Smallstep Temp4 tm ind
R25312:25313 Smallstep Temp4 tm ind
R25570:25573 Smallstep <> step ind
R25383:25387 Smallstep Temp4 ::x_'==>'_x not
R25368:25370 Smallstep Temp4 tif constr
R25381:25382 Smallstep <> t2 var
R25378:25379 Smallstep <> t1 var
R25372:25376 Smallstep Temp4 ttrue constr
R25388:25389 Smallstep <> t1 var
R25444:25448 Smallstep Temp4 ::x_'==>'_x not
R25428:25430 Smallstep Temp4 tif constr
R25442:25443 Smallstep <> t2 var
R25439:25440 Smallstep <> t1 var
R25432:25437 Smallstep Temp4 tfalse constr
R25449:25450 Smallstep <> t2 var
R25501:25510 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25523:25527 Smallstep Temp4 ::x_'==>'_x not
R25511:25513 Smallstep Temp4 tif constr
R25521:25522 Smallstep <> t3 var
R25518:25519 Smallstep <> t2 var
R25515:25516 Smallstep <> t1 var
R25528:25530 Smallstep Temp4 tif constr
R25539:25540 Smallstep <> t3 var
R25536:25537 Smallstep <> t2 var
R25532:25534 Smallstep <> t1' var
R25493:25497 Smallstep Temp4 ::x_'==>'_x not
R25491:25492 Smallstep <> t1 var
R25498:25500 Smallstep <> t1' var
R25570:25573 Smallstep Temp4 step ind
not 25551:25551 Temp4 ::x_'==>'_x
def 25811:25825 Temp4 bool_step_prop1
R25838:25842 Smallstep Temp4 ::x_'==>'_x not
R25832:25837 Smallstep Temp4 tfalse constr
R25843:25848 Smallstep Temp4 tfalse constr
def 25883:25897 Temp4 bool_step_prop2
R25988:25999 Smallstep Temp4 ::x_'==>'_x not
R25907:25909 Smallstep Temp4 tif constr
R25963:25965 Smallstep Temp4 tif constr
R25981:25986 Smallstep Temp4 tfalse constr
R25974:25979 Smallstep Temp4 tfalse constr
R25967:25972 Smallstep Temp4 tfalse constr
R25932:25934 Smallstep Temp4 tif constr
R25948:25952 Smallstep Temp4 ttrue constr
R25942:25946 Smallstep Temp4 ttrue constr
R25936:25940 Smallstep Temp4 ttrue constr
R25918:25922 Smallstep Temp4 ttrue constr
R26000:26004 Smallstep Temp4 ttrue constr
def 26039:26053 Temp4 bool_step_prop3
R26142:26154 Smallstep Temp4 ::x_'==>'_x not
R26063:26065 Smallstep Temp4 tif constr
R26136:26141 Smallstep Temp4 tfalse constr
R26106:26108 Smallstep Temp4 tif constr
R26122:26126 Smallstep Temp4 ttrue constr
R26116:26120 Smallstep Temp4 ttrue constr
R26110:26114 Smallstep Temp4 ttrue constr
R26075:26077 Smallstep Temp4 tif constr
R26091:26095 Smallstep Temp4 ttrue constr
R26085:26089 Smallstep Temp4 ttrue constr
R26079:26083 Smallstep Temp4 ttrue constr
R26155:26157 Smallstep Temp4 tif constr
R26210:26215 Smallstep Temp4 tfalse constr
R26180:26182 Smallstep Temp4 tif constr
R26196:26200 Smallstep Temp4 ttrue constr
R26190:26194 Smallstep Temp4 ttrue constr
R26184:26188 Smallstep Temp4 ttrue constr
R26166:26170 Smallstep Temp4 ttrue constr
def 26458:26478 Temp4 bool_step_prop3_proof
R26564:26579 Smallstep Temp4 ::x_'==>'_x not
R26485:26487 Smallstep Temp4 tif constr
R26558:26563 Smallstep Temp4 tfalse constr
R26528:26530 Smallstep Temp4 tif constr
R26544:26548 Smallstep Temp4 ttrue constr
R26538:26542 Smallstep Temp4 ttrue constr
R26532:26536 Smallstep Temp4 ttrue constr
R26497:26499 Smallstep Temp4 tif constr
R26513:26517 Smallstep Temp4 ttrue constr
R26507:26511 Smallstep Temp4 ttrue constr
R26501:26505 Smallstep Temp4 ttrue constr
R26580:26582 Smallstep Temp4 tif constr
R26641:26646 Smallstep Temp4 tfalse constr
R26609:26611 Smallstep Temp4 tif constr
R26625:26629 Smallstep Temp4 ttrue constr
R26619:26623 Smallstep Temp4 ttrue constr
R26613:26617 Smallstep Temp4 ttrue constr
R26593:26597 Smallstep Temp4 ttrue constr
prf 26879:26893 Temp4 strong_progress
R26916:26920 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26940:26940 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26909:26913 Smallstep Temp4 value ind
R26915:26915 Smallstep <> t var
R26921:26927 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26930:26931 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26933:26937 Smallstep Temp4 ::x_'==>'_x not
R26932:26932 Smallstep <> t var
R26938:26939 Smallstep <> t' var
prf 27062:27079 Temp4 step_deterministic
R27085:27097 Smallstep Temp4 deterministic def
R27099:27102 Smallstep Temp4 step ind
mod 27161:27165 <> Temp4.Temp5
ind 27935:27938 Temp4.Temp5 step
constr 27966:27974 Temp4.Temp5 ST_IfTrue
constr 28025:28034 Temp4.Temp5 ST_IfFalse
constr 28086:28090 Temp4.Temp5 ST_If
constr 28176:28190 Temp4.Temp5 ST_ShortCircuit
R27944:27947 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27950:27953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27948:27949 Smallstep Temp4.Temp5 tm ind
R27942:27943 Smallstep Temp4.Temp5 tm ind
R28316:28319 Smallstep <> step ind
R28013:28017 Smallstep Temp4.Temp5 ::x_'==>'_x not
R27998:28000 Smallstep Temp4.Temp5 tif constr
R28011:28012 Smallstep <> t2 var
R28008:28009 Smallstep <> t1 var
R28002:28006 Smallstep Temp4.Temp5 ttrue constr
R28018:28019 Smallstep <> t1 var
R28074:28078 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28058:28060 Smallstep Temp4.Temp5 tif constr
R28072:28073 Smallstep <> t2 var
R28069:28070 Smallstep <> t1 var
R28062:28067 Smallstep Temp4.Temp5 tfalse constr
R28079:28080 Smallstep <> t2 var
R28131:28140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28153:28157 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28141:28143 Smallstep Temp4.Temp5 tif constr
R28151:28152 Smallstep <> t3 var
R28148:28149 Smallstep <> t2 var
R28145:28146 Smallstep <> t1 var
R28158:28160 Smallstep Temp4.Temp5 tif constr
R28169:28170 Smallstep <> t3 var
R28166:28167 Smallstep <> t2 var
R28162:28164 Smallstep <> t1' var
R28123:28127 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28121:28122 Smallstep <> t1 var
R28128:28130 Smallstep <> t1' var
R28241:28244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28253:28256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28264:28267 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28280:28284 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28268:28270 Smallstep Temp4.Temp5 tif constr
R28278:28279 Smallstep <> t3 var
R28275:28276 Smallstep <> t2 var
R28272:28273 Smallstep <> t1 var
R28285:28286 Smallstep <> t2 var
R28259:28261 Coq.Init.Logic <> :type_scope:x_'='_x not
R28257:28258 Smallstep <> t2 var
R28262:28263 Smallstep <> t3 var
R28245:28249 Smallstep Temp4.Temp5 value ind
R28251:28252 Smallstep <> t3 var
R28233:28237 Smallstep Temp4.Temp5 value ind
R28239:28240 Smallstep <> t2 var
R28316:28319 Smallstep Temp4.Temp5 step ind
not 28297:28297 Temp4.Temp5 ::x_'==>'_x
def 28340:28354 Temp4.Temp5 bool_step_prop4
R28445:28463 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28368:28370 Smallstep Temp4.Temp5 tif constr
R28439:28444 Smallstep Temp4.Temp5 tfalse constr
R28420:28425 Smallstep Temp4.Temp5 tfalse constr
R28385:28387 Smallstep Temp4.Temp5 tif constr
R28401:28405 Smallstep Temp4.Temp5 ttrue constr
R28395:28399 Smallstep Temp4.Temp5 ttrue constr
R28389:28393 Smallstep Temp4.Temp5 ttrue constr
R28464:28469 Smallstep Temp4.Temp5 tfalse constr
def 28481:28501 Temp4.Temp5 bool_step_prop4_holds
R28507:28521 Smallstep Temp4.Temp5 bool_step_prop4 def
R29506:29510 Smallstep Temp4.Temp5 <> mod
R29517:29521 Smallstep Temp4 <> mod
ind 30537:30541 <> multi
constr 30588:30597 <> multi_refl
constr 30634:30643 <> multi_step
R30556:30563 Smallstep <> relation def
R30565:30565 Smallstep <> X var
R30570:30577 Smallstep <> relation def
R30618:30622 Smallstep <> multi ind
R30628:30628 Smallstep <> x var
R30626:30626 Smallstep <> x var
R30692:30715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30727:30750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30751:30755 Smallstep <> multi ind
R30761:30761 Smallstep <> z var
R30759:30759 Smallstep <> x var
R30716:30720 Smallstep <> multi ind
R30726:30726 Smallstep <> z var
R30724:30724 Smallstep <> y var
R30691:30691 Smallstep <> y var
R30689:30689 Smallstep <> x var
R31482:31486 Smallstep <> multi ind
R31488:31491 Smallstep <> step ind
not 31462:31462 <> ::x_'==>*'_x
prf 32036:32042 <> multi_R
R32065:32072 Smallstep <> relation def
R32074:32074 Smallstep <> X var
R32084:32084 Smallstep <> X var
R32100:32103 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32105:32109 Smallstep <> multi ind
R32111:32111 Smallstep <> R var
R32116:32116 Smallstep <> y var
R32114:32114 Smallstep <> x var
R32095:32095 Smallstep <> R var
R32099:32099 Smallstep <> y var
R32097:32097 Smallstep <> x var
R32154:32163 Smallstep <> multi_step constr
R32154:32163 Smallstep <> multi_step constr
R32188:32197 Smallstep <> multi_refl constr
R32188:32197 Smallstep <> multi_refl constr
prf 32258:32268 <> multi_trans
R32294:32301 Smallstep <> relation def
R32303:32303 Smallstep <> X var
R32315:32315 Smallstep <> X var
R32336:32346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32358:32367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32368:32372 Smallstep <> multi ind
R32378:32378 Smallstep <> z var
R32376:32376 Smallstep <> x var
R32374:32374 Smallstep <> R var
R32347:32351 Smallstep <> multi ind
R32357:32357 Smallstep <> z var
R32355:32355 Smallstep <> y var
R32353:32353 Smallstep <> R var
R32325:32329 Smallstep <> multi ind
R32335:32335 Smallstep <> y var
R32333:32333 Smallstep <> x var
R32331:32331 Smallstep <> R var
R32497:32506 Smallstep <> multi_step constr
R32497:32506 Smallstep <> multi_step constr
prf 32841:32856 <> test_multistep_1
R32914:32928 Smallstep <> ::x_'==>*'_x not
R32865:32865 Smallstep <> P constr
R32900:32900 Smallstep <> P constr
R32909:32909 Smallstep <> C constr
R32903:32903 Smallstep <> C constr
R32876:32876 Smallstep <> P constr
R32885:32885 Smallstep <> C constr
R32879:32879 Smallstep <> C constr
R32929:32929 Smallstep <> C constr
R32932:32932 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32938:32942 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32948:32948 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32934:32936 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32944:32946 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32996:32996 Smallstep <> P constr
R33043:33043 Smallstep <> P constr
R33052:33052 Smallstep <> C constr
R33046:33046 Smallstep <> C constr
R33015:33015 Smallstep <> C constr
R33019:33021 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32967:32976 Smallstep <> multi_step constr
R32996:32996 Smallstep <> P constr
R33043:33043 Smallstep <> P constr
R33052:33052 Smallstep <> C constr
R33046:33046 Smallstep <> C constr
R33015:33015 Smallstep <> C constr
R33019:33021 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32967:32976 Smallstep <> multi_step constr
R33068:33075 Smallstep <> ST_Plus1 constr
R33068:33075 Smallstep <> ST_Plus1 constr
R33084:33100 Smallstep <> ST_PlusConstConst constr
R33084:33100 Smallstep <> ST_PlusConstConst constr
R33140:33140 Smallstep <> P constr
R33187:33187 Smallstep <> C constr
R33191:33193 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33159:33159 Smallstep <> C constr
R33163:33165 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33111:33120 Smallstep <> multi_step constr
R33140:33140 Smallstep <> P constr
R33187:33187 Smallstep <> C constr
R33191:33193 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33159:33159 Smallstep <> C constr
R33163:33165 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33111:33120 Smallstep <> multi_step constr
R33208:33215 Smallstep <> ST_Plus2 constr
R33208:33215 Smallstep <> ST_Plus2 constr
R33224:33230 Smallstep <> v_const constr
R33224:33230 Smallstep <> v_const constr
R33241:33257 Smallstep <> ST_PlusConstConst constr
R33241:33257 Smallstep <> ST_PlusConstConst constr
R33268:33274 Smallstep <> multi_R thm
R33268:33274 Smallstep <> multi_R thm
R33285:33301 Smallstep <> ST_PlusConstConst constr
R33285:33301 Smallstep <> ST_PlusConstConst constr
prf 33451:33467 <> test_multistep_1'
R33525:33538 Smallstep <> ::x_'==>*'_x not
R33476:33476 Smallstep <> P constr
R33511:33511 Smallstep <> P constr
R33520:33520 Smallstep <> C constr
R33514:33514 Smallstep <> C constr
R33487:33487 Smallstep <> P constr
R33496:33496 Smallstep <> C constr
R33490:33490 Smallstep <> C constr
R33539:33539 Smallstep <> C constr
R33542:33542 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33548:33552 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33558:33558 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33544:33546 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33554:33556 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33578:33587 Smallstep <> multi_step constr
R33578:33587 Smallstep <> multi_step constr
R33596:33603 Smallstep <> ST_Plus1 constr
R33596:33603 Smallstep <> ST_Plus1 constr
R33612:33628 Smallstep <> ST_PlusConstConst constr
R33612:33628 Smallstep <> ST_PlusConstConst constr
R33640:33649 Smallstep <> multi_step constr
R33640:33649 Smallstep <> multi_step constr
R33658:33665 Smallstep <> ST_Plus2 constr
R33658:33665 Smallstep <> ST_Plus2 constr
R33674:33680 Smallstep <> v_const constr
R33674:33680 Smallstep <> v_const constr
R33691:33707 Smallstep <> ST_PlusConstConst constr
R33691:33707 Smallstep <> ST_PlusConstConst constr
R33719:33728 Smallstep <> multi_step constr
R33719:33728 Smallstep <> multi_step constr
R33737:33753 Smallstep <> ST_PlusConstConst constr
R33737:33753 Smallstep <> ST_PlusConstConst constr
R33764:33773 Smallstep <> multi_refl constr
R33764:33773 Smallstep <> multi_refl constr
prf 33848:33863 <> test_multistep_2
R33871:33876 Smallstep <> ::x_'==>*'_x not
R33868:33868 Smallstep <> C constr
R33877:33877 Smallstep <> C constr
prf 33996:34011 <> test_multistep_3
R34033:34047 Smallstep <> ::x_'==>*'_x not
R34020:34020 Smallstep <> P constr
R34029:34029 Smallstep <> C constr
R34023:34023 Smallstep <> C constr
R34048:34048 Smallstep <> P constr
R34057:34057 Smallstep <> C constr
R34051:34051 Smallstep <> C constr
prf 34168:34183 <> test_multistep_4
R34261:34274 Smallstep <> ::x_'==>*'_x not
R34192:34192 Smallstep <> P constr
R34217:34217 Smallstep <> P constr
R34246:34246 Smallstep <> P constr
R34255:34255 Smallstep <> C constr
R34249:34249 Smallstep <> C constr
R34230:34230 Smallstep <> C constr
R34203:34203 Smallstep <> C constr
R34275:34275 Smallstep <> P constr
R34300:34300 Smallstep <> C constr
R34304:34307 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34313:34313 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34309:34311 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34286:34286 Smallstep <> C constr
R34350:34350 Smallstep <> P constr
R34359:34359 Smallstep <> P constr
R34368:34368 Smallstep <> C constr
R34372:34374 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34362:34362 Smallstep <> C constr
R34353:34353 Smallstep <> C constr
R34333:34342 Smallstep <> multi_step constr
R34350:34350 Smallstep <> P constr
R34359:34359 Smallstep <> P constr
R34368:34368 Smallstep <> C constr
R34372:34374 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34362:34362 Smallstep <> C constr
R34353:34353 Smallstep <> C constr
R34333:34342 Smallstep <> multi_step constr
R34412:34418 Smallstep <> multi_R thm
R34412:34418 Smallstep <> multi_R thm
def 34700:34715 <> step_normal_form
R34720:34730 Smallstep <> normal_form def
R34732:34735 Smallstep <> step ind
def 34750:34763 <> normal_form_of
R34773:34774 Smallstep <> tm ind
R34792:34795 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R34784:34789 Smallstep <> ::x_'==>*'_x not
R34783:34783 Smallstep <> t var
R34790:34791 Smallstep <> t' var
R34796:34811 Smallstep <> step_normal_form def
R34813:34814 Smallstep <> t' var
prf 35261:35279 <> normal_forms_unique
R35284:35296 Smallstep <> deterministic def
R35298:35311 Smallstep <> normal_form_of def
R35383:35395 Smallstep <> deterministic def
R35405:35418 Smallstep <> normal_form_of def
def 35885:35895 <> normalizing
R35909:35916 Smallstep <> relation def
R35918:35918 Smallstep <> X var
R35936:35942 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R35945:35950 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R35965:35968 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35952:35956 Smallstep <> multi ind
R35958:35958 Smallstep <> R var
R35963:35964 Smallstep <> t' var
R35961:35961 Smallstep <> t var
R35969:35979 Smallstep <> normal_form def
R35983:35984 Smallstep <> t' var
R35981:35981 Smallstep <> R var
prf 36378:36394 <> multistep_congr_1
R36432:36440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36448:36453 Smallstep <> ::x_'==>*'_x not
R36441:36441 Smallstep <> P constr
R36446:36447 Smallstep <> t2 var
R36443:36444 Smallstep <> t1 var
R36454:36454 Smallstep <> P constr
R36460:36461 Smallstep <> t2 var
R36456:36458 Smallstep <> t1' var
R36423:36428 Smallstep <> ::x_'==>*'_x not
R36421:36422 Smallstep <> t1 var
R36429:36431 Smallstep <> t1' var
R36535:36544 Smallstep <> multi_refl constr
R36535:36544 Smallstep <> multi_refl constr
R36593:36593 Smallstep <> P constr
R36576:36585 Smallstep <> multi_step constr
R36593:36593 Smallstep <> P constr
R36576:36585 Smallstep <> multi_step constr
R36616:36623 Smallstep <> ST_Plus1 constr
R36616:36623 Smallstep <> ST_Plus1 constr
prf 36722:36738 <> multistep_congr_2
R36773:36781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36793:36801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36809:36814 Smallstep <> ::x_'==>*'_x not
R36802:36802 Smallstep <> P constr
R36807:36808 Smallstep <> t2 var
R36804:36805 Smallstep <> t1 var
R36815:36815 Smallstep <> P constr
R36820:36822 Smallstep <> t2' var
R36817:36818 Smallstep <> t1 var
R36784:36789 Smallstep <> ::x_'==>*'_x not
R36782:36783 Smallstep <> t2 var
R36790:36792 Smallstep <> t2' var
R36765:36769 Smallstep <> value ind
R36771:36772 Smallstep <> t1 var
R36883:36892 Smallstep <> multi_refl constr
R36883:36892 Smallstep <> multi_refl constr
R36921:36921 Smallstep <> P constr
R36904:36913 Smallstep <> multi_step constr
R36921:36921 Smallstep <> P constr
R36904:36913 Smallstep <> multi_step constr
R36944:36951 Smallstep <> ST_Plus2 constr
R36944:36951 Smallstep <> ST_Plus2 constr
prf 38188:38203 <> step_normalizing
R38209:38219 Smallstep <> normalizing def
R38221:38224 Smallstep <> step ind
R38243:38253 Smallstep <> normalizing def
R38299:38299 Smallstep <> C constr
R38299:38299 Smallstep <> C constr
R38340:38349 Smallstep <> multi_refl constr
R38340:38349 Smallstep <> multi_refl constr
R38474:38489 Smallstep <> nf_same_as_value thm
R38474:38489 Smallstep <> nf_same_as_value thm
R38474:38489 Smallstep <> nf_same_as_value thm
R38498:38504 Smallstep <> v_const constr
R38498:38504 Smallstep <> v_const constr
R38707:38722 Smallstep <> nf_same_as_value thm
R38707:38722 Smallstep <> nf_same_as_value thm
R38707:38722 Smallstep <> nf_same_as_value thm
R38740:38755 Smallstep <> nf_same_as_value thm
R38740:38755 Smallstep <> nf_same_as_value thm
R38740:38755 Smallstep <> nf_same_as_value thm
R38886:38886 Smallstep <> C constr
R38891:38893 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R38886:38886 Smallstep <> C constr
R38891:38893 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R38965:38965 Smallstep <> P constr
R38968:38968 Smallstep <> C constr
R38947:38957 Smallstep <> multi_trans thm
R38965:38965 Smallstep <> P constr
R38968:38968 Smallstep <> C constr
R38947:38957 Smallstep <> multi_trans thm
R38995:39011 Smallstep <> multistep_congr_1 thm
R38995:39011 Smallstep <> multistep_congr_1 thm
R39072:39072 Smallstep <> P constr
R39082:39082 Smallstep <> C constr
R39075:39075 Smallstep <> C constr
R39041:39051 Smallstep <> multi_trans thm
R39072:39072 Smallstep <> P constr
R39082:39082 Smallstep <> C constr
R39075:39075 Smallstep <> C constr
R39041:39051 Smallstep <> multi_trans thm
R39106:39122 Smallstep <> multistep_congr_2 thm
R39106:39122 Smallstep <> multistep_congr_2 thm
R39131:39137 Smallstep <> v_const constr
R39131:39137 Smallstep <> v_const constr
R39167:39173 Smallstep <> multi_R thm
R39167:39173 Smallstep <> multi_R thm
R39182:39198 Smallstep <> ST_PlusConstConst constr
R39182:39198 Smallstep <> ST_PlusConstConst constr
R39237:39252 Smallstep <> nf_same_as_value thm
R39237:39252 Smallstep <> nf_same_as_value thm
R39237:39252 Smallstep <> nf_same_as_value thm
R39261:39267 Smallstep <> v_const constr
R39261:39267 Smallstep <> v_const constr
prf 39794:39808 <> eval__multistep
R39832:39835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39837:39842 Smallstep <> ::x_'==>*'_x not
R39836:39836 Smallstep <> t var
R39843:39843 Smallstep <> C constr
R39845:39845 Smallstep <> n var
R39827:39830 Smallstep <> ::x_'\\'_x not
R39826:39826 Smallstep <> t var
R39831:39831 Smallstep <> n var
R41201:41210 Smallstep <> multi_refl constr
R41201:41210 Smallstep <> multi_refl constr
R41266:41266 Smallstep <> P constr
R41269:41269 Smallstep <> C constr
R41248:41258 Smallstep <> multi_trans thm
R41266:41266 Smallstep <> P constr
R41269:41269 Smallstep <> C constr
R41248:41258 Smallstep <> multi_trans thm
R41295:41311 Smallstep <> multistep_congr_1 thm
R41295:41311 Smallstep <> multistep_congr_1 thm
R41359:41359 Smallstep <> P constr
R41369:41369 Smallstep <> C constr
R41362:41362 Smallstep <> C constr
R41341:41351 Smallstep <> multi_trans thm
R41359:41359 Smallstep <> P constr
R41369:41369 Smallstep <> C constr
R41362:41362 Smallstep <> C constr
R41341:41351 Smallstep <> multi_trans thm
R41383:41399 Smallstep <> multistep_congr_2 thm
R41383:41399 Smallstep <> multistep_congr_2 thm
R41417:41423 Smallstep <> v_const constr
R41417:41423 Smallstep <> v_const constr
R41453:41459 Smallstep <> multi_R thm
R41453:41459 Smallstep <> multi_R thm
R41468:41484 Smallstep <> ST_PlusConstConst constr
R41468:41484 Smallstep <> ST_PlusConstConst constr
prf 42695:42704 <> step__eval
R42736:42744 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42752:42760 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42762:42765 Smallstep <> ::x_'\\'_x not
R42761:42761 Smallstep <> t var
R42766:42766 Smallstep <> n var
R42747:42750 Smallstep <> ::x_'\\'_x not
R42745:42746 Smallstep <> t' var
R42751:42751 Smallstep <> n var
R42729:42733 Smallstep <> ::x_'==>'_x not
R42728:42728 Smallstep <> t var
R42734:42735 Smallstep <> t' var
R42878:42883 Smallstep <> E_Plus constr
R42878:42883 Smallstep <> E_Plus constr
R42892:42898 Smallstep <> E_Const constr
R42892:42898 Smallstep <> E_Const constr
R42907:42913 Smallstep <> E_Const constr
R42907:42913 Smallstep <> E_Const constr
R42944:42949 Smallstep <> E_Plus constr
R42944:42949 Smallstep <> E_Plus constr
R43004:43009 Smallstep <> E_Plus constr
R43004:43009 Smallstep <> E_Plus constr
prf 43471:43485 <> multistep__eval
R43523:43526 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43527:43533 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43535:43536 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43545:43548 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R43539:43541 Coq.Init.Logic <> :type_scope:x_'='_x not
R43537:43538 Smallstep <> t' var
R43542:43542 Smallstep <> C constr
R43544:43544 Smallstep <> n var
R43550:43553 Smallstep <> ::x_'\\'_x not
R43549:43549 Smallstep <> t var
R43554:43554 Smallstep <> n var
R43504:43517 Smallstep <> normal_form_of def
R43521:43522 Smallstep <> t' var
R43519:43519 Smallstep <> t var
R43586:43599 Smallstep <> normal_form_of def
R43654:43669 Smallstep <> step_normal_form def
R43707:43717 Smallstep <> nf_is_value thm
R43707:43717 Smallstep <> nf_is_value thm
R43796:43802 Smallstep <> E_Const constr
R43796:43802 Smallstep <> E_Const constr
R43935:43944 Smallstep <> step__eval thm
R43935:43944 Smallstep <> step__eval thm
prf 44472:44481 <> evalF_eval
R44510:44514 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44506:44508 Coq.Init.Logic <> :type_scope:x_'='_x not
R44499:44503 Smallstep <> evalF def
R44505:44505 Smallstep <> t var
R44509:44509 Smallstep <> n var
R44516:44519 Smallstep <> ::x_'\\'_x not
R44515:44515 Smallstep <> t var
R44520:44520 Smallstep <> n var
mod 44758:44765 <> Combined
ind 44779:44780 Combined tm
constr 44796:44796 Combined C
constr 44814:44814 Combined P
constr 44837:44841 Combined ttrue
constr 44852:44857 Combined tfalse
constr 44868:44870 Combined tif
R44803:44806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44807:44808 Smallstep <> tm ind
R44800:44802 Coq.Init.Datatypes <> nat ind
R44820:44823 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44826:44829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44830:44831 Smallstep <> tm ind
R44824:44825 Smallstep <> tm ind
R44818:44819 Smallstep <> tm ind
R44845:44846 Smallstep <> tm ind
R44861:44862 Smallstep <> tm ind
R44876:44879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44882:44885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44888:44891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44892:44893 Smallstep <> tm ind
R44886:44887 Smallstep <> tm ind
R44880:44881 Smallstep <> tm ind
R44874:44875 Smallstep <> tm ind
ind 44907:44911 Combined value
constr 44933:44939 Combined v_const
constr 44969:44974 Combined v_true
constr 44994:45000 Combined v_false
R44917:44920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44915:44916 Smallstep Combined tm ind
R44953:44957 Smallstep <> value ind
R44960:44960 Smallstep Combined C constr
R44962:44962 Smallstep <> n var
R44978:44982 Smallstep <> value ind
R44984:44988 Smallstep Combined ttrue constr
R45004:45008 Smallstep <> value ind
R45010:45015 Smallstep Combined tfalse constr
ind 45078:45081 Combined step
constr 45109:45125 Combined ST_PlusConstConst
constr 45185:45192 Combined ST_Plus1
constr 45265:45272 Combined ST_Plus2
constr 45363:45371 Combined ST_IfTrue
constr 45422:45431 Combined ST_IfFalse
constr 45483:45487 Combined ST_If
R45087:45090 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45093:45096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45091:45092 Smallstep Combined tm ind
R45085:45086 Smallstep Combined tm ind
R45597:45600 Smallstep <> step ind
R45164:45168 Smallstep Combined ::x_'==>'_x not
R45149:45149 Smallstep Combined P constr
R45159:45159 Smallstep Combined C constr
R45161:45162 Smallstep <> n2 var
R45152:45152 Smallstep Combined C constr
R45154:45155 Smallstep <> n1 var
R45169:45169 Smallstep Combined C constr
R45174:45176 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45172:45173 Smallstep <> n1 var
R45177:45178 Smallstep <> n2 var
R45230:45239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45247:45251 Smallstep Combined ::x_'==>'_x not
R45240:45240 Smallstep Combined P constr
R45245:45246 Smallstep <> t2 var
R45242:45243 Smallstep <> t1 var
R45252:45252 Smallstep Combined P constr
R45258:45259 Smallstep <> t2 var
R45254:45256 Smallstep <> t1' var
R45222:45226 Smallstep Combined ::x_'==>'_x not
R45220:45221 Smallstep <> t1 var
R45227:45229 Smallstep <> t1' var
R45308:45317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45328:45337 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45345:45349 Smallstep Combined ::x_'==>'_x not
R45338:45338 Smallstep Combined P constr
R45343:45344 Smallstep <> t2 var
R45340:45341 Smallstep <> v1 var
R45350:45350 Smallstep Combined P constr
R45355:45357 Smallstep <> t2' var
R45352:45353 Smallstep <> v1 var
R45320:45324 Smallstep Combined ::x_'==>'_x not
R45318:45319 Smallstep <> t2 var
R45325:45327 Smallstep <> t2' var
R45300:45304 Smallstep Combined value ind
R45306:45307 Smallstep <> v1 var
R45410:45414 Smallstep Combined ::x_'==>'_x not
R45395:45397 Smallstep Combined tif constr
R45408:45409 Smallstep <> t2 var
R45405:45406 Smallstep <> t1 var
R45399:45403 Smallstep Combined ttrue constr
R45415:45416 Smallstep <> t1 var
R45471:45475 Smallstep Combined ::x_'==>'_x not
R45455:45457 Smallstep Combined tif constr
R45469:45470 Smallstep <> t2 var
R45466:45467 Smallstep <> t1 var
R45459:45464 Smallstep Combined tfalse constr
R45476:45477 Smallstep <> t2 var
R45528:45537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45550:45554 Smallstep Combined ::x_'==>'_x not
R45538:45540 Smallstep Combined tif constr
R45548:45549 Smallstep <> t3 var
R45545:45546 Smallstep <> t2 var
R45542:45543 Smallstep <> t1 var
R45555:45557 Smallstep Combined tif constr
R45566:45567 Smallstep <> t3 var
R45563:45564 Smallstep <> t2 var
R45559:45561 Smallstep <> t1' var
R45520:45524 Smallstep Combined ::x_'==>'_x not
R45518:45519 Smallstep <> t1 var
R45525:45527 Smallstep <> t1' var
R45597:45600 Smallstep Combined step ind
not 45578:45578 Combined ::x_'==>'_x
prf 45936:45953 Combined step_deterministic
R45957:45969 Smallstep Combined deterministic def
R45971:45974 Smallstep Combined step ind
R45993:46005 Smallstep Combined deterministic def
R46821:46823 Coq.Init.Logic <> :type_scope:x_'='_x not
R46821:46823 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 46899:46917 Combined not_strong_progress
R46922:46928 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46930:46933 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46934:46936 Coq.Init.Logic <> :type_scope:'~'_x not
R46969:46969 Coq.Init.Logic <> :type_scope:'~'_x not
R46944:46948 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46968:46968 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46937:46941 Smallstep Combined value ind
R46943:46943 Smallstep <> t var
R46949:46955 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46958:46959 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46961:46965 Smallstep Combined ::x_'==>'_x not
R46960:46960 Smallstep <> t var
R46966:46967 Smallstep <> t' var
R46989:46989 Smallstep Combined P constr
R46997:47001 Smallstep Combined ttrue constr
R46992:46992 Smallstep Combined C constr
R46989:46989 Smallstep Combined P constr
R46997:47001 Smallstep Combined ttrue constr
R46992:46992 Smallstep Combined C constr
R47012:47014 Coq.Init.Logic <> not def
R47159:47166 Smallstep Combined <> mod
ind 47688:47691 <> aval
constr 47713:47718 <> av_num
R47699:47702 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47695:47698 Imp <> aexp ind
R47732:47735 Smallstep <> aval ind
R47738:47741 Imp <> ANum constr
R47743:47743 Smallstep <> n var
ind 48043:48047 <> astep
constr 48088:48092 <> AS_Id
constr 48147:48153 <> AS_Plus
constr 48235:48242 <> AS_Plus1
constr 48342:48349 <> AS_Plus2
constr 48466:48473 <> AS_Minus
constr 48564:48572 <> AS_Minus1
constr 48674:48682 <> AS_Minus2
constr 48801:48807 <> AS_Mult
constr 48896:48903 <> AS_Mult1
constr 49011:49018 <> AS_Mult2
R48056:48059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48064:48067 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48072:48075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48068:48071 Imp <> aexp ind
R48060:48063 Imp <> aexp ind
R48051:48055 Imp <> state def
R49169:49173 Smallstep <> astep ind
R48120:48122 Smallstep <> ::x_'/'_x_'==>a'_x not
R48125:48130 Smallstep <> ::x_'/'_x_'==>a'_x not
R48123:48124 Smallstep <> st var
R48115:48117 Imp <> AId constr
R48119:48119 Smallstep <> i var
R48131:48134 Imp <> ANum constr
R48137:48138 Smallstep <> st var
R48140:48140 Smallstep <> i var
R48205:48207 Smallstep <> ::x_'/'_x_'==>a'_x not
R48210:48215 Smallstep <> ::x_'/'_x_'==>a'_x not
R48208:48209 Smallstep <> st var
R48180:48184 Imp <> APlus constr
R48197:48200 Imp <> ANum constr
R48202:48203 Smallstep <> n2 var
R48187:48190 Imp <> ANum constr
R48192:48193 Smallstep <> n1 var
R48216:48219 Imp <> ANum constr
R48224:48226 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R48222:48223 Smallstep <> n1 var
R48227:48228 Smallstep <> n2 var
R48289:48298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48299:48299 Smallstep <> ::x_'/'_x_'==>a'_x not
R48311:48314 Smallstep <> ::x_'/'_x_'==>a'_x not
R48317:48323 Smallstep <> ::x_'/'_x_'==>a'_x not
R48336:48336 Smallstep <> ::x_'/'_x_'==>a'_x not
R48315:48316 Smallstep <> st var
R48300:48304 Imp <> APlus constr
R48309:48310 Smallstep <> a2 var
R48306:48307 Smallstep <> a1 var
R48324:48328 Imp <> APlus constr
R48334:48335 Smallstep <> a2 var
R48330:48332 Smallstep <> a1' var
R48275:48277 Smallstep <> ::x_'/'_x_'==>a'_x not
R48280:48285 Smallstep <> ::x_'/'_x_'==>a'_x not
R48278:48279 Smallstep <> st var
R48273:48274 Smallstep <> a1 var
R48286:48288 Smallstep <> a1' var
R48387:48396 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48413:48422 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48423:48423 Smallstep <> ::x_'/'_x_'==>a'_x not
R48435:48438 Smallstep <> ::x_'/'_x_'==>a'_x not
R48441:48447 Smallstep <> ::x_'/'_x_'==>a'_x not
R48460:48460 Smallstep <> ::x_'/'_x_'==>a'_x not
R48439:48440 Smallstep <> st var
R48424:48428 Imp <> APlus constr
R48433:48434 Smallstep <> a2 var
R48430:48431 Smallstep <> v1 var
R48448:48452 Imp <> APlus constr
R48457:48459 Smallstep <> a2' var
R48454:48455 Smallstep <> v1 var
R48399:48401 Smallstep <> ::x_'/'_x_'==>a'_x not
R48404:48409 Smallstep <> ::x_'/'_x_'==>a'_x not
R48402:48403 Smallstep <> st var
R48397:48398 Smallstep <> a2 var
R48410:48412 Smallstep <> a2' var
R48380:48383 Smallstep <> aval ind
R48385:48386 Smallstep <> v1 var
R48500:48500 Smallstep <> ::x_'/'_x_'==>a'_x not
R48527:48530 Smallstep <> ::x_'/'_x_'==>a'_x not
R48533:48539 Smallstep <> ::x_'/'_x_'==>a'_x not
R48558:48558 Smallstep <> ::x_'/'_x_'==>a'_x not
R48531:48532 Smallstep <> st var
R48501:48506 Imp <> AMinus constr
R48519:48522 Imp <> ANum constr
R48524:48525 Smallstep <> n2 var
R48509:48512 Imp <> ANum constr
R48514:48515 Smallstep <> n1 var
R48540:48543 Imp <> ANum constr
R48546:48550 Coq.Init.Peano <> minus syndef
R48555:48556 Smallstep <> n2 var
R48552:48553 Smallstep <> n1 var
R48619:48628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48629:48629 Smallstep <> ::x_'/'_x_'==>a'_x not
R48642:48645 Smallstep <> ::x_'/'_x_'==>a'_x not
R48648:48654 Smallstep <> ::x_'/'_x_'==>a'_x not
R48668:48668 Smallstep <> ::x_'/'_x_'==>a'_x not
R48646:48647 Smallstep <> st var
R48630:48635 Imp <> AMinus constr
R48640:48641 Smallstep <> a2 var
R48637:48638 Smallstep <> a1 var
R48655:48660 Imp <> AMinus constr
R48666:48667 Smallstep <> a2 var
R48662:48664 Smallstep <> a1' var
R48605:48607 Smallstep <> ::x_'/'_x_'==>a'_x not
R48610:48615 Smallstep <> ::x_'/'_x_'==>a'_x not
R48608:48609 Smallstep <> st var
R48603:48604 Smallstep <> a1 var
R48616:48618 Smallstep <> a1' var
R48720:48729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48746:48755 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48756:48756 Smallstep <> ::x_'/'_x_'==>a'_x not
R48769:48772 Smallstep <> ::x_'/'_x_'==>a'_x not
R48775:48781 Smallstep <> ::x_'/'_x_'==>a'_x not
R48795:48795 Smallstep <> ::x_'/'_x_'==>a'_x not
R48773:48774 Smallstep <> st var
R48757:48762 Imp <> AMinus constr
R48767:48768 Smallstep <> a2 var
R48764:48765 Smallstep <> v1 var
R48782:48787 Imp <> AMinus constr
R48792:48794 Smallstep <> a2' var
R48789:48790 Smallstep <> v1 var
R48732:48734 Smallstep <> ::x_'/'_x_'==>a'_x not
R48737:48742 Smallstep <> ::x_'/'_x_'==>a'_x not
R48735:48736 Smallstep <> st var
R48730:48731 Smallstep <> a2 var
R48743:48745 Smallstep <> a2' var
R48713:48716 Smallstep <> aval ind
R48718:48719 Smallstep <> v1 var
R48834:48834 Smallstep <> ::x_'/'_x_'==>a'_x not
R48860:48863 Smallstep <> ::x_'/'_x_'==>a'_x not
R48866:48872 Smallstep <> ::x_'/'_x_'==>a'_x not
R48890:48890 Smallstep <> ::x_'/'_x_'==>a'_x not
R48864:48865 Smallstep <> st var
R48835:48839 Imp <> AMult constr
R48852:48855 Imp <> ANum constr
R48857:48858 Smallstep <> n2 var
R48842:48845 Imp <> ANum constr
R48847:48848 Smallstep <> n1 var
R48873:48876 Imp <> ANum constr
R48879:48882 Coq.Init.Peano <> mult syndef
R48887:48888 Smallstep <> n2 var
R48884:48885 Smallstep <> n1 var
R48950:48959 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48960:48960 Smallstep <> ::x_'/'_x_'==>a'_x not
R48976:48979 Smallstep <> ::x_'/'_x_'==>a'_x not
R48982:48988 Smallstep <> ::x_'/'_x_'==>a'_x not
R49005:49005 Smallstep <> ::x_'/'_x_'==>a'_x not
R48980:48981 Smallstep <> st var
R48961:48965 Imp <> AMult constr
R48973:48974 Smallstep <> a2 var
R48968:48969 Smallstep <> a1 var
R48989:48993 Imp <> AMult constr
R49002:49003 Smallstep <> a2 var
R48996:48998 Smallstep <> a1' var
R48936:48938 Smallstep <> ::x_'/'_x_'==>a'_x not
R48941:48946 Smallstep <> ::x_'/'_x_'==>a'_x not
R48939:48940 Smallstep <> st var
R48934:48935 Smallstep <> a1 var
R48947:48949 Smallstep <> a1' var
R49056:49065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49082:49091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49092:49092 Smallstep <> ::x_'/'_x_'==>a'_x not
R49104:49107 Smallstep <> ::x_'/'_x_'==>a'_x not
R49110:49116 Smallstep <> ::x_'/'_x_'==>a'_x not
R49129:49129 Smallstep <> ::x_'/'_x_'==>a'_x not
R49108:49109 Smallstep <> st var
R49093:49097 Imp <> AMult constr
R49102:49103 Smallstep <> a2 var
R49099:49100 Smallstep <> v1 var
R49117:49121 Imp <> AMult constr
R49126:49128 Smallstep <> a2' var
R49123:49124 Smallstep <> v1 var
R49068:49070 Smallstep <> ::x_'/'_x_'==>a'_x not
R49073:49078 Smallstep <> ::x_'/'_x_'==>a'_x not
R49071:49072 Smallstep <> st var
R49066:49067 Smallstep <> a2 var
R49079:49081 Smallstep <> a2' var
R49049:49052 Smallstep <> aval ind
R49054:49055 Smallstep <> v1 var
R49169:49173 Smallstep <> astep ind
not 49142:49142 <> ::x_'/'_x_'==>a'_x
ind 49273:49277 <> bstep
constr 49318:49322 <> BS_Eq
constr 49439:49444 <> BS_Eq1
constr 49540:49545 <> BS_Eq2
constr 49658:49664 <> BS_LtEq
constr 49786:49793 <> BS_LtEq1
constr 49889:49896 <> BS_LtEq2
constr 50011:50020 <> BS_NotTrue
constr 50075:50085 <> BS_NotFalse
constr 50140:50149 <> BS_NotStep
constr 50238:50251 <> BS_AndTrueTrue
constr 50311:50325 <> BS_AndTrueFalse
constr 50387:50397 <> BS_AndFalse
constr 50459:50472 <> BS_AndTrueStep
constr 50573:50582 <> BS_AndStep
R49286:49289 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49294:49297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49302:49305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49298:49301 Imp <> bexp ind
R49290:49293 Imp <> bexp ind
R49281:49285 Imp <> state def
R50712:50716 Smallstep <> bstep ind
R49349:49349 Smallstep <> ::x_'/'_x_'==>b'_x not
R49373:49376 Smallstep <> ::x_'/'_x_'==>b'_x not
R49379:49391 Smallstep <> ::x_'/'_x_'==>b'_x not
R49433:49433 Smallstep <> ::x_'/'_x_'==>b'_x not
R49377:49378 Smallstep <> st var
R49350:49352 Imp <> BEq constr
R49365:49368 Imp <> ANum constr
R49370:49371 Smallstep <> n2 var
R49355:49358 Imp <> ANum constr
R49360:49361 Smallstep <> n1 var
R49396:49402 Coq.Arith.EqNat <> beq_nat syndef
R49407:49408 Smallstep <> n2 var
R49404:49405 Smallstep <> n1 var
R49427:49432 Imp <> BFalse constr
R49416:49420 Imp <> BTrue constr
R49491:49500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49501:49501 Smallstep <> ::x_'/'_x_'==>b'_x not
R49511:49514 Smallstep <> ::x_'/'_x_'==>b'_x not
R49517:49523 Smallstep <> ::x_'/'_x_'==>b'_x not
R49534:49534 Smallstep <> ::x_'/'_x_'==>b'_x not
R49515:49516 Smallstep <> st var
R49502:49504 Imp <> BEq constr
R49509:49510 Smallstep <> a2 var
R49506:49507 Smallstep <> a1 var
R49524:49526 Imp <> BEq constr
R49532:49533 Smallstep <> a2 var
R49528:49530 Smallstep <> a1' var
R49477:49479 Smallstep <> ::x_'/'_x_'==>a'_x not
R49482:49487 Smallstep <> ::x_'/'_x_'==>a'_x not
R49480:49481 Smallstep <> st var
R49475:49476 Smallstep <> a1 var
R49488:49490 Smallstep <> a1' var
R49583:49592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49609:49618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49619:49619 Smallstep <> ::x_'/'_x_'==>b'_x not
R49629:49632 Smallstep <> ::x_'/'_x_'==>b'_x not
R49635:49641 Smallstep <> ::x_'/'_x_'==>b'_x not
R49652:49652 Smallstep <> ::x_'/'_x_'==>b'_x not
R49633:49634 Smallstep <> st var
R49620:49622 Imp <> BEq constr
R49627:49628 Smallstep <> a2 var
R49624:49625 Smallstep <> v1 var
R49642:49644 Imp <> BEq constr
R49649:49651 Smallstep <> a2' var
R49646:49647 Smallstep <> v1 var
R49595:49597 Smallstep <> ::x_'/'_x_'==>a'_x not
R49600:49605 Smallstep <> ::x_'/'_x_'==>a'_x not
R49598:49599 Smallstep <> st var
R49593:49594 Smallstep <> a2 var
R49606:49608 Smallstep <> a2' var
R49576:49579 Smallstep <> aval ind
R49581:49582 Smallstep <> v1 var
R49691:49691 Smallstep <> ::x_'/'_x_'==>b'_x not
R49715:49718 Smallstep <> ::x_'/'_x_'==>b'_x not
R49721:49742 Smallstep <> ::x_'/'_x_'==>b'_x not
R49780:49780 Smallstep <> ::x_'/'_x_'==>b'_x not
R49719:49720 Smallstep <> st var
R49692:49694 Imp <> BLe constr
R49707:49710 Imp <> ANum constr
R49712:49713 Smallstep <> n2 var
R49697:49700 Imp <> ANum constr
R49702:49703 Smallstep <> n1 var
R49747:49749 Coq.Arith.Compare_dec <> leb syndef
R49754:49755 Smallstep <> n2 var
R49751:49752 Smallstep <> n1 var
R49774:49779 Imp <> BFalse constr
R49763:49767 Imp <> BTrue constr
R49840:49849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49850:49850 Smallstep <> ::x_'/'_x_'==>b'_x not
R49860:49863 Smallstep <> ::x_'/'_x_'==>b'_x not
R49866:49872 Smallstep <> ::x_'/'_x_'==>b'_x not
R49883:49883 Smallstep <> ::x_'/'_x_'==>b'_x not
R49864:49865 Smallstep <> st var
R49851:49853 Imp <> BLe constr
R49858:49859 Smallstep <> a2 var
R49855:49856 Smallstep <> a1 var
R49873:49875 Imp <> BLe constr
R49881:49882 Smallstep <> a2 var
R49877:49879 Smallstep <> a1' var
R49826:49828 Smallstep <> ::x_'/'_x_'==>a'_x not
R49831:49836 Smallstep <> ::x_'/'_x_'==>a'_x not
R49829:49830 Smallstep <> st var
R49824:49825 Smallstep <> a1 var
R49837:49839 Smallstep <> a1' var
R49934:49943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49960:49969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49970:49970 Smallstep <> ::x_'/'_x_'==>b'_x not
R49980:49983 Smallstep <> ::x_'/'_x_'==>b'_x not
R49986:49992 Smallstep <> ::x_'/'_x_'==>b'_x not
R50005:50005 Smallstep <> ::x_'/'_x_'==>b'_x not
R49984:49985 Smallstep <> st var
R49971:49973 Imp <> BLe constr
R49978:49979 Smallstep <> a2 var
R49975:49976 Smallstep <> v1 var
R49993:49995 Imp <> BLe constr
R50001:50003 Smallstep <> a2' var
R49997:49998 Smallstep <> v1 var
R49946:49948 Smallstep <> ::x_'/'_x_'==>a'_x not
R49951:49956 Smallstep <> ::x_'/'_x_'==>a'_x not
R49949:49950 Smallstep <> st var
R49944:49945 Smallstep <> a2 var
R49957:49959 Smallstep <> a2' var
R49927:49930 Smallstep <> aval ind
R49932:49933 Smallstep <> v1 var
R50041:50041 Smallstep <> ::x_'/'_x_'==>b'_x not
R50052:50055 Smallstep <> ::x_'/'_x_'==>b'_x not
R50058:50063 Smallstep <> ::x_'/'_x_'==>b'_x not
R50056:50057 Smallstep <> st var
R50042:50045 Imp <> BNot constr
R50047:50051 Imp <> BTrue constr
R50064:50069 Imp <> BFalse constr
R50106:50106 Smallstep <> ::x_'/'_x_'==>b'_x not
R50118:50121 Smallstep <> ::x_'/'_x_'==>b'_x not
R50124:50129 Smallstep <> ::x_'/'_x_'==>b'_x not
R50122:50123 Smallstep <> st var
R50107:50110 Imp <> BNot constr
R50112:50117 Imp <> BFalse constr
R50130:50134 Imp <> BTrue constr
R50193:50202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50203:50203 Smallstep <> ::x_'/'_x_'==>b'_x not
R50211:50214 Smallstep <> ::x_'/'_x_'==>b'_x not
R50217:50223 Smallstep <> ::x_'/'_x_'==>b'_x not
R50232:50232 Smallstep <> ::x_'/'_x_'==>b'_x not
R50215:50216 Smallstep <> st var
R50204:50207 Imp <> BNot constr
R50209:50210 Smallstep <> b1 var
R50224:50227 Imp <> BNot constr
R50229:50231 Smallstep <> b1' var
R50179:50181 Smallstep <> ::x_'/'_x_'==>b'_x not
R50184:50189 Smallstep <> ::x_'/'_x_'==>b'_x not
R50182:50183 Smallstep <> st var
R50177:50178 Smallstep <> b1 var
R50190:50192 Smallstep <> b1' var
R50272:50272 Smallstep <> ::x_'/'_x_'==>b'_x not
R50289:50292 Smallstep <> ::x_'/'_x_'==>b'_x not
R50295:50300 Smallstep <> ::x_'/'_x_'==>b'_x not
R50293:50294 Smallstep <> st var
R50273:50276 Imp <> BAnd constr
R50284:50288 Imp <> BTrue constr
R50278:50282 Imp <> BTrue constr
R50301:50305 Imp <> BTrue constr
R50346:50346 Smallstep <> ::x_'/'_x_'==>b'_x not
R50364:50367 Smallstep <> ::x_'/'_x_'==>b'_x not
R50370:50375 Smallstep <> ::x_'/'_x_'==>b'_x not
R50368:50369 Smallstep <> st var
R50347:50350 Imp <> BAnd constr
R50358:50363 Imp <> BFalse constr
R50352:50356 Imp <> BTrue constr
R50376:50381 Imp <> BFalse constr
R50421:50421 Smallstep <> ::x_'/'_x_'==>b'_x not
R50436:50439 Smallstep <> ::x_'/'_x_'==>b'_x not
R50442:50447 Smallstep <> ::x_'/'_x_'==>b'_x not
R50440:50441 Smallstep <> st var
R50422:50425 Imp <> BAnd constr
R50434:50435 Smallstep <> b2 var
R50427:50432 Imp <> BFalse constr
R50448:50453 Imp <> BFalse constr
R50516:50525 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50526:50526 Smallstep <> ::x_'/'_x_'==>b'_x not
R50540:50543 Smallstep <> ::x_'/'_x_'==>b'_x not
R50546:50552 Smallstep <> ::x_'/'_x_'==>b'_x not
R50567:50567 Smallstep <> ::x_'/'_x_'==>b'_x not
R50544:50545 Smallstep <> st var
R50527:50530 Imp <> BAnd constr
R50538:50539 Smallstep <> b2 var
R50532:50536 Imp <> BTrue constr
R50553:50556 Imp <> BAnd constr
R50564:50566 Smallstep <> b2' var
R50558:50562 Imp <> BTrue constr
R50502:50504 Smallstep <> ::x_'/'_x_'==>b'_x not
R50507:50512 Smallstep <> ::x_'/'_x_'==>b'_x not
R50505:50506 Smallstep <> st var
R50500:50501 Smallstep <> b2 var
R50513:50515 Smallstep <> b2' var
R50629:50638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50639:50639 Smallstep <> ::x_'/'_x_'==>b'_x not
R50650:50653 Smallstep <> ::x_'/'_x_'==>b'_x not
R50656:50662 Smallstep <> ::x_'/'_x_'==>b'_x not
R50674:50674 Smallstep <> ::x_'/'_x_'==>b'_x not
R50654:50655 Smallstep <> st var
R50640:50643 Imp <> BAnd constr
R50648:50649 Smallstep <> b2 var
R50645:50646 Smallstep <> b1 var
R50663:50666 Imp <> BAnd constr
R50672:50673 Smallstep <> b2 var
R50668:50670 Smallstep <> b1' var
R50615:50617 Smallstep <> ::x_'/'_x_'==>b'_x not
R50620:50625 Smallstep <> ::x_'/'_x_'==>b'_x not
R50618:50619 Smallstep <> st var
R50613:50614 Smallstep <> b1 var
R50626:50628 Smallstep <> b1' var
R50712:50716 Smallstep <> bstep ind
not 50685:50685 <> ::x_'/'_x_'==>b'_x
ind 51728:51732 <> cstep
constr 51782:51791 <> CS_AssStep
constr 51882:51887 <> CS_Ass
constr 51967:51976 <> CS_SeqStep
constr 52084:52095 <> CS_SeqFinish
constr 52153:52161 <> CS_IfTrue
constr 52238:52247 <> CS_IfFalse
constr 52325:52333 <> CS_IfStep
constr 52471:52478 <> CS_While
R51736:51736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51748:51752 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51753:51753 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51765:51769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51757:51759 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R51754:51756 Imp <> com ind
R51760:51764 Imp <> state def
R51740:51742 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R51737:51739 Imp <> com ind
R51743:51747 Imp <> state def
R52644:52648 Smallstep <> cstep ind
R52657:52657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52660:52660 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52664:52664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52650:52650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52652:52652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52655:52655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51833:51842 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51843:51843 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51851:51854 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51857:51862 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51871:51874 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51845:51849 Imp <> ::x_'::='_x not
R51844:51844 Smallstep <> i var
R51850:51850 Smallstep <> a var
R51855:51856 Smallstep <> st var
R51864:51868 Imp <> ::x_'::='_x not
R51863:51863 Smallstep <> i var
R51869:51870 Smallstep <> a' var
R51875:51876 Smallstep <> st var
R51820:51822 Smallstep <> ::x_'/'_x_'==>a'_x not
R51825:51830 Smallstep <> ::x_'/'_x_'==>a'_x not
R51823:51824 Smallstep <> st var
R51819:51819 Smallstep <> a var
R51831:51832 Smallstep <> a' var
R51912:51912 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51927:51930 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51933:51937 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51942:51945 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51961:51961 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51914:51919 Imp <> ::x_'::='_x not
R51926:51926 Imp <> ::x_'::='_x not
R51913:51913 Smallstep <> i var
R51920:51923 Imp <> ANum constr
R51925:51925 Smallstep <> n var
R51931:51932 Smallstep <> st var
R51938:51941 Imp <> ::'SKIP' not
R51946:51953 Maps <> t_update def
R51960:51960 Smallstep <> n var
R51958:51958 Smallstep <> i var
R51955:51956 Smallstep <> st var
R52032:52041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52042:52042 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52051:52054 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52057:52062 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52072:52075 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52045:52048 Imp <> ::x_';;'_x not
R52043:52044 Smallstep <> c1 var
R52049:52050 Smallstep <> c2 var
R52055:52056 Smallstep <> st var
R52066:52069 Imp <> ::x_';;'_x not
R52063:52065 Smallstep <> c1' var
R52070:52071 Smallstep <> c2 var
R52076:52078 Smallstep <> st' var
R52013:52015 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52018:52022 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52026:52028 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52011:52012 Smallstep <> c1 var
R52016:52017 Smallstep <> st var
R52023:52025 Smallstep <> c1' var
R52029:52031 Smallstep <> st' var
R52119:52119 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52130:52133 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52136:52140 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52143:52145 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52124:52127 Imp <> ::x_';;'_x not
R52120:52123 Imp <> ::'SKIP' not
R52128:52129 Smallstep <> c2 var
R52134:52135 Smallstep <> st var
R52141:52142 Smallstep <> c2 var
R52146:52147 Smallstep <> st var
R52216:52218 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52221:52225 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52228:52230 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52188:52191 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52197:52202 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52205:52210 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52213:52215 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52192:52196 Imp <> BTrue constr
R52203:52204 Smallstep <> c1 var
R52211:52212 Smallstep <> c2 var
R52219:52220 Smallstep <> st var
R52226:52227 Smallstep <> c1 var
R52231:52232 Smallstep <> st var
R52303:52305 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52308:52312 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52315:52317 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52274:52277 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52284:52289 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52292:52297 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52300:52302 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52278:52283 Imp <> BFalse constr
R52290:52291 Smallstep <> c1 var
R52298:52299 Smallstep <> c2 var
R52306:52307 Smallstep <> st var
R52313:52314 Smallstep <> c2 var
R52318:52319 Smallstep <> st var
R52379:52392 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52417:52419 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52422:52434 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52460:52463 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52393:52396 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52398:52403 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52406:52411 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52414:52416 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52397:52397 Smallstep <> b var
R52404:52405 Smallstep <> c1 var
R52412:52413 Smallstep <> c2 var
R52420:52421 Smallstep <> st var
R52435:52438 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52441:52446 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52449:52454 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52457:52459 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52439:52440 Smallstep <> b' var
R52447:52448 Smallstep <> c1 var
R52455:52456 Smallstep <> c2 var
R52464:52465 Smallstep <> st var
R52366:52368 Smallstep <> ::x_'/'_x_'==>b'_x not
R52371:52376 Smallstep <> ::x_'/'_x_'==>b'_x not
R52369:52370 Smallstep <> st var
R52365:52365 Smallstep <> b var
R52377:52378 Smallstep <> b' var
R52508:52508 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52526:52529 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52532:52543 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52594:52597 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52509:52514 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52516:52519 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52522:52525 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52515:52515 Smallstep <> b var
R52520:52521 Smallstep <> c1 var
R52530:52531 Smallstep <> st var
R52544:52547 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52549:52555 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52580:52586 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52591:52593 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52548:52548 Smallstep <> b var
R52558:52561 Imp <> ::x_';;'_x not
R52579:52579 Imp <> ::x_';;'_x not
R52556:52557 Smallstep <> c1 var
R52562:52567 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52569:52572 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52575:52578 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52568:52568 Smallstep <> b var
R52573:52574 Smallstep <> c1 var
R52587:52590 Imp <> ::'SKIP' not
R52598:52599 Smallstep <> st var
R52644:52648 Smallstep <> cstep ind
R52657:52657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52660:52660 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52664:52664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52650:52650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52652:52652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52655:52655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 52610:52610 <> ::x_'/'_x_'==>'_x_'/'_x
mod 53187:53190 <> CImp
ind 53204:53206 CImp com
constr 53222:53226 CImp CSkip
constr 53238:53241 CImp CAss
constr 53267:53270 CImp CSeq
constr 53296:53298 CImp CIf
constr 53332:53337 CImp CWhile
constr 53377:53380 CImp CPar
R53230:53232 Smallstep <> com ind
R53247:53250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53255:53258 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53259:53261 Smallstep <> com ind
R53251:53254 Imp <> aexp ind
R53245:53246 Maps <> id ind
R53277:53280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53284:53287 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53288:53290 Smallstep <> com ind
R53281:53283 Smallstep <> com ind
R53274:53276 Smallstep <> com ind
R53306:53309 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53313:53316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53320:53323 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53324:53326 Smallstep <> com ind
R53317:53319 Smallstep <> com ind
R53310:53312 Smallstep <> com ind
R53302:53305 Imp <> bexp ind
R53345:53348 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53352:53355 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53356:53358 Smallstep <> com ind
R53349:53351 Smallstep <> com ind
R53341:53344 Imp <> bexp ind
R53387:53390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53394:53397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53398:53400 Smallstep <> com ind
R53391:53393 Smallstep <> com ind
R53384:53386 Smallstep <> com ind
R53427:53431 Smallstep CImp CSkip constr
not 53413:53413 CImp ::'SKIP'
R53461:53464 Smallstep CImp CAss constr
not 53443:53443 CImp ::x_'::='_x
R53512:53515 Smallstep CImp CSeq constr
not 53495:53495 CImp ::x_';;'_x
R53600:53605 Smallstep CImp CWhile constr
not 53569:53569 CImp ::'WHILE'_x_'DO'_x_'END'
R53698:53700 Smallstep CImp CIf constr
not 53657:53657 CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R53789:53792 Smallstep CImp CPar constr
not 53756:53756 CImp ::'PAR'_x_'WITH'_x_'END'
ind 53848:53852 CImp cstep
constr 53922:53931 CImp CS_AssStep
constr 54022:54027 CImp CS_Ass
constr 54107:54116 CImp CS_SeqStep
constr 54224:54235 CImp CS_SeqFinish
constr 54293:54301 CImp CS_IfTrue
constr 54380:54389 CImp CS_IfFalse
constr 54469:54477 CImp CS_IfStep
constr 54616:54623 CImp CS_While
constr 54771:54777 CImp CS_Par1
constr 54905:54911 CImp CS_Par2
constr 55039:55048 CImp CS_ParDone
R53856:53856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53868:53873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53874:53874 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53886:53890 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53878:53880 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R53875:53877 Smallstep CImp com ind
R53881:53885 Imp <> state def
R53860:53862 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R53857:53859 Smallstep CImp com ind
R53863:53867 Imp <> state def
R55155:55159 Smallstep <> cstep ind
R55168:55168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55171:55171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55175:55175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55161:55161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55163:55163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55166:55166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53973:53982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53983:53983 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53991:53994 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53997:54002 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54011:54014 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53985:53989 Smallstep CImp ::x_'::='_x not
R53984:53984 Smallstep <> i var
R53990:53990 Smallstep <> a var
R53995:53996 Smallstep <> st var
R54004:54008 Smallstep CImp ::x_'::='_x not
R54003:54003 Smallstep <> i var
R54009:54010 Smallstep <> a' var
R54015:54016 Smallstep <> st var
R53960:53962 Smallstep <> ::x_'/'_x_'==>a'_x not
R53965:53970 Smallstep <> ::x_'/'_x_'==>a'_x not
R53963:53964 Smallstep <> st var
R53959:53959 Smallstep <> a var
R53971:53972 Smallstep <> a' var
R54052:54052 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54067:54070 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54073:54077 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54082:54085 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54101:54101 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54054:54059 Smallstep CImp ::x_'::='_x not
R54066:54066 Smallstep CImp ::x_'::='_x not
R54053:54053 Smallstep <> i var
R54060:54063 Imp <> ANum constr
R54065:54065 Smallstep <> n var
R54071:54072 Smallstep <> st var
R54078:54081 Smallstep CImp ::'SKIP' not
R54086:54093 Maps <> t_update def
R54100:54100 Smallstep <> n var
R54098:54098 Smallstep <> i var
R54095:54096 Smallstep <> st var
R54172:54181 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54182:54182 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54191:54194 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54197:54202 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54212:54215 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54185:54188 Smallstep CImp ::x_';;'_x not
R54183:54184 Smallstep <> c1 var
R54189:54190 Smallstep <> c2 var
R54195:54196 Smallstep <> st var
R54206:54209 Smallstep CImp ::x_';;'_x not
R54203:54205 Smallstep <> c1' var
R54210:54211 Smallstep <> c2 var
R54216:54218 Smallstep <> st' var
R54153:54155 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54158:54162 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54166:54168 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54151:54152 Smallstep <> c1 var
R54156:54157 Smallstep <> st var
R54163:54165 Smallstep <> c1' var
R54169:54171 Smallstep <> st' var
R54259:54259 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54270:54273 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54276:54280 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54283:54285 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54264:54267 Smallstep CImp ::x_';;'_x not
R54260:54263 Smallstep CImp ::'SKIP' not
R54268:54269 Smallstep <> c2 var
R54274:54275 Smallstep <> st var
R54281:54282 Smallstep <> c2 var
R54286:54287 Smallstep <> st var
R54328:54328 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54357:54360 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54363:54367 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54370:54372 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54329:54332 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54338:54343 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54346:54351 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54354:54356 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54333:54337 Imp <> BTrue constr
R54344:54345 Smallstep <> c1 var
R54352:54353 Smallstep <> c2 var
R54361:54362 Smallstep <> st var
R54368:54369 Smallstep <> c1 var
R54373:54374 Smallstep <> st var
R54416:54416 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54446:54449 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54452:54456 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54459:54461 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54417:54420 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54427:54432 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54435:54440 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54443:54445 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54421:54426 Imp <> BFalse constr
R54433:54434 Smallstep <> c1 var
R54441:54442 Smallstep <> c2 var
R54450:54451 Smallstep <> st var
R54457:54458 Smallstep <> c2 var
R54462:54463 Smallstep <> st var
R54522:54535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54536:54536 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54561:54564 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54567:54579 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54605:54608 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54537:54540 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54542:54547 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54550:54555 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54558:54560 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54541:54541 Smallstep <> b var
R54548:54549 Smallstep <> c1 var
R54556:54557 Smallstep <> c2 var
R54565:54566 Smallstep <> st var
R54580:54583 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54586:54591 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54594:54599 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54602:54604 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54584:54585 Smallstep <> b' var
R54592:54593 Smallstep <> c1 var
R54600:54601 Smallstep <> c2 var
R54609:54610 Smallstep <> st var
R54510:54511 Smallstep <> ::x_'/'_x_'==>b'_x not
R54514:54519 Smallstep <> ::x_'/'_x_'==>b'_x not
R54512:54513 Smallstep <> st var
R54509:54509 Smallstep <> b var
R54520:54521 Smallstep <> b' var
R54653:54653 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54671:54674 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54677:54689 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54740:54743 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54654:54659 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54661:54664 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54667:54670 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54660:54660 Smallstep <> b var
R54665:54666 Smallstep <> c1 var
R54675:54676 Smallstep <> st var
R54690:54693 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54695:54701 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54726:54732 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54737:54739 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54694:54694 Smallstep <> b var
R54704:54707 Smallstep CImp ::x_';;'_x not
R54725:54725 Smallstep CImp ::x_';;'_x not
R54702:54703 Smallstep <> c1 var
R54708:54713 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54715:54718 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54721:54724 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54714:54714 Smallstep <> b var
R54719:54720 Smallstep <> c1 var
R54733:54736 Smallstep CImp ::'SKIP' not
R54744:54745 Smallstep <> st var
R54833:54842 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54843:54843 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54862:54865 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54868:54873 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54893:54896 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54844:54847 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54850:54855 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54858:54861 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54848:54849 Smallstep <> c1 var
R54856:54857 Smallstep <> c2 var
R54866:54867 Smallstep <> st var
R54874:54877 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54881:54886 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54889:54892 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54878:54880 Smallstep <> c1' var
R54887:54888 Smallstep <> c2 var
R54897:54899 Smallstep <> st' var
R54814:54816 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54819:54823 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54827:54829 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54812:54813 Smallstep <> c1 var
R54817:54818 Smallstep <> st var
R54824:54826 Smallstep <> c1' var
R54830:54832 Smallstep <> st' var
R54967:54976 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54977:54977 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54996:54999 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R55002:55007 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R55027:55030 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54978:54981 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54984:54989 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54992:54995 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54982:54983 Smallstep <> c1 var
R54990:54991 Smallstep <> c2 var
R55000:55001 Smallstep <> st var
R55008:55011 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55014:55019 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55023:55026 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55012:55013 Smallstep <> c1 var
R55020:55022 Smallstep <> c2' var
R55031:55033 Smallstep <> st' var
R54948:54950 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54953:54957 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54961:54963 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54946:54947 Smallstep <> c2 var
R54951:54952 Smallstep <> st var
R54958:54960 Smallstep <> c2' var
R54964:54966 Smallstep <> st' var
R55069:55069 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R55092:55095 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R55098:55102 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R55107:55109 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R55070:55073 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55078:55083 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55088:55091 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55074:55077 Smallstep CImp ::'SKIP' not
R55084:55087 Smallstep CImp ::'SKIP' not
R55096:55097 Smallstep <> st var
R55103:55106 Smallstep CImp ::'SKIP' not
R55110:55111 Smallstep <> st var
R55155:55159 Smallstep CImp cstep ind
R55168:55168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55171:55171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55175:55175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55161:55161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55163:55163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55166:55166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 55121:55121 CImp ::x_'/'_x_'==>'_x_'/'_x
def 55191:55200 CImp cmultistep
R55205:55209 Smallstep CImp multi ind
R55211:55215 Smallstep CImp cstep ind
R55266:55270 Smallstep CImp multi ind
R55286:55286 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55289:55289 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55293:55293 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55279:55279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55281:55281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55284:55284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55272:55276 Smallstep CImp cstep ind
not 55228:55228 CImp ::x_'/'_x_'==>*'_x_'/'_x
def 55522:55529 CImp par_loop
R55533:55535 Smallstep CImp com ind
R55542:55549 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55562:55573 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55646:55651 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55551:55555 Smallstep CImp ::x_'::='_x not
R55550:55550 Imp <> Y def
R55556:55559 Imp <> ANum constr
R55574:55579 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R55600:55609 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R55638:55645 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R55580:55582 Imp <> BEq constr
R55593:55596 Imp <> ANum constr
R55585:55587 Imp <> AId constr
R55589:55589 Imp <> Y def
R55611:55615 Smallstep CImp ::x_'::='_x not
R55610:55610 Imp <> X def
R55616:55620 Imp <> APlus constr
R55631:55634 Imp <> ANum constr
R55623:55625 Imp <> AId constr
R55627:55627 Imp <> X def
def 55724:55741 CImp par_loop_example_0
R55746:55752 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55756:55764 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55804:55811 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55773:55775 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R55787:55793 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R55798:55800 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R55765:55772 Smallstep CImp par_loop def
R55776:55786 Imp <> empty_state def
R55794:55797 Smallstep CImp ::'SKIP' not
R55801:55803 Smallstep <> st' var
R55817:55819 Coq.Init.Logic <> :type_scope:x_'='_x not
R55812:55814 Smallstep <> st' var
R55816:55816 Imp <> X def
R55839:55846 Coq.Init.Logic <> ex_intro constr
R55839:55846 Coq.Init.Logic <> ex_intro constr
R55865:55872 Smallstep CImp par_loop def
R55884:55893 Smallstep CImp multi_step constr
R55884:55893 Smallstep CImp multi_step constr
R55902:55908 Smallstep CImp CS_Par1 constr
R55902:55908 Smallstep CImp CS_Par1 constr
R55921:55926 Smallstep CImp CS_Ass constr
R55921:55926 Smallstep CImp CS_Ass constr
R55938:55947 Smallstep CImp multi_step constr
R55938:55947 Smallstep CImp multi_step constr
R55956:55962 Smallstep CImp CS_Par2 constr
R55956:55962 Smallstep CImp CS_Par2 constr
R55971:55978 Smallstep CImp CS_While constr
R55971:55978 Smallstep CImp CS_While constr
R55990:55999 Smallstep CImp multi_step constr
R55990:55999 Smallstep CImp multi_step constr
R56008:56014 Smallstep CImp CS_Par2 constr
R56008:56014 Smallstep CImp CS_Par2 constr
R56023:56031 Smallstep CImp CS_IfStep constr
R56023:56031 Smallstep CImp CS_IfStep constr
R56044:56049 Smallstep CImp BS_Eq1 constr
R56044:56049 Smallstep CImp BS_Eq1 constr
R56058:56062 Smallstep CImp AS_Id constr
R56058:56062 Smallstep CImp AS_Id constr
R56074:56083 Smallstep CImp multi_step constr
R56074:56083 Smallstep CImp multi_step constr
R56092:56098 Smallstep CImp CS_Par2 constr
R56092:56098 Smallstep CImp CS_Par2 constr
R56107:56115 Smallstep CImp CS_IfStep constr
R56107:56115 Smallstep CImp CS_IfStep constr
R56128:56132 Smallstep CImp BS_Eq constr
R56128:56132 Smallstep CImp BS_Eq constr
R56151:56160 Smallstep CImp multi_step constr
R56151:56160 Smallstep CImp multi_step constr
R56169:56175 Smallstep CImp CS_Par2 constr
R56169:56175 Smallstep CImp CS_Par2 constr
R56184:56193 Smallstep CImp CS_IfFalse constr
R56184:56193 Smallstep CImp CS_IfFalse constr
R56205:56214 Smallstep CImp multi_step constr
R56205:56214 Smallstep CImp multi_step constr
R56223:56232 Smallstep CImp CS_ParDone constr
R56223:56232 Smallstep CImp CS_ParDone constr
R56244:56253 Smallstep CImp multi_refl constr
R56244:56253 Smallstep CImp multi_refl constr
def 56336:56353 CImp par_loop_example_2
R56358:56364 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56368:56376 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56415:56422 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R56385:56387 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R56399:56404 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R56409:56411 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R56377:56384 Smallstep CImp par_loop def
R56388:56398 Imp <> empty_state def
R56405:56408 Smallstep CImp ::'SKIP' not
R56412:56414 Smallstep <> st' var
R56428:56430 Coq.Init.Logic <> :type_scope:x_'='_x not
R56423:56425 Smallstep <> st' var
R56427:56427 Imp <> X def
R56450:56457 Coq.Init.Logic <> ex_intro constr
R56450:56457 Coq.Init.Logic <> ex_intro constr
R56476:56485 Smallstep CImp multi_step constr
R56476:56485 Smallstep CImp multi_step constr
R56494:56500 Smallstep CImp CS_Par2 constr
R56494:56500 Smallstep CImp CS_Par2 constr
R56509:56516 Smallstep CImp CS_While constr
R56509:56516 Smallstep CImp CS_While constr
R56528:56537 Smallstep CImp multi_step constr
R56528:56537 Smallstep CImp multi_step constr
R56546:56552 Smallstep CImp CS_Par2 constr
R56546:56552 Smallstep CImp CS_Par2 constr
R56561:56569 Smallstep CImp CS_IfStep constr
R56561:56569 Smallstep CImp CS_IfStep constr
R56582:56587 Smallstep CImp BS_Eq1 constr
R56582:56587 Smallstep CImp BS_Eq1 constr
R56596:56600 Smallstep CImp AS_Id constr
R56596:56600 Smallstep CImp AS_Id constr
R56612:56621 Smallstep CImp multi_step constr
R56612:56621 Smallstep CImp multi_step constr
R56630:56636 Smallstep CImp CS_Par2 constr
R56630:56636 Smallstep CImp CS_Par2 constr
R56645:56653 Smallstep CImp CS_IfStep constr
R56645:56653 Smallstep CImp CS_IfStep constr
R56666:56670 Smallstep CImp BS_Eq constr
R56666:56670 Smallstep CImp BS_Eq constr
R56689:56698 Smallstep CImp multi_step constr
R56689:56698 Smallstep CImp multi_step constr
R56707:56713 Smallstep CImp CS_Par2 constr
R56707:56713 Smallstep CImp CS_Par2 constr
R56722:56730 Smallstep CImp CS_IfTrue constr
R56722:56730 Smallstep CImp CS_IfTrue constr
R56742:56751 Smallstep CImp multi_step constr
R56742:56751 Smallstep CImp multi_step constr
R56760:56766 Smallstep CImp CS_Par2 constr
R56760:56766 Smallstep CImp CS_Par2 constr
R56775:56784 Smallstep CImp CS_SeqStep constr
R56775:56784 Smallstep CImp CS_SeqStep constr
R56797:56806 Smallstep CImp CS_AssStep constr
R56797:56806 Smallstep CImp CS_AssStep constr
R56815:56822 Smallstep CImp AS_Plus1 constr
R56815:56822 Smallstep CImp AS_Plus1 constr
R56831:56835 Smallstep CImp AS_Id constr
R56831:56835 Smallstep CImp AS_Id constr
R56847:56856 Smallstep CImp multi_step constr
R56847:56856 Smallstep CImp multi_step constr
R56865:56871 Smallstep CImp CS_Par2 constr
R56865:56871 Smallstep CImp CS_Par2 constr
R56880:56889 Smallstep CImp CS_SeqStep constr
R56880:56889 Smallstep CImp CS_SeqStep constr
R56902:56911 Smallstep CImp CS_AssStep constr
R56902:56911 Smallstep CImp CS_AssStep constr
R56920:56926 Smallstep CImp AS_Plus constr
R56920:56926 Smallstep CImp AS_Plus constr
R56938:56947 Smallstep CImp multi_step constr
R56938:56947 Smallstep CImp multi_step constr
R56956:56962 Smallstep CImp CS_Par2 constr
R56956:56962 Smallstep CImp CS_Par2 constr
R56971:56980 Smallstep CImp CS_SeqStep constr
R56971:56980 Smallstep CImp CS_SeqStep constr
R56993:56998 Smallstep CImp CS_Ass constr
R56993:56998 Smallstep CImp CS_Ass constr
R57010:57019 Smallstep CImp multi_step constr
R57010:57019 Smallstep CImp multi_step constr
R57028:57034 Smallstep CImp CS_Par2 constr
R57028:57034 Smallstep CImp CS_Par2 constr
R57043:57054 Smallstep CImp CS_SeqFinish constr
R57043:57054 Smallstep CImp CS_SeqFinish constr
R57067:57076 Smallstep CImp multi_step constr
R57067:57076 Smallstep CImp multi_step constr
R57085:57091 Smallstep CImp CS_Par2 constr
R57085:57091 Smallstep CImp CS_Par2 constr
R57100:57107 Smallstep CImp CS_While constr
R57100:57107 Smallstep CImp CS_While constr
R57119:57128 Smallstep CImp multi_step constr
R57119:57128 Smallstep CImp multi_step constr
R57137:57143 Smallstep CImp CS_Par2 constr
R57137:57143 Smallstep CImp CS_Par2 constr
R57152:57160 Smallstep CImp CS_IfStep constr
R57152:57160 Smallstep CImp CS_IfStep constr
R57173:57178 Smallstep CImp BS_Eq1 constr
R57173:57178 Smallstep CImp BS_Eq1 constr
R57187:57191 Smallstep CImp AS_Id constr
R57187:57191 Smallstep CImp AS_Id constr
R57203:57212 Smallstep CImp multi_step constr
R57203:57212 Smallstep CImp multi_step constr
R57221:57227 Smallstep CImp CS_Par2 constr
R57221:57227 Smallstep CImp CS_Par2 constr
R57236:57244 Smallstep CImp CS_IfStep constr
R57236:57244 Smallstep CImp CS_IfStep constr
R57257:57261 Smallstep CImp BS_Eq constr
R57257:57261 Smallstep CImp BS_Eq constr
R57280:57289 Smallstep CImp multi_step constr
R57280:57289 Smallstep CImp multi_step constr
R57298:57304 Smallstep CImp CS_Par2 constr
R57298:57304 Smallstep CImp CS_Par2 constr
R57313:57321 Smallstep CImp CS_IfTrue constr
R57313:57321 Smallstep CImp CS_IfTrue constr
R57333:57342 Smallstep CImp multi_step constr
R57333:57342 Smallstep CImp multi_step constr
R57351:57357 Smallstep CImp CS_Par2 constr
R57351:57357 Smallstep CImp CS_Par2 constr
R57366:57375 Smallstep CImp CS_SeqStep constr
R57366:57375 Smallstep CImp CS_SeqStep constr
R57388:57397 Smallstep CImp CS_AssStep constr
R57388:57397 Smallstep CImp CS_AssStep constr
R57406:57413 Smallstep CImp AS_Plus1 constr
R57406:57413 Smallstep CImp AS_Plus1 constr
R57422:57426 Smallstep CImp AS_Id constr
R57422:57426 Smallstep CImp AS_Id constr
R57438:57447 Smallstep CImp multi_step constr
R57438:57447 Smallstep CImp multi_step constr
R57456:57462 Smallstep CImp CS_Par2 constr
R57456:57462 Smallstep CImp CS_Par2 constr
R57471:57480 Smallstep CImp CS_SeqStep constr
R57471:57480 Smallstep CImp CS_SeqStep constr
R57493:57502 Smallstep CImp CS_AssStep constr
R57493:57502 Smallstep CImp CS_AssStep constr
R57511:57517 Smallstep CImp AS_Plus constr
R57511:57517 Smallstep CImp AS_Plus constr
R57529:57538 Smallstep CImp multi_step constr
R57529:57538 Smallstep CImp multi_step constr
R57547:57553 Smallstep CImp CS_Par2 constr
R57547:57553 Smallstep CImp CS_Par2 constr
R57562:57571 Smallstep CImp CS_SeqStep constr
R57562:57571 Smallstep CImp CS_SeqStep constr
R57584:57589 Smallstep CImp CS_Ass constr
R57584:57589 Smallstep CImp CS_Ass constr
R57602:57611 Smallstep CImp multi_step constr
R57602:57611 Smallstep CImp multi_step constr
R57620:57626 Smallstep CImp CS_Par1 constr
R57620:57626 Smallstep CImp CS_Par1 constr
R57635:57640 Smallstep CImp CS_Ass constr
R57635:57640 Smallstep CImp CS_Ass constr
R57652:57661 Smallstep CImp multi_step constr
R57652:57661 Smallstep CImp multi_step constr
R57670:57676 Smallstep CImp CS_Par2 constr
R57670:57676 Smallstep CImp CS_Par2 constr
R57685:57696 Smallstep CImp CS_SeqFinish constr
R57685:57696 Smallstep CImp CS_SeqFinish constr
R57708:57717 Smallstep CImp multi_step constr
R57708:57717 Smallstep CImp multi_step constr
R57726:57732 Smallstep CImp CS_Par2 constr
R57726:57732 Smallstep CImp CS_Par2 constr
R57741:57748 Smallstep CImp CS_While constr
R57741:57748 Smallstep CImp CS_While constr
R57760:57769 Smallstep CImp multi_step constr
R57760:57769 Smallstep CImp multi_step constr
R57778:57784 Smallstep CImp CS_Par2 constr
R57778:57784 Smallstep CImp CS_Par2 constr
R57793:57801 Smallstep CImp CS_IfStep constr
R57793:57801 Smallstep CImp CS_IfStep constr
R57814:57819 Smallstep CImp BS_Eq1 constr
R57814:57819 Smallstep CImp BS_Eq1 constr
R57828:57832 Smallstep CImp AS_Id constr
R57828:57832 Smallstep CImp AS_Id constr
R57844:57853 Smallstep CImp multi_step constr
R57844:57853 Smallstep CImp multi_step constr
R57862:57868 Smallstep CImp CS_Par2 constr
R57862:57868 Smallstep CImp CS_Par2 constr
R57877:57885 Smallstep CImp CS_IfStep constr
R57877:57885 Smallstep CImp CS_IfStep constr
R57898:57902 Smallstep CImp BS_Eq constr
R57898:57902 Smallstep CImp BS_Eq constr
R57921:57930 Smallstep CImp multi_step constr
R57921:57930 Smallstep CImp multi_step constr
R57939:57945 Smallstep CImp CS_Par2 constr
R57939:57945 Smallstep CImp CS_Par2 constr
R57954:57963 Smallstep CImp CS_IfFalse constr
R57954:57963 Smallstep CImp CS_IfFalse constr
R57975:57984 Smallstep CImp multi_step constr
R57975:57984 Smallstep CImp multi_step constr
R57993:58002 Smallstep CImp CS_ParDone constr
R57993:58002 Smallstep CImp CS_ParDone constr
R58014:58023 Smallstep CImp multi_refl constr
R58014:58023 Smallstep CImp multi_refl constr
prf 58120:58133 CImp par_body_n__Sn
R58172:58177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58186:58188 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58191:58196 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58205:58208 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58228:58228 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58178:58185 Smallstep CImp par_loop def
R58189:58190 Smallstep <> st var
R58197:58204 Smallstep CImp par_loop def
R58209:58216 Maps <> t_update def
R58224:58224 Coq.Init.Datatypes <> S constr
R58226:58226 Smallstep <> n var
R58221:58221 Imp <> X def
R58218:58219 Smallstep <> st var
R58160:58163 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58156:58158 Coq.Init.Logic <> :type_scope:x_'='_x not
R58152:58153 Smallstep <> st var
R58155:58155 Imp <> X def
R58159:58159 Smallstep <> n var
R58168:58170 Coq.Init.Logic <> :type_scope:x_'='_x not
R58164:58165 Smallstep <> st var
R58167:58167 Imp <> Y def
prf 58327:58336 CImp par_body_n
R58375:58380 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58381:58387 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58391:58396 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58431:58434 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58405:58407 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58410:58416 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58425:58427 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58397:58404 Smallstep CImp par_loop def
R58408:58409 Smallstep <> st var
R58417:58424 Smallstep CImp par_loop def
R58428:58430 Smallstep <> st' var
R58444:58447 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58440:58442 Coq.Init.Logic <> :type_scope:x_'='_x not
R58435:58437 Smallstep <> st' var
R58439:58439 Imp <> X def
R58443:58443 Smallstep <> n var
R58453:58455 Coq.Init.Logic <> :type_scope:x_'='_x not
R58448:58450 Smallstep <> st' var
R58452:58452 Imp <> Y def
R58363:58366 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58359:58361 Coq.Init.Logic <> :type_scope:x_'='_x not
R58355:58356 Smallstep <> st var
R58358:58358 Imp <> X def
R58371:58373 Coq.Init.Logic <> :type_scope:x_'='_x not
R58367:58368 Smallstep <> st var
R58370:58370 Imp <> Y def
prf 58594:58607 CImp par_loop_any_X
R58622:58628 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58632:58637 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58677:58684 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58646:58648 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58660:58666 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58671:58673 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58638:58645 Smallstep CImp par_loop def
R58649:58659 Imp <> empty_state def
R58667:58670 Smallstep CImp ::'SKIP' not
R58674:58676 Smallstep <> st' var
R58690:58692 Coq.Init.Logic <> :type_scope:x_'='_x not
R58685:58687 Smallstep <> st' var
R58689:58689 Imp <> X def
R58693:58693 Smallstep <> n var
R58727:58736 Smallstep CImp par_body_n prfax
R58740:58750 Imp <> empty_state def
R58727:58736 Smallstep CImp par_body_n prfax
R58740:58750 Imp <> empty_state def
R58772:58779 Maps <> t_update def
R58866:58873 Maps <> t_update def
R58878:58878 Imp <> Y def
R58866:58873 Maps <> t_update def
R58878:58878 Imp <> Y def
R58917:58917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58926:58926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58929:58929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58918:58925 Smallstep CImp par_loop def
R58900:58910 Smallstep CImp multi_trans thm
R58917:58917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58926:58926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58929:58929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58918:58925 Smallstep CImp par_loop def
R58900:58910 Smallstep CImp multi_trans thm
R58951:58960 Smallstep CImp multi_step constr
R58951:58960 Smallstep CImp multi_step constr
R58969:58975 Smallstep CImp CS_Par1 constr
R58969:58975 Smallstep CImp CS_Par1 constr
R58984:58989 Smallstep CImp CS_Ass constr
R58984:58989 Smallstep CImp CS_Ass constr
R59001:59010 Smallstep CImp multi_step constr
R59001:59010 Smallstep CImp multi_step constr
R59019:59025 Smallstep CImp CS_Par2 constr
R59019:59025 Smallstep CImp CS_Par2 constr
R59034:59041 Smallstep CImp CS_While constr
R59034:59041 Smallstep CImp CS_While constr
R59053:59062 Smallstep CImp multi_step constr
R59053:59062 Smallstep CImp multi_step constr
R59071:59077 Smallstep CImp CS_Par2 constr
R59071:59077 Smallstep CImp CS_Par2 constr
R59086:59094 Smallstep CImp CS_IfStep constr
R59086:59094 Smallstep CImp CS_IfStep constr
R59107:59112 Smallstep CImp BS_Eq1 constr
R59107:59112 Smallstep CImp BS_Eq1 constr
R59121:59125 Smallstep CImp AS_Id constr
R59121:59125 Smallstep CImp AS_Id constr
R59136:59146 Maps <> t_update_eq thm
R59136:59146 Maps <> t_update_eq thm
R59136:59146 Maps <> t_update_eq thm
R59158:59167 Smallstep CImp multi_step constr
R59158:59167 Smallstep CImp multi_step constr
R59176:59182 Smallstep CImp CS_Par2 constr
R59176:59182 Smallstep CImp CS_Par2 constr
R59191:59199 Smallstep CImp CS_IfStep constr
R59191:59199 Smallstep CImp CS_IfStep constr
R59212:59216 Smallstep CImp BS_Eq constr
R59212:59216 Smallstep CImp BS_Eq constr
R59235:59244 Smallstep CImp multi_step constr
R59235:59244 Smallstep CImp multi_step constr
R59253:59259 Smallstep CImp CS_Par2 constr
R59253:59259 Smallstep CImp CS_Par2 constr
R59268:59277 Smallstep CImp CS_IfFalse constr
R59268:59277 Smallstep CImp CS_IfFalse constr
R59289:59298 Smallstep CImp multi_step constr
R59289:59298 Smallstep CImp multi_step constr
R59307:59316 Smallstep CImp CS_ParDone constr
R59307:59316 Smallstep CImp CS_ParDone constr
R59327:59336 Smallstep CImp multi_refl constr
R59327:59336 Smallstep CImp multi_refl constr
R59350:59361 Maps <> t_update_neq thm
R59350:59361 Maps <> t_update_neq thm
R59350:59361 Maps <> t_update_neq thm
R59350:59361 Maps <> t_update_neq thm
R59408:59411 Smallstep CImp <> mod
def 59644:59648 <> stack
R59653:59656 Coq.Init.Datatypes <> list ind
R59658:59660 Coq.Init.Datatypes <> nat ind
def 59674:59677 <> prog
R59683:59686 Coq.Init.Datatypes <> list ind
R59688:59693 Imp <> sinstr ind
ind 59707:59716 <> stack_step
constr 59773:59779 <> SS_Push
constr 59866:59872 <> SS_Load
constr 59962:59968 <> SS_Plus
constr 60059:60066 <> SS_Minus
constr 60157:60163 <> SS_Mult
R59725:59728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59741:59744 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59757:59760 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59749:59751 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R59745:59748 Smallstep <> prog def
R59752:59756 Smallstep <> stack def
R59733:59735 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R59729:59732 Smallstep <> prog def
R59736:59740 Smallstep <> stack def
R59720:59724 Imp <> state def
R59807:59816 Smallstep <> stack_step ind
R59847:59847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59850:59851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59860:59860 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59848:59849 Smallstep <> p' var
R59853:59856 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59852:59852 Smallstep <> n var
R59857:59859 Smallstep <> stk var
R59821:59821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59835:59836 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59840:59840 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59829:59832 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59822:59826 Imp <> SPush constr
R59828:59828 Smallstep <> n var
R59833:59834 Smallstep <> p' var
R59837:59839 Smallstep <> stk var
R59818:59819 Smallstep <> st var
R59900:59909 Smallstep <> stack_step ind
R59940:59940 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59943:59944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59956:59956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59941:59942 Smallstep <> p' var
R59949:59952 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59945:59946 Smallstep <> st var
R59948:59948 Smallstep <> i var
R59953:59955 Smallstep <> stk var
R59914:59914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59928:59929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59933:59933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59922:59925 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59915:59919 Imp <> SLoad constr
R59921:59921 Smallstep <> i var
R59926:59927 Smallstep <> p' var
R59930:59932 Smallstep <> stk var
R59911:59912 Smallstep <> st var
R59998:60007 Smallstep <> stack_step ind
R60038:60038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60041:60042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60053:60053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60039:60040 Smallstep <> p' var
R60043:60043 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60047:60049 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60045:60045 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R60044:60044 Smallstep <> m var
R60046:60046 Smallstep <> n var
R60050:60052 Smallstep <> stk var
R60012:60012 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60024:60025 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60035:60035 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60018:60021 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60013:60017 Imp <> SPlus constr
R60022:60023 Smallstep <> p' var
R60027:60028 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60026:60026 Smallstep <> n var
R60030:60031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60029:60029 Smallstep <> m var
R60032:60034 Smallstep <> stk var
R60009:60010 Smallstep <> st var
R60096:60105 Smallstep <> stack_step ind
R60136:60136 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60139:60140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60151:60151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60137:60138 Smallstep <> p' var
R60141:60141 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60145:60147 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60143:60143 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R60142:60142 Smallstep <> m var
R60144:60144 Smallstep <> n var
R60148:60150 Smallstep <> stk var
R60110:60110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60123:60124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60134:60134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60117:60120 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60111:60116 Imp <> SMinus constr
R60121:60122 Smallstep <> p' var
R60126:60127 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60125:60125 Smallstep <> n var
R60129:60130 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60128:60128 Smallstep <> m var
R60131:60133 Smallstep <> stk var
R60107:60108 Smallstep <> st var
R60193:60202 Smallstep <> stack_step ind
R60233:60233 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60236:60237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60248:60248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60234:60235 Smallstep <> p' var
R60238:60238 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60242:60244 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60240:60240 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R60239:60239 Smallstep <> m var
R60241:60241 Smallstep <> n var
R60245:60247 Smallstep <> stk var
R60207:60207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60219:60220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60230:60230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60213:60216 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60208:60212 Imp <> SMult constr
R60217:60218 Smallstep <> p' var
R60222:60223 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60221:60221 Smallstep <> n var
R60225:60226 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60224:60224 Smallstep <> m var
R60227:60229 Smallstep <> stk var
R60204:60205 Smallstep <> st var
prf 60260:60283 <> stack_step_deterministic
R60300:60312 Smallstep <> deterministic def
R60315:60324 Smallstep <> stack_step ind
R60326:60327 Smallstep <> st var
R60347:60359 Smallstep <> deterministic def
def 60447:60461 <> stack_multistep
R60469:60473 Smallstep <> multi ind
R60476:60485 Smallstep <> stack_step ind
R60487:60488 Smallstep <> st var
def 60862:60870 <> s_compile
R60877:60880 Imp <> aexp ind
R60885:60888 Smallstep <> prog def
R60901:60901 Smallstep <> e var
R60915:60918 Imp <> ANum constr
R60925:60925 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R60933:60933 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R60926:60930 Imp <> SPush constr
R60942:60944 Imp <> AId constr
R60951:60951 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R60959:60959 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R60952:60956 Imp <> SLoad constr
R60968:60972 Imp <> APlus constr
R60995:60998 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R60983:60991 Smallstep <> s_compile def
R61011:61014 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R60999:61007 Smallstep <> s_compile def
R61015:61015 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61021:61021 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61016:61020 Imp <> SPlus constr
R61030:61035 Imp <> AMinus constr
R61058:61061 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61046:61054 Smallstep <> s_compile def
R61074:61077 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61062:61070 Smallstep <> s_compile def
R61078:61078 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61085:61085 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61079:61084 Imp <> SMinus constr
R61094:61098 Imp <> AMult constr
R61121:61124 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61109:61117 Smallstep <> s_compile def
R61137:61140 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61125:61133 Smallstep <> s_compile def
R61141:61141 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61147:61147 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61142:61146 Imp <> SMult constr
prf 61167:61187 <> compiler_correct_help
R61213:61227 Smallstep <> stack_multistep def
R61294:61294 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61297:61298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61314:61314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61295:61296 Smallstep <> is var
R61309:61312 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61299:61303 Imp <> aeval def
R61308:61308 Smallstep <> e var
R61305:61306 Smallstep <> st var
R61313:61313 Smallstep <> p var
R61232:61232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61250:61251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61253:61253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61244:61247 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61233:61241 Smallstep <> s_compile def
R61243:61243 Smallstep <> e var
R61248:61249 Smallstep <> is var
R61252:61252 Smallstep <> p var
R61229:61230 Smallstep <> st var
R61364:61373 Smallstep <> multi_step constr
R61364:61373 Smallstep <> multi_step constr
R61426:61435 Smallstep <> multi_step constr
R61426:61435 Smallstep <> multi_step constr
R61492:61498 Coq.Lists.List <> app_ass syndef
R61492:61498 Coq.Lists.List <> app_ass syndef
R61492:61498 Coq.Lists.List <> app_ass syndef
R61533:61533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61563:61564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61582:61582 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61546:61549 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61534:61542 Smallstep <> s_compile def
R61557:61560 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61550:61550 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61556:61556 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61551:61555 Imp <> SPlus constr
R61576:61580 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61565:61569 Imp <> aeval def
R61509:61519 Smallstep <> multi_trans thm
R61533:61533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61563:61564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61582:61582 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61546:61549 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61534:61542 Smallstep <> s_compile def
R61557:61560 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61550:61550 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61556:61556 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61551:61555 Imp <> SPlus constr
R61576:61580 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61565:61569 Imp <> aeval def
R61509:61519 Smallstep <> multi_trans thm
R61596:61602 Coq.Lists.List <> app_ass syndef
R61596:61602 Coq.Lists.List <> app_ass syndef
R61596:61602 Coq.Lists.List <> app_ass syndef
R61649:61649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61663:61664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61697:61697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61657:61660 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61650:61650 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61656:61656 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61651:61655 Imp <> SPlus constr
R61676:61679 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61665:61669 Imp <> aeval def
R61691:61695 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61680:61684 Imp <> aeval def
R61626:61636 Smallstep <> multi_trans thm
R61649:61649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61663:61664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61697:61697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61657:61660 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61650:61650 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61656:61656 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61651:61655 Imp <> SPlus constr
R61676:61679 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61665:61669 Imp <> aeval def
R61691:61695 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61680:61684 Imp <> aeval def
R61626:61636 Smallstep <> multi_trans thm
R61750:61750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61753:61754 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61785:61785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61780:61783 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61766:61768 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R61755:61759 Imp <> aeval def
R61769:61773 Imp <> aeval def
R61728:61737 Smallstep <> multi_step constr
R61750:61750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61753:61754 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61785:61785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61780:61783 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61766:61768 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R61755:61759 Imp <> aeval def
R61769:61773 Imp <> aeval def
R61728:61737 Smallstep <> multi_step constr
R61810:61819 Smallstep <> multi_refl constr
R61810:61819 Smallstep <> multi_refl constr
R61848:61854 Coq.Lists.List <> app_ass syndef
R61848:61854 Coq.Lists.List <> app_ass syndef
R61848:61854 Coq.Lists.List <> app_ass syndef
R61889:61889 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61920:61921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61939:61939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61902:61905 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61890:61898 Smallstep <> s_compile def
R61914:61917 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61906:61906 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61913:61913 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61907:61912 Imp <> SMinus constr
R61933:61937 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61922:61926 Imp <> aeval def
R61866:61876 Smallstep <> multi_trans thm
R61889:61889 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61920:61921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61939:61939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61902:61905 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61890:61898 Smallstep <> s_compile def
R61914:61917 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61906:61906 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61913:61913 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R61907:61912 Imp <> SMinus constr
R61933:61937 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61922:61926 Imp <> aeval def
R61866:61876 Smallstep <> multi_trans thm
R61953:61959 Coq.Lists.List <> app_ass syndef
R61953:61959 Coq.Lists.List <> app_ass syndef
R61953:61959 Coq.Lists.List <> app_ass syndef
R62003:62003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62018:62019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62052:62052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62012:62015 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62004:62004 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62011:62011 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62005:62010 Imp <> SMinus constr
R62031:62034 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62020:62024 Imp <> aeval def
R62046:62050 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62035:62039 Imp <> aeval def
R61980:61990 Smallstep <> multi_trans thm
R62003:62003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62018:62019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62052:62052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62012:62015 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62004:62004 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62011:62011 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62005:62010 Imp <> SMinus constr
R62031:62034 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62020:62024 Imp <> aeval def
R62046:62050 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62035:62039 Imp <> aeval def
R61980:61990 Smallstep <> multi_trans thm
R62105:62105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62108:62109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62140:62140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62135:62138 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62121:62123 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R62110:62114 Imp <> aeval def
R62124:62128 Imp <> aeval def
R62083:62092 Smallstep <> multi_step constr
R62105:62105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62108:62109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62140:62140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62135:62138 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62121:62123 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R62110:62114 Imp <> aeval def
R62124:62128 Imp <> aeval def
R62083:62092 Smallstep <> multi_step constr
R62166:62175 Smallstep <> multi_refl constr
R62166:62175 Smallstep <> multi_refl constr
R62204:62210 Coq.Lists.List <> app_ass syndef
R62204:62210 Coq.Lists.List <> app_ass syndef
R62204:62210 Coq.Lists.List <> app_ass syndef
R62246:62246 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62276:62277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62295:62295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62259:62262 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62247:62255 Smallstep <> s_compile def
R62270:62273 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62263:62263 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62269:62269 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62264:62268 Imp <> SMult constr
R62289:62293 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62278:62282 Imp <> aeval def
R62222:62232 Smallstep <> multi_trans thm
R62246:62246 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62276:62277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62295:62295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62259:62262 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62247:62255 Smallstep <> s_compile def
R62270:62273 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62263:62263 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62269:62269 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62264:62268 Imp <> SMult constr
R62289:62293 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62278:62282 Imp <> aeval def
R62222:62232 Smallstep <> multi_trans thm
R62310:62316 Coq.Lists.List <> app_ass syndef
R62310:62316 Coq.Lists.List <> app_ass syndef
R62310:62316 Coq.Lists.List <> app_ass syndef
R62364:62364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62378:62379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62412:62412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62372:62375 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62365:62365 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62371:62371 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62366:62370 Imp <> SMult constr
R62391:62394 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62380:62384 Imp <> aeval def
R62406:62410 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62395:62399 Imp <> aeval def
R62341:62351 Smallstep <> multi_trans thm
R62364:62364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62378:62379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62412:62412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62372:62375 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62365:62365 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62371:62371 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62366:62370 Imp <> SMult constr
R62391:62394 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62380:62384 Imp <> aeval def
R62406:62410 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62395:62399 Imp <> aeval def
R62341:62351 Smallstep <> multi_trans thm
R62470:62470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62473:62474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62505:62505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62500:62503 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62486:62488 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R62475:62479 Imp <> aeval def
R62489:62493 Imp <> aeval def
R62448:62457 Smallstep <> multi_step constr
R62470:62470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62473:62474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62505:62505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62500:62503 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62486:62488 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R62475:62479 Imp <> aeval def
R62489:62493 Imp <> aeval def
R62448:62457 Smallstep <> multi_step constr
R62532:62541 Smallstep <> multi_refl constr
R62532:62541 Smallstep <> multi_refl constr
def 62563:62591 <> compiler_is_correct_statement
R62619:62622 Imp <> aexp ind
R62631:62635 Imp <> state def
R62643:62657 Smallstep <> stack_multistep def
R62680:62680 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62683:62684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62697:62697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62681:62682 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62685:62685 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62696:62696 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62686:62690 Imp <> aeval def
R62695:62695 Smallstep <> e var
R62692:62693 Smallstep <> st var
R62662:62662 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62674:62675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62678:62678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62663:62671 Smallstep <> s_compile def
R62673:62673 Smallstep <> e var
R62676:62677 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62659:62660 Smallstep <> st var
prf 62710:62728 <> compiler_is_correct
R62732:62760 Smallstep <> compiler_is_correct_statement def
R62780:62808 Smallstep <> compiler_is_correct_statement def
R62831:62839 Smallstep <> s_compile def
R62861:62864 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62850:62858 Smallstep <> s_compile def
R62865:62866 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62861:62864 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62850:62858 Smallstep <> s_compile def
R62865:62866 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62831:62839 Smallstep <> s_compile def
R62879:62899 Smallstep <> compiler_correct_help thm
R62879:62899 Smallstep <> compiler_correct_help thm
R62908:62916 Coq.Lists.List <> app_nil_r thm
R62908:62916 Coq.Lists.List <> app_nil_r thm

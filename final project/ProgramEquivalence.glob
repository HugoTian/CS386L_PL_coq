DIGEST ac51d9821b1603181f6247c5453561e3
FProgramEquivalence
R317:329 Coq.Bool.Bool <> <> lib
R347:361 Coq.Arith.Arith <> <> lib
R379:393 Coq.Arith.EqNat <> <> lib
R411:425 Coq.omega.Omega <> <> lib
R443:456 Coq.Lists.List <> <> lib
R474:507 Coq.Logic.FunctionalExtensionality <> <> lib
R547:550 Maps <> <> lib
R568:570 Imp <> <> lib
def 694:699 <> aequiv
R710:713 Imp <> aexp ind
R739:743 Imp <> state def
R762:764 Coq.Init.Logic <> :type_scope:x_'='_x not
R751:755 Imp <> aeval def
R760:761 ProgramEquivalence <> a1 var
R757:758 ProgramEquivalence <> st var
R765:769 Imp <> aeval def
R774:775 ProgramEquivalence <> a2 var
R771:772 ProgramEquivalence <> st var
def 790:795 <> bequiv
R806:809 Imp <> bexp ind
R835:839 Imp <> state def
R858:860 Coq.Init.Logic <> :type_scope:x_'='_x not
R847:851 Imp <> beval def
R856:857 ProgramEquivalence <> b1 var
R853:854 ProgramEquivalence <> st var
R861:865 Imp <> beval def
R870:871 ProgramEquivalence <> b2 var
R867:868 ProgramEquivalence <> st var
def 1044:1049 <> cequiv
R1060:1062 Imp <> com ind
R1094:1098 Imp <> state def
R1106:1106 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1121:1127 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1142:1142 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1109:1111 Imp <> ::x_'/'_x_'\\'_x not
R1114:1117 Imp <> ::x_'/'_x_'\\'_x not
R1107:1108 ProgramEquivalence <> c1 var
R1112:1113 ProgramEquivalence <> st var
R1118:1120 ProgramEquivalence <> st' var
R1130:1132 Imp <> ::x_'/'_x_'\\'_x not
R1135:1138 Imp <> ::x_'/'_x_'\\'_x not
R1128:1129 ProgramEquivalence <> c2 var
R1133:1134 ProgramEquivalence <> st var
R1139:1141 ProgramEquivalence <> st' var
prf 1263:1271 <> skip_left
R1286:1291 ProgramEquivalence <> cequiv def
R1316:1316 ProgramEquivalence <> c var
R1304:1306 Imp <> ::x_';;'_x not
R1300:1303 Imp <> ::'SKIP' not
R1307:1307 ProgramEquivalence <> c var
R1470:1474 Imp <> E_Seq constr
R1470:1474 Imp <> E_Seq constr
R1495:1500 Imp <> E_Skip constr
R1495:1500 Imp <> E_Skip constr
prf 1537:1546 <> skip_right
R1561:1566 ProgramEquivalence <> cequiv def
R1589:1589 ProgramEquivalence <> c var
R1575:1577 Imp <> ::x_';;'_x not
R1574:1574 ProgramEquivalence <> c var
R1578:1581 Imp <> ::'SKIP' not
R1736:1740 Imp <> E_Seq constr
R1736:1740 Imp <> E_Seq constr
R1774:1779 Imp <> E_Skip constr
R1774:1779 Imp <> E_Skip constr
prf 1924:1931 <> IFB_true
R1969:1978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1979:1984 ProgramEquivalence <> cequiv def
R2027:2028 ProgramEquivalence <> c1 var
R1994:1997 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1999:2004 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2007:2012 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2015:2017 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1998:1998 ProgramEquivalence <> b var
R2005:2006 ProgramEquivalence <> c1 var
R2013:2014 ProgramEquivalence <> c2 var
R1955:1960 ProgramEquivalence <> bequiv def
R1964:1968 Imp <> BTrue constr
R1962:1962 ProgramEquivalence <> b var
R2191:2196 ProgramEquivalence <> bequiv def
R2285:2292 Imp <> E_IfTrue constr
R2285:2292 Imp <> E_IfTrue constr
R2322:2327 ProgramEquivalence <> bequiv def
prf 2394:2402 <> IFB_false
R2438:2444 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2445:2450 ProgramEquivalence <> cequiv def
R2487:2488 ProgramEquivalence <> c2 var
R2457:2460 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2462:2467 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2470:2475 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2478:2480 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2461:2461 ProgramEquivalence <> b var
R2468:2469 ProgramEquivalence <> c1 var
R2476:2477 ProgramEquivalence <> c2 var
R2423:2428 ProgramEquivalence <> bequiv def
R2432:2437 Imp <> BFalse constr
R2430:2430 ProgramEquivalence <> b var
R2608:2613 ProgramEquivalence <> bequiv def
R2720:2728 Imp <> E_IfFalse constr
R2720:2728 Imp <> E_IfFalse constr
R2742:2747 ProgramEquivalence <> bequiv def
prf 2893:2901 <> beval_neg
R2963:2966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2977:2979 Coq.Init.Logic <> :type_scope:x_'='_x not
R2967:2971 Imp <> beval def
R2976:2976 ProgramEquivalence <> b var
R2973:2974 ProgramEquivalence <> st var
R2980:2983 Coq.Init.Datatypes <> negb def
R2985:2986 ProgramEquivalence <> b' var
R2958:2960 Coq.Init.Logic <> :type_scope:x_'='_x not
R2941:2945 Imp <> beval def
R2951:2954 Imp <> BNot constr
R2956:2956 ProgramEquivalence <> b var
R2947:2948 ProgramEquivalence <> st var
R2961:2962 ProgramEquivalence <> b' var
R3054:3061 Coq.Bool.Bool <> negb_sym thm
R3054:3061 Coq.Bool.Bool <> negb_sym thm
R3054:3061 Coq.Bool.Bool <> negb_sym thm
prf 3096:3111 <> swap_if_branches
R3132:3137 ProgramEquivalence <> cequiv def
R3175:3178 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3185:3190 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3193:3198 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3201:3203 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3179:3182 Imp <> BNot constr
R3184:3184 ProgramEquivalence <> b var
R3191:3192 ProgramEquivalence <> e2 var
R3199:3200 ProgramEquivalence <> e1 var
R3144:3147 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3149:3154 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3157:3162 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3165:3167 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3148:3148 ProgramEquivalence <> b var
R3155:3156 ProgramEquivalence <> e1 var
R3163:3164 ProgramEquivalence <> e2 var
R3284:3292 Imp <> E_IfFalse constr
R3284:3292 Imp <> E_IfFalse constr
R3349:3356 Imp <> E_IfTrue constr
R3349:3356 Imp <> E_IfTrue constr
R3468:3476 Imp <> E_IfFalse constr
R3468:3476 Imp <> E_IfFalse constr
R3489:3497 ProgramEquivalence <> beval_neg thm
R3489:3497 ProgramEquivalence <> beval_neg thm
R3573:3580 Imp <> E_IfTrue constr
R3573:3580 Imp <> E_IfTrue constr
R3593:3601 ProgramEquivalence <> beval_neg thm
R3593:3601 ProgramEquivalence <> beval_neg thm
prf 3752:3762 <> WHILE_false
R3798:3806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3807:3812 ProgramEquivalence <> cequiv def
R3847:3850 Imp <> ::'SKIP' not
R3822:3827 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3829:3832 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3834:3837 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3828:3828 ProgramEquivalence <> b var
R3833:3833 ProgramEquivalence <> c var
R3783:3788 ProgramEquivalence <> bequiv def
R3792:3797 Imp <> BFalse constr
R3790:3790 ProgramEquivalence <> b var
R3966:3971 Imp <> E_Skip constr
R3966:3971 Imp <> E_Skip constr
R4083:4092 Imp <> E_WhileEnd constr
R4083:4092 Imp <> E_WhileEnd constr
prf 4341:4358 <> WHILE_true_nonterm
R4400:4408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4409:4411 Coq.Init.Logic <> :type_scope:'~'_x not
R4442:4443 Coq.Init.Logic <> :type_scope:'~'_x not
R4412:4412 Imp <> ::x_'/'_x_'\\'_x not
R4429:4432 Imp <> ::x_'/'_x_'\\'_x not
R4435:4438 Imp <> ::x_'/'_x_'\\'_x not
R4413:4418 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4420:4423 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4425:4428 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4419:4419 ProgramEquivalence <> b var
R4424:4424 ProgramEquivalence <> c var
R4433:4434 ProgramEquivalence <> st var
R4439:4441 ProgramEquivalence <> st' var
R4386:4391 ProgramEquivalence <> bequiv def
R4395:4399 Imp <> BTrue constr
R4393:4393 ProgramEquivalence <> b var
R4502:4507 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4509:4512 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4514:4517 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4502:4507 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4509:4512 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4514:4517 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R4688:4693 ProgramEquivalence <> bequiv def
prf 4955:4972 <> ex_falso_quodlibet
R4998:5001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5002:5002 ProgramEquivalence <> P var
R4993:4997 Coq.Init.Logic <> False ind
prf 5047:5056 <> skip_state
R5112:5115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5118:5120 Coq.Init.Logic <> :type_scope:x_'='_x not
R5116:5117 ProgramEquivalence <> st var
R5121:5123 ProgramEquivalence <> st' var
R5100:5102 Imp <> ::x_'/'_x_'\\'_x not
R5105:5108 Imp <> ::x_'/'_x_'\\'_x not
R5096:5099 Imp <> ::'SKIP' not
R5103:5104 ProgramEquivalence <> st var
R5109:5111 ProgramEquivalence <> st' var
prf 5195:5204 <> WHILE_true
R5238:5247 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5248:5253 ProgramEquivalence <> cequiv def
R5289:5294 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5300:5303 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5308:5311 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5295:5299 Imp <> BTrue constr
R5304:5307 Imp <> ::'SKIP' not
R5263:5268 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5270:5273 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5275:5278 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5269:5269 ProgramEquivalence <> b var
R5274:5274 ProgramEquivalence <> c var
R5224:5229 ProgramEquivalence <> bequiv def
R5233:5237 Imp <> BTrue constr
R5231:5231 ProgramEquivalence <> b var
R5392:5409 ProgramEquivalence <> WHILE_true_nonterm thm
R5392:5409 ProgramEquivalence <> WHILE_true_nonterm thm
R5459:5476 ProgramEquivalence <> ex_falso_quodlibet thm
R5459:5476 ProgramEquivalence <> ex_falso_quodlibet thm
R5545:5550 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5556:5559 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5564:5567 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5551:5555 Imp <> BTrue constr
R5560:5563 Imp <> ::'SKIP' not
R5545:5550 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5556:5559 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5564:5567 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5551:5555 Imp <> BTrue constr
R5560:5563 Imp <> ::'SKIP' not
R5746:5755 ProgramEquivalence <> skip_state thm
R5746:5755 ProgramEquivalence <> skip_state thm
prf 5958:5971 <> loop_unrolling
R5988:5993 ProgramEquivalence <> cequiv def
R6023:6026 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6028:6034 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6055:6061 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6066:6068 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6027:6027 ProgramEquivalence <> b var
R6036:6038 Imp <> ::x_';;'_x not
R6035:6035 ProgramEquivalence <> c var
R6039:6044 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6046:6049 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6051:6054 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6045:6045 ProgramEquivalence <> b var
R6050:6050 ProgramEquivalence <> c var
R6062:6065 Imp <> ::'SKIP' not
R6000:6005 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6007:6010 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6012:6015 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6006:6006 ProgramEquivalence <> b var
R6011:6011 ProgramEquivalence <> c var
R6201:6209 Imp <> E_IfFalse constr
R6201:6209 Imp <> E_IfFalse constr
R6230:6235 Imp <> E_Skip constr
R6230:6235 Imp <> E_Skip constr
R6272:6279 Imp <> E_IfTrue constr
R6272:6279 Imp <> E_IfTrue constr
R6306:6310 Imp <> E_Seq constr
R6306:6310 Imp <> E_Seq constr
R6456:6466 Imp <> E_WhileLoop constr
R6456:6466 Imp <> E_WhileLoop constr
R6592:6601 Imp <> E_WhileEnd constr
R6592:6601 Imp <> E_WhileEnd constr
prf 6677:6685 <> seq_assoc
R6708:6713 ProgramEquivalence <> cequiv def
R6733:6735 Imp <> ::x_';;'_x not
R6742:6742 Imp <> ::x_';;'_x not
R6731:6732 ProgramEquivalence <> c1 var
R6738:6739 Imp <> ::x_';;'_x not
R6736:6737 ProgramEquivalence <> c2 var
R6740:6741 ProgramEquivalence <> c3 var
R6716:6716 Imp <> ::x_';;'_x not
R6723:6725 Imp <> ::x_';;'_x not
R6719:6720 Imp <> ::x_';;'_x not
R6717:6718 ProgramEquivalence <> c1 var
R6721:6722 ProgramEquivalence <> c2 var
R6726:6727 ProgramEquivalence <> c3 var
R6845:6849 Imp <> E_Seq constr
R6845:6849 Imp <> E_Seq constr
R6891:6895 Imp <> E_Seq constr
R6891:6895 Imp <> E_Seq constr
R7009:7013 Imp <> E_Seq constr
R7009:7013 Imp <> E_Seq constr
R7041:7045 Imp <> E_Seq constr
R7041:7045 Imp <> E_Seq constr
prf 7187:7205 <> identity_assignment
R7219:7220 Maps <> id ind
R7226:7231 ProgramEquivalence <> cequiv def
R7255:7258 Imp <> ::'SKIP' not
R7239:7243 Imp <> ::x_'::='_x not
R7238:7238 ProgramEquivalence <> X var
R7244:7246 Imp <> AId constr
R7248:7248 ProgramEquivalence <> X var
R7361:7368 Maps <> t_update def
R7361:7368 Maps <> t_update def
R7429:7453 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R7429:7453 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R7480:7492 Maps <> t_update_same thm
R7480:7492 Maps <> t_update_same thm
R7480:7492 Maps <> t_update_same thm
R7549:7556 Maps <> t_update def
R7565:7569 Imp <> aeval def
R7576:7578 Imp <> AId constr
R7549:7556 Maps <> t_update def
R7565:7569 Imp <> aeval def
R7576:7578 Imp <> AId constr
R7621:7625 Imp <> E_Ass constr
R7621:7625 Imp <> E_Ass constr
R7656:7680 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R7656:7680 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R7707:7719 Maps <> t_update_same thm
R7707:7719 Maps <> t_update_same thm
R7707:7719 Maps <> t_update_same thm
prf 7850:7862 <> assign_aequiv
R7896:7901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7902:7907 ProgramEquivalence <> cequiv def
R7916:7920 Imp <> ::x_'::='_x not
R7915:7915 ProgramEquivalence <> X var
R7921:7921 ProgramEquivalence <> e var
R7909:7912 Imp <> ::'SKIP' not
R7880:7885 ProgramEquivalence <> aequiv def
R7895:7895 ProgramEquivalence <> e var
R7888:7890 Imp <> AId constr
R7892:7892 ProgramEquivalence <> X var
R7980:7989 ProgramEquivalence <> skip_state thm
R7980:7989 ProgramEquivalence <> skip_state thm
R8007:8012 ProgramEquivalence <> aequiv def
R8033:8036 Coq.Init.Logic <> :type_scope:x_'='_x not
R8059:8059 Coq.Init.Logic <> :type_scope:x_'='_x not
R8037:8044 Maps <> t_update def
R8033:8036 Coq.Init.Logic <> :type_scope:x_'='_x not
R8059:8059 Coq.Init.Logic <> :type_scope:x_'='_x not
R8037:8044 Maps <> t_update def
R8073:8097 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R8073:8097 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R8119:8131 Maps <> t_update_same thm
R8119:8131 Maps <> t_update_same thm
R8119:8131 Maps <> t_update_same thm
R8183:8187 Imp <> E_Ass constr
R8183:8187 Imp <> E_Ass constr
R8278:8280 Coq.Init.Logic <> :type_scope:x_'='_x not
R8281:8288 Maps <> t_update def
R8278:8280 Coq.Init.Logic <> :type_scope:x_'='_x not
R8281:8288 Maps <> t_update def
R8314:8338 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R8314:8338 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R8361:8373 Maps <> t_update_same thm
R8361:8373 Maps <> t_update_same thm
R8361:8373 Maps <> t_update_same thm
R8462:8467 ProgramEquivalence <> aequiv def
R8551:8556 Imp <> E_Skip constr
R8551:8556 Imp <> E_Skip constr
prf 8899:8909 <> refl_aequiv
R8925:8928 Imp <> aexp ind
R8932:8937 ProgramEquivalence <> aequiv def
R8941:8941 ProgramEquivalence <> a var
R8939:8939 ProgramEquivalence <> a var
prf 8992:9001 <> sym_aequiv
R9021:9024 Imp <> aexp ind
R9042:9045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9046:9051 ProgramEquivalence <> aequiv def
R9056:9057 ProgramEquivalence <> a1 var
R9053:9054 ProgramEquivalence <> a2 var
R9030:9035 ProgramEquivalence <> aequiv def
R9040:9041 ProgramEquivalence <> a2 var
R9037:9038 ProgramEquivalence <> a1 var
prf 9128:9139 <> trans_aequiv
R9162:9165 Imp <> aexp ind
R9183:9186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9199:9202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9203:9208 ProgramEquivalence <> aequiv def
R9213:9214 ProgramEquivalence <> a3 var
R9210:9211 ProgramEquivalence <> a1 var
R9187:9192 ProgramEquivalence <> aequiv def
R9197:9198 ProgramEquivalence <> a3 var
R9194:9195 ProgramEquivalence <> a2 var
R9171:9176 ProgramEquivalence <> aequiv def
R9181:9182 ProgramEquivalence <> a2 var
R9178:9179 ProgramEquivalence <> a1 var
R9233:9238 ProgramEquivalence <> aequiv def
prf 9333:9343 <> refl_bequiv
R9359:9362 Imp <> bexp ind
R9366:9371 ProgramEquivalence <> bequiv def
R9375:9375 ProgramEquivalence <> b var
R9373:9373 ProgramEquivalence <> b var
R9394:9399 ProgramEquivalence <> bequiv def
prf 9441:9450 <> sym_bequiv
R9470:9473 Imp <> bexp ind
R9491:9494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9495:9500 ProgramEquivalence <> bequiv def
R9505:9506 ProgramEquivalence <> b1 var
R9502:9503 ProgramEquivalence <> b2 var
R9479:9484 ProgramEquivalence <> bequiv def
R9489:9490 ProgramEquivalence <> b2 var
R9486:9487 ProgramEquivalence <> b1 var
R9525:9530 ProgramEquivalence <> bequiv def
prf 9592:9603 <> trans_bequiv
R9626:9629 Imp <> bexp ind
R9647:9650 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9663:9666 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9667:9672 ProgramEquivalence <> bequiv def
R9677:9678 ProgramEquivalence <> b3 var
R9674:9675 ProgramEquivalence <> b1 var
R9651:9656 ProgramEquivalence <> bequiv def
R9661:9662 ProgramEquivalence <> b3 var
R9658:9659 ProgramEquivalence <> b2 var
R9635:9640 ProgramEquivalence <> bequiv def
R9645:9646 ProgramEquivalence <> b2 var
R9642:9643 ProgramEquivalence <> b1 var
R9697:9702 ProgramEquivalence <> bequiv def
prf 9797:9807 <> refl_cequiv
R9823:9825 Imp <> com ind
R9829:9834 ProgramEquivalence <> cequiv def
R9838:9838 ProgramEquivalence <> c var
R9836:9836 ProgramEquivalence <> c var
R9857:9862 ProgramEquivalence <> cequiv def
R9888:9895 Coq.Init.Logic <> iff_refl thm
R9888:9895 Coq.Init.Logic <> iff_refl thm
prf 9911:9920 <> sym_cequiv
R9940:9942 Imp <> com ind
R9960:9963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9964:9969 ProgramEquivalence <> cequiv def
R9974:9975 ProgramEquivalence <> c1 var
R9971:9972 ProgramEquivalence <> c2 var
R9948:9953 ProgramEquivalence <> cequiv def
R9958:9959 ProgramEquivalence <> c2 var
R9955:9956 ProgramEquivalence <> c1 var
R9994:9999 ProgramEquivalence <> cequiv def
R10049:10053 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10037:10039 Imp <> ::x_'/'_x_'\\'_x not
R10042:10045 Imp <> ::x_'/'_x_'\\'_x not
R10056:10058 Imp <> ::x_'/'_x_'\\'_x not
R10061:10064 Imp <> ::x_'/'_x_'\\'_x not
R10049:10053 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10037:10039 Imp <> ::x_'/'_x_'\\'_x not
R10042:10045 Imp <> ::x_'/'_x_'\\'_x not
R10056:10058 Imp <> ::x_'/'_x_'\\'_x not
R10061:10064 Imp <> ::x_'/'_x_'\\'_x not
R10125:10131 Coq.Init.Logic <> iff_sym thm
R10125:10131 Coq.Init.Logic <> iff_sym thm
prf 10158:10166 <> iff_trans
R10198:10198 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10208:10212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10213:10213 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10223:10228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10238:10238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10231:10235 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10229:10230 ProgramEquivalence <> P1 var
R10236:10237 ProgramEquivalence <> P3 var
R10216:10220 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10214:10215 ProgramEquivalence <> P2 var
R10221:10222 ProgramEquivalence <> P3 var
R10201:10205 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10199:10200 ProgramEquivalence <> P1 var
R10206:10207 ProgramEquivalence <> P2 var
prf 10404:10415 <> trans_cequiv
R10438:10440 Imp <> com ind
R10458:10461 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10474:10477 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10478:10483 ProgramEquivalence <> cequiv def
R10488:10489 ProgramEquivalence <> c3 var
R10485:10486 ProgramEquivalence <> c1 var
R10462:10467 ProgramEquivalence <> cequiv def
R10472:10473 ProgramEquivalence <> c3 var
R10469:10470 ProgramEquivalence <> c2 var
R10446:10451 ProgramEquivalence <> cequiv def
R10456:10457 ProgramEquivalence <> c2 var
R10453:10454 ProgramEquivalence <> c1 var
R10508:10513 ProgramEquivalence <> cequiv def
R10574:10576 Imp <> ::x_'/'_x_'\\'_x not
R10579:10582 Imp <> ::x_'/'_x_'\\'_x not
R10556:10564 ProgramEquivalence <> iff_trans thm
R10574:10576 Imp <> ::x_'/'_x_'\\'_x not
R10579:10582 Imp <> ::x_'/'_x_'\\'_x not
R10556:10564 ProgramEquivalence <> iff_trans thm
prf 11102:11116 <> CAss_congruence
R11152:11157 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11158:11163 ProgramEquivalence <> cequiv def
R11178:11181 Imp <> CAss constr
R11185:11187 ProgramEquivalence <> a1' var
R11183:11183 ProgramEquivalence <> i var
R11166:11169 Imp <> CAss constr
R11173:11174 ProgramEquivalence <> a1 var
R11171:11171 ProgramEquivalence <> i var
R11139:11144 ProgramEquivalence <> aequiv def
R11149:11151 ProgramEquivalence <> a1' var
R11146:11147 ProgramEquivalence <> a1 var
R11300:11304 Imp <> E_Ass constr
R11300:11304 Imp <> E_Ass constr
R11386:11390 Imp <> E_Ass constr
R11386:11390 Imp <> E_Ass constr
prf 11624:11640 <> CWhile_congruence
R11681:11684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11698:11703 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11704:11709 ProgramEquivalence <> cequiv def
R11733:11738 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11742:11745 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11749:11752 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11739:11741 ProgramEquivalence <> b1' var
R11746:11748 ProgramEquivalence <> c1' var
R11712:11717 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11720:11723 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11726:11729 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11718:11719 ProgramEquivalence <> b1 var
R11724:11725 ProgramEquivalence <> c1 var
R11685:11690 ProgramEquivalence <> cequiv def
R11695:11697 ProgramEquivalence <> c1' var
R11692:11693 ProgramEquivalence <> c1 var
R11668:11673 ProgramEquivalence <> bequiv def
R11678:11680 ProgramEquivalence <> b1' var
R11675:11676 ProgramEquivalence <> b1 var
R11772:11777 ProgramEquivalence <> bequiv def
R11779:11784 ProgramEquivalence <> cequiv def
R11876:11881 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11884:11887 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11890:11893 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11876:11881 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11884:11887 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11890:11893 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R12009:12018 Imp <> E_WhileEnd constr
R12009:12018 Imp <> E_WhileEnd constr
R12083:12093 Imp <> E_WhileLoop constr
R12083:12093 Imp <> E_WhileLoop constr
R12342:12347 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R12351:12354 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R12358:12361 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R12342:12347 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R12351:12354 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R12358:12361 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R12480:12489 Imp <> E_WhileEnd constr
R12480:12489 Imp <> E_WhileEnd constr
R12554:12564 Imp <> E_WhileLoop constr
R12554:12564 Imp <> E_WhileLoop constr
prf 12997:13011 <> CSeq_congruence
R13052:13055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13069:13074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13075:13080 ProgramEquivalence <> cequiv def
R13095:13096 Imp <> ::x_';;'_x not
R13092:13094 ProgramEquivalence <> c1' var
R13097:13099 ProgramEquivalence <> c2' var
R13085:13086 Imp <> ::x_';;'_x not
R13083:13084 ProgramEquivalence <> c1 var
R13087:13088 ProgramEquivalence <> c2 var
R13056:13061 ProgramEquivalence <> cequiv def
R13066:13068 ProgramEquivalence <> c2' var
R13063:13064 ProgramEquivalence <> c2 var
R13039:13044 ProgramEquivalence <> cequiv def
R13049:13051 ProgramEquivalence <> c1' var
R13046:13047 ProgramEquivalence <> c1 var
R13127:13132 ProgramEquivalence <> cequiv def
R13175:13180 ProgramEquivalence <> cequiv def
R13285:13289 Imp <> E_Seq constr
R13285:13289 Imp <> E_Seq constr
R13357:13362 ProgramEquivalence <> cequiv def
R13469:13473 Imp <> E_Seq constr
R13469:13473 Imp <> E_Seq constr
prf 13801:13814 <> CIf_congruence
R13858:13861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13875:13878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13892:13897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13898:13903 ProgramEquivalence <> cequiv def
R13942:13945 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13948:13953 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13957:13962 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13966:13968 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13946:13947 ProgramEquivalence <> b' var
R13954:13956 ProgramEquivalence <> c1' var
R13963:13965 ProgramEquivalence <> c2' var
R13906:13909 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13911:13916 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13919:13924 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13927:13929 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13910:13910 ProgramEquivalence <> b var
R13917:13918 ProgramEquivalence <> c1 var
R13925:13926 ProgramEquivalence <> c2 var
R13879:13884 ProgramEquivalence <> cequiv def
R13889:13891 ProgramEquivalence <> c2' var
R13886:13887 ProgramEquivalence <> c2 var
R13862:13867 ProgramEquivalence <> cequiv def
R13872:13874 ProgramEquivalence <> c1' var
R13869:13870 ProgramEquivalence <> c1 var
R13847:13852 ProgramEquivalence <> bequiv def
R13856:13857 ProgramEquivalence <> b' var
R13854:13854 ProgramEquivalence <> b var
R13998:14003 ProgramEquivalence <> cequiv def
R14047:14052 ProgramEquivalence <> cequiv def
R14069:14074 ProgramEquivalence <> bequiv def
R14137:14144 Imp <> E_IfTrue constr
R14137:14144 Imp <> E_IfTrue constr
R14243:14251 Imp <> E_IfFalse constr
R14243:14251 Imp <> E_IfFalse constr
R14339:14344 ProgramEquivalence <> cequiv def
R14361:14366 ProgramEquivalence <> bequiv def
R14445:14452 Imp <> E_IfTrue constr
R14445:14452 Imp <> E_IfTrue constr
R14551:14559 Imp <> E_IfFalse constr
R14551:14559 Imp <> E_IfFalse constr

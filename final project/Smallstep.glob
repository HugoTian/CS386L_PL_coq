DIGEST 54bd8d6e53f0f69ed88fccc007fe36d1
FSmallstep
R69:83 Coq.Arith.Arith <> <> lib
R101:115 Coq.Arith.EqNat <> <> lib
R133:147 Coq.omega.Omega <> <> lib
R165:178 Coq.Lists.List <> <> lib
R218:221 Maps <> <> lib
R239:241 Imp <> <> lib
ind 4166:4167 <> tm
constr 4183:4183 <> C
constr 4224:4224 <> P
R4190:4193 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4194:4195 Smallstep <> tm ind
R4187:4189 Coq.Init.Datatypes <> nat ind
R4230:4233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4236:4239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4240:4241 Smallstep <> tm ind
R4234:4235 Smallstep <> tm ind
R4228:4229 Smallstep <> tm ind
def 4397:4401 <> evalF
R4408:4409 Smallstep <> tm ind
R4414:4416 Coq.Init.Datatypes <> nat ind
R4429:4429 Smallstep <> t var
R4440:4440 Smallstep <> C constr
R4453:4453 Smallstep <> P constr
R4472:4474 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4464:4468 Smallstep <> evalF def
R4475:4479 Smallstep <> evalF def
ind 5100:5103 <> eval
constr 5132:5138 <> E_Const
constr 5171:5176 <> E_Plus
R5109:5112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5116:5119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5113:5115 Coq.Init.Datatypes <> nat ind
R5107:5108 Smallstep <> tm ind
R5289:5292 Smallstep <> eval ind
R5161:5164 Smallstep <> ::x_'\\'_x not
R5158:5158 Smallstep <> C constr
R5160:5160 Smallstep <> n var
R5165:5165 Smallstep <> n var
R5214:5223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5232:5241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5249:5253 Smallstep <> ::x_'\\'_x not
R5261:5261 Smallstep <> ::x_'\\'_x not
R5242:5242 Smallstep <> P constr
R5247:5248 Smallstep <> t2 var
R5244:5245 Smallstep <> t1 var
R5256:5258 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5254:5255 Smallstep <> n1 var
R5259:5260 Smallstep <> n2 var
R5226:5229 Smallstep <> ::x_'\\'_x not
R5224:5225 Smallstep <> t2 var
R5230:5231 Smallstep <> n2 var
R5208:5211 Smallstep <> ::x_'\\'_x not
R5206:5207 Smallstep <> t1 var
R5212:5213 Smallstep <> n1 var
R5289:5292 Smallstep <> eval ind
not 5272:5272 <> ::x_'\\'_x
mod 5308:5319 <> SimpleArith1
ind 5937:5940 SimpleArith1 step
constr 5968:5984 SimpleArith1 ST_PlusConstConst
constr 6044:6051 SimpleArith1 ST_Plus1
constr 6124:6131 SimpleArith1 ST_Plus2
R5946:5949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5952:5955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5950:5951 Smallstep SimpleArith1 tm ind
R5944:5945 Smallstep SimpleArith1 tm ind
R6236:6239 Smallstep <> step ind
R6023:6027 Smallstep SimpleArith1 ::x_'==>'_x not
R6008:6008 Smallstep SimpleArith1 P constr
R6018:6018 Smallstep SimpleArith1 C constr
R6020:6021 Smallstep <> n2 var
R6011:6011 Smallstep SimpleArith1 C constr
R6013:6014 Smallstep <> n1 var
R6028:6028 Smallstep SimpleArith1 C constr
R6033:6035 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6031:6032 Smallstep <> n1 var
R6036:6037 Smallstep <> n2 var
R6089:6098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6106:6110 Smallstep SimpleArith1 ::x_'==>'_x not
R6099:6099 Smallstep SimpleArith1 P constr
R6104:6105 Smallstep <> t2 var
R6101:6102 Smallstep <> t1 var
R6111:6111 Smallstep SimpleArith1 P constr
R6117:6118 Smallstep <> t2 var
R6113:6115 Smallstep <> t1' var
R6081:6085 Smallstep SimpleArith1 ::x_'==>'_x not
R6079:6080 Smallstep <> t1 var
R6086:6088 Smallstep <> t1' var
R6169:6178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6190:6194 Smallstep SimpleArith1 ::x_'==>'_x not
R6179:6179 Smallstep SimpleArith1 P constr
R6188:6189 Smallstep <> t2 var
R6182:6182 Smallstep SimpleArith1 C constr
R6184:6185 Smallstep <> n1 var
R6195:6195 Smallstep SimpleArith1 P constr
R6204:6206 Smallstep <> t2' var
R6198:6198 Smallstep SimpleArith1 C constr
R6200:6201 Smallstep <> n1 var
R6161:6165 Smallstep SimpleArith1 ::x_'==>'_x not
R6159:6160 Smallstep <> t2 var
R6166:6168 Smallstep <> t2' var
R6236:6239 Smallstep SimpleArith1 step ind
not 6217:6217 SimpleArith1 ::x_'==>'_x
def 6874:6884 SimpleArith1 test_step_1
R6943:6959 Smallstep SimpleArith1 ::x_'==>'_x not
R6894:6894 Smallstep SimpleArith1 P constr
R6929:6929 Smallstep SimpleArith1 P constr
R6938:6938 Smallstep SimpleArith1 C constr
R6932:6932 Smallstep SimpleArith1 C constr
R6905:6905 Smallstep SimpleArith1 P constr
R6914:6914 Smallstep SimpleArith1 C constr
R6908:6908 Smallstep SimpleArith1 C constr
R6960:6960 Smallstep SimpleArith1 P constr
R6991:6991 Smallstep SimpleArith1 P constr
R7000:7000 Smallstep SimpleArith1 C constr
R6994:6994 Smallstep SimpleArith1 C constr
R6971:6971 Smallstep SimpleArith1 C constr
R6975:6977 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7022:7029 Smallstep SimpleArith1 ST_Plus1 constr
R7022:7029 Smallstep SimpleArith1 ST_Plus1 constr
R7038:7054 Smallstep SimpleArith1 ST_PlusConstConst constr
R7038:7054 Smallstep SimpleArith1 ST_PlusConstConst constr
def 7295:7305 SimpleArith1 test_step_2
R7384:7400 Smallstep SimpleArith1 ::x_'==>'_x not
R7315:7315 Smallstep SimpleArith1 P constr
R7340:7340 Smallstep SimpleArith1 P constr
R7369:7369 Smallstep SimpleArith1 P constr
R7378:7378 Smallstep SimpleArith1 C constr
R7372:7372 Smallstep SimpleArith1 C constr
R7353:7353 Smallstep SimpleArith1 C constr
R7326:7326 Smallstep SimpleArith1 C constr
R7401:7401 Smallstep SimpleArith1 P constr
R7426:7426 Smallstep SimpleArith1 P constr
R7455:7455 Smallstep SimpleArith1 C constr
R7459:7461 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7439:7439 Smallstep SimpleArith1 C constr
R7412:7412 Smallstep SimpleArith1 C constr
R7501:7508 Smallstep SimpleArith1 ST_Plus2 constr
R7501:7508 Smallstep SimpleArith1 ST_Plus2 constr
R7517:7524 Smallstep SimpleArith1 ST_Plus2 constr
R7517:7524 Smallstep SimpleArith1 ST_Plus2 constr
R7533:7549 Smallstep SimpleArith1 ST_PlusConstConst constr
R7533:7549 Smallstep SimpleArith1 ST_PlusConstConst constr
R7572:7583 Smallstep SimpleArith1 <> mod
def 8189:8196 <> relation
R8212:8213 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8215:8216 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8214:8214 Smallstep <> X var
R8211:8211 Smallstep <> X var
def 9972:9984 <> deterministic
R10000:10007 Smallstep <> relation def
R10009:10009 Smallstep <> X var
R10034:10034 Smallstep <> X var
R10043:10046 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10053:10056 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10059:10061 Coq.Init.Logic <> :type_scope:x_'='_x not
R10057:10058 Smallstep <> y1 var
R10062:10063 Smallstep <> y2 var
R10047:10047 Smallstep <> R var
R10051:10052 Smallstep <> y2 var
R10049:10049 Smallstep <> x var
R10037:10037 Smallstep <> R var
R10041:10042 Smallstep <> y1 var
R10039:10039 Smallstep <> x var
mod 10074:10085 <> SimpleArith2
prf 10118:10135 SimpleArith2 step_deterministic
R10140:10152 Smallstep SimpleArith2 deterministic def
R10154:10157 Smallstep SimpleArith1 step ind
R10176:10188 Smallstep SimpleArith2 deterministic def
R10932:10943 Smallstep SimpleArith2 <> mod
R11635:11635 Coq.Init.Datatypes <> S constr
R11638:11638 Coq.Init.Datatypes <> S constr
R11635:11635 Coq.Init.Datatypes <> S constr
R11638:11638 Coq.Init.Datatypes <> S constr
R11675:11675 Coq.Init.Datatypes <> S constr
mod 12598:12609 <> SimpleArith3
prf 12642:12663 SimpleArith3 step_deterministic_alt
R12666:12678 Smallstep SimpleArith3 deterministic def
R12680:12683 Smallstep SimpleArith1 step ind
R13010:13021 Smallstep SimpleArith3 <> mod
ind 14174:14178 <> value
constr 14198:14204 <> v_const
R14184:14187 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14182:14183 Smallstep <> tm ind
R14218:14222 Smallstep <> value ind
R14225:14225 Smallstep <> C constr
R14227:14227 Smallstep <> n var
ind 15444:15447 <> step
constr 15475:15491 <> ST_PlusConstConst
constr 15561:15568 <> ST_Plus1
constr 15645:15652 <> ST_Plus2
R15453:15456 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15459:15462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15457:15458 Smallstep <> tm ind
R15451:15452 Smallstep <> tm ind
R15811:15814 Smallstep <> step ind
R15534:15544 Smallstep <> ::x_'==>'_x not
R15519:15519 Smallstep <> P constr
R15529:15529 Smallstep <> C constr
R15531:15532 Smallstep <> n2 var
R15522:15522 Smallstep <> C constr
R15524:15525 Smallstep <> n1 var
R15545:15545 Smallstep <> C constr
R15550:15552 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15548:15549 Smallstep <> n1 var
R15553:15554 Smallstep <> n2 var
R15608:15619 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15627:15631 Smallstep <> ::x_'==>'_x not
R15620:15620 Smallstep <> P constr
R15625:15626 Smallstep <> t2 var
R15622:15623 Smallstep <> t1 var
R15632:15632 Smallstep <> P constr
R15638:15639 Smallstep <> t2 var
R15634:15636 Smallstep <> t1' var
R15600:15604 Smallstep <> ::x_'==>'_x not
R15598:15599 Smallstep <> t1 var
R15605:15607 Smallstep <> t1' var
R15690:15739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15750:15761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15769:15773 Smallstep <> ::x_'==>'_x not
R15762:15762 Smallstep <> P constr
R15767:15768 Smallstep <> t2 var
R15764:15765 Smallstep <> v1 var
R15774:15774 Smallstep <> P constr
R15779:15781 Smallstep <> t2' var
R15776:15777 Smallstep <> v1 var
R15742:15746 Smallstep <> ::x_'==>'_x not
R15740:15741 Smallstep <> t2 var
R15747:15749 Smallstep <> t2' var
R15682:15686 Smallstep <> value ind
R15688:15689 Smallstep <> v1 var
R15811:15814 Smallstep <> step ind
not 15792:15792 <> ::x_'==>'_x
prf 17089:17106 <> step_deterministic
R17112:17124 Smallstep <> deterministic def
R17126:17129 Smallstep <> step ind
R17166:17178 Smallstep <> deterministic def
prf 18700:18714 <> strong_progress
R18737:18741 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18761:18761 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18730:18734 Smallstep <> value ind
R18736:18736 Smallstep <> t var
R18742:18748 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18751:18752 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18754:18758 Smallstep <> ::x_'==>'_x not
R18753:18753 Smallstep <> t var
R18759:18760 Smallstep <> t' var
R18812:18818 Smallstep <> v_const constr
R18812:18818 Smallstep <> v_const constr
R18953:18953 Smallstep <> C constr
R18957:18959 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18953:18953 Smallstep <> C constr
R18957:18959 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18982:18998 Smallstep <> ST_PlusConstConst constr
R18982:18998 Smallstep <> ST_PlusConstConst constr
R19062:19062 Smallstep <> P constr
R19062:19062 Smallstep <> P constr
R19088:19095 Smallstep <> ST_Plus2 constr
R19088:19095 Smallstep <> ST_Plus2 constr
R19175:19175 Smallstep <> P constr
R19175:19175 Smallstep <> P constr
R19201:19208 Smallstep <> ST_Plus1 constr
R19201:19208 Smallstep <> ST_Plus1 constr
def 19884:19894 <> normal_form
R19908:19915 Smallstep <> relation def
R19917:19917 Smallstep <> X var
R19923:19923 Smallstep <> X var
R19938:19939 Coq.Init.Logic <> :type_scope:'~'_x not
R19940:19946 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19949:19950 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19951:19951 Smallstep <> R var
R19955:19956 Smallstep <> t' var
R19953:19953 Smallstep <> t var
prf 20506:20516 <> value_is_nf
R20539:20542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20543:20553 Smallstep <> normal_form def
R20560:20560 Smallstep <> v var
R20555:20558 Smallstep <> step ind
R20532:20536 Smallstep <> value ind
R20538:20538 Smallstep <> v var
R20579:20589 Smallstep <> normal_form def
prf 20678:20688 <> nf_is_value
R20722:20725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20726:20730 Smallstep <> value ind
R20732:20732 Smallstep <> t var
R20704:20714 Smallstep <> normal_form def
R20721:20721 Smallstep <> t var
R20716:20719 Smallstep <> step ind
R20793:20803 Smallstep <> normal_form def
R20839:20842 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20832:20836 Smallstep <> value ind
R20843:20849 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20852:20853 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20855:20859 Smallstep <> ::x_'==>'_x not
R20860:20861 Smallstep <> t' var
R20839:20842 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20832:20836 Smallstep <> value ind
R20843:20849 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20852:20853 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20855:20859 Smallstep <> ::x_'==>'_x not
R20860:20861 Smallstep <> t' var
R20900:20914 Smallstep <> strong_progress thm
R20900:20914 Smallstep <> strong_progress thm
prf 21019:21034 <> nf_same_as_value
R21068:21072 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21050:21060 Smallstep <> normal_form def
R21067:21067 Smallstep <> t var
R21062:21065 Smallstep <> step ind
R21073:21077 Smallstep <> value ind
R21079:21079 Smallstep <> t var
R21104:21114 Smallstep <> nf_is_value thm
R21104:21114 Smallstep <> nf_is_value thm
R21123:21133 Smallstep <> value_is_nf thm
R21123:21133 Smallstep <> value_is_nf thm
mod 21859:21863 <> Temp1
ind 21877:21881 Temp1 value
constr 21901:21907 Temp1 v_const
constr 21935:21941 Temp1 v_funny
R21887:21890 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21885:21886 Smallstep Temp1 tm ind
R21921:21925 Smallstep <> value ind
R21928:21928 Smallstep Temp1 C constr
R21930:21930 Smallstep <> n var
R22007:22011 Smallstep <> value ind
R22014:22014 Smallstep Temp1 P constr
R22020:22020 Smallstep Temp1 C constr
R22022:22023 Smallstep <> n2 var
R22016:22017 Smallstep <> t1 var
ind 22088:22091 Temp1 step
constr 22119:22135 Temp1 ST_PlusConstConst
constr 22195:22202 Temp1 ST_Plus1
constr 22275:22282 Temp1 ST_Plus2
R22097:22100 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22103:22106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22101:22102 Smallstep Temp1 tm ind
R22095:22096 Smallstep Temp1 tm ind
R22397:22400 Smallstep <> step ind
R22174:22178 Smallstep Temp1 ::x_'==>'_x not
R22159:22159 Smallstep Temp1 P constr
R22169:22169 Smallstep Temp1 C constr
R22171:22172 Smallstep <> n2 var
R22162:22162 Smallstep Temp1 C constr
R22164:22165 Smallstep <> n1 var
R22179:22179 Smallstep Temp1 C constr
R22184:22186 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22182:22183 Smallstep <> n1 var
R22187:22188 Smallstep <> n2 var
R22240:22249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22257:22261 Smallstep Temp1 ::x_'==>'_x not
R22250:22250 Smallstep Temp1 P constr
R22255:22256 Smallstep <> t2 var
R22252:22253 Smallstep <> t1 var
R22262:22262 Smallstep Temp1 P constr
R22268:22269 Smallstep <> t2 var
R22264:22266 Smallstep <> t1' var
R22232:22236 Smallstep Temp1 ::x_'==>'_x not
R22230:22231 Smallstep <> t1 var
R22237:22239 Smallstep <> t1' var
R22318:22327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22338:22347 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22355:22359 Smallstep Temp1 ::x_'==>'_x not
R22348:22348 Smallstep Temp1 P constr
R22353:22354 Smallstep <> t2 var
R22350:22351 Smallstep <> v1 var
R22360:22360 Smallstep Temp1 P constr
R22365:22367 Smallstep <> t2' var
R22362:22363 Smallstep <> v1 var
R22330:22334 Smallstep Temp1 ::x_'==>'_x not
R22328:22329 Smallstep <> t2 var
R22335:22337 Smallstep <> t2' var
R22310:22314 Smallstep Temp1 value ind
R22316:22317 Smallstep <> v1 var
R22397:22400 Smallstep Temp1 step ind
not 22378:22378 Temp1 ::x_'==>'_x
prf 22416:22444 Temp1 value_not_same_as_normal_form
R22450:22456 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22458:22459 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22467:22470 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22460:22464 Smallstep Temp1 value ind
R22466:22466 Smallstep <> v var
R22471:22472 Coq.Init.Logic <> :type_scope:'~'_x not
R22473:22483 Smallstep Temp1 normal_form def
R22490:22490 Smallstep <> v var
R22485:22488 Smallstep Temp1 step ind
R22529:22529 Smallstep Temp1 P constr
R22538:22538 Smallstep Temp1 C constr
R22532:22532 Smallstep Temp1 C constr
R22529:22529 Smallstep Temp1 P constr
R22538:22538 Smallstep Temp1 C constr
R22532:22532 Smallstep Temp1 C constr
R22574:22580 Smallstep Temp1 v_funny constr
R22574:22580 Smallstep Temp1 v_funny constr
R22604:22614 Smallstep Temp1 normal_form def
R22624:22626 Coq.Init.Logic <> not def
R22662:22662 Smallstep Temp1 C constr
R22666:22668 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22662:22662 Smallstep Temp1 C constr
R22666:22668 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22686:22702 Smallstep Temp1 ST_PlusConstConst constr
R22686:22702 Smallstep Temp1 ST_PlusConstConst constr
R22725:22729 Smallstep Temp1 <> mod
mod 22944:22948 <> Temp2
ind 22962:22966 Temp2 value
constr 22986:22992 Temp2 v_const
R22972:22975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22970:22971 Smallstep Temp2 tm ind
R23006:23010 Smallstep <> value ind
R23013:23013 Smallstep Temp2 C constr
R23015:23015 Smallstep <> n var
ind 23079:23082 Temp2 step
constr 23110:23117 Temp2 ST_Funny
constr 23199:23215 Temp2 ST_PlusConstConst
constr 23275:23282 Temp2 ST_Plus1
constr 23355:23362 Temp2 ST_Plus2
R23088:23091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23094:23097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23092:23093 Smallstep Temp2 tm ind
R23086:23087 Smallstep Temp2 tm ind
R23477:23480 Smallstep <> step ind
R23176:23180 Smallstep Temp2 ::x_'==>'_x not
R23173:23173 Smallstep Temp2 C constr
R23175:23175 Smallstep <> n var
R23181:23181 Smallstep Temp2 P constr
R23190:23190 Smallstep Temp2 C constr
R23184:23184 Smallstep Temp2 C constr
R23186:23186 Smallstep <> n var
R23254:23258 Smallstep Temp2 ::x_'==>'_x not
R23239:23239 Smallstep Temp2 P constr
R23249:23249 Smallstep Temp2 C constr
R23251:23252 Smallstep <> n2 var
R23242:23242 Smallstep Temp2 C constr
R23244:23245 Smallstep <> n1 var
R23259:23259 Smallstep Temp2 C constr
R23264:23266 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23262:23263 Smallstep <> n1 var
R23267:23268 Smallstep <> n2 var
R23320:23329 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23337:23341 Smallstep Temp2 ::x_'==>'_x not
R23330:23330 Smallstep Temp2 P constr
R23335:23336 Smallstep <> t2 var
R23332:23333 Smallstep <> t1 var
R23342:23342 Smallstep Temp2 P constr
R23348:23349 Smallstep <> t2 var
R23344:23346 Smallstep <> t1' var
R23312:23316 Smallstep Temp2 ::x_'==>'_x not
R23310:23311 Smallstep <> t1 var
R23317:23319 Smallstep <> t1' var
R23398:23407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23418:23427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23435:23439 Smallstep Temp2 ::x_'==>'_x not
R23428:23428 Smallstep Temp2 P constr
R23433:23434 Smallstep <> t2 var
R23430:23431 Smallstep <> v1 var
R23440:23440 Smallstep Temp2 P constr
R23445:23447 Smallstep <> t2' var
R23442:23443 Smallstep <> v1 var
R23410:23414 Smallstep Temp2 ::x_'==>'_x not
R23408:23409 Smallstep <> t2 var
R23415:23417 Smallstep <> t2' var
R23390:23394 Smallstep Temp2 value ind
R23396:23397 Smallstep <> v1 var
R23477:23480 Smallstep Temp2 step ind
not 23458:23458 Temp2 ::x_'==>'_x
prf 23496:23524 Temp2 value_not_same_as_normal_form
R23530:23536 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23538:23539 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23547:23550 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23540:23544 Smallstep Temp2 value ind
R23546:23546 Smallstep <> v var
R23551:23552 Coq.Init.Logic <> :type_scope:'~'_x not
R23553:23563 Smallstep Temp2 normal_form def
R23570:23570 Smallstep <> v var
R23565:23568 Smallstep Temp2 step ind
R23608:23608 Smallstep Temp2 C constr
R23608:23608 Smallstep Temp2 C constr
R23643:23649 Smallstep Temp2 v_const constr
R23643:23649 Smallstep Temp2 v_const constr
R23673:23683 Smallstep Temp2 normal_form def
R23693:23695 Coq.Init.Logic <> not def
R23731:23731 Smallstep Temp2 P constr
R23740:23740 Smallstep Temp2 C constr
R23734:23734 Smallstep Temp2 C constr
R23731:23731 Smallstep Temp2 P constr
R23740:23740 Smallstep Temp2 C constr
R23734:23734 Smallstep Temp2 C constr
R23759:23766 Smallstep Temp2 ST_Funny constr
R23759:23766 Smallstep Temp2 ST_Funny constr
R23790:23794 Smallstep Temp2 <> mod
mod 24271:24275 <> Temp3
ind 24289:24293 Temp3 value
constr 24315:24321 Temp3 v_const
R24299:24302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24297:24298 Smallstep Temp3 tm ind
R24335:24339 Smallstep <> value ind
R24342:24342 Smallstep Temp3 C constr
R24344:24344 Smallstep <> n var
ind 24408:24411 Temp3 step
constr 24439:24455 Temp3 ST_PlusConstConst
constr 24515:24522 Temp3 ST_Plus1
R24417:24420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24423:24426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24421:24422 Smallstep Temp3 tm ind
R24415:24416 Smallstep Temp3 tm ind
R24619:24622 Smallstep <> step ind
R24494:24498 Smallstep Temp3 ::x_'==>'_x not
R24479:24479 Smallstep Temp3 P constr
R24489:24489 Smallstep Temp3 C constr
R24491:24492 Smallstep <> n2 var
R24482:24482 Smallstep Temp3 C constr
R24484:24485 Smallstep <> n1 var
R24499:24499 Smallstep Temp3 C constr
R24504:24506 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24502:24503 Smallstep <> n1 var
R24507:24508 Smallstep <> n2 var
R24560:24569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24577:24581 Smallstep Temp3 ::x_'==>'_x not
R24570:24570 Smallstep Temp3 P constr
R24575:24576 Smallstep <> t2 var
R24572:24573 Smallstep <> t1 var
R24582:24582 Smallstep Temp3 P constr
R24588:24589 Smallstep <> t2 var
R24584:24586 Smallstep <> t1' var
R24552:24556 Smallstep Temp3 ::x_'==>'_x not
R24550:24551 Smallstep <> t1 var
R24557:24559 Smallstep <> t1' var
R24619:24622 Smallstep Temp3 step ind
not 24600:24600 Temp3 ::x_'==>'_x
prf 24681:24709 Temp3 value_not_same_as_normal_form
R24715:24721 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24723:24724 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24734:24737 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24725:24726 Coq.Init.Logic <> :type_scope:'~'_x not
R24727:24731 Smallstep Temp3 value ind
R24733:24733 Smallstep <> t var
R24738:24748 Smallstep Temp3 normal_form def
R24755:24755 Smallstep <> t var
R24750:24753 Smallstep Temp3 step ind
R24793:24793 Smallstep Temp3 P constr
R24820:24820 Smallstep Temp3 P constr
R24829:24829 Smallstep Temp3 C constr
R24823:24823 Smallstep Temp3 C constr
R24796:24796 Smallstep Temp3 C constr
R24793:24793 Smallstep Temp3 P constr
R24820:24820 Smallstep Temp3 P constr
R24829:24829 Smallstep Temp3 C constr
R24823:24823 Smallstep Temp3 C constr
R24796:24796 Smallstep Temp3 C constr
R24904:24914 Smallstep Temp3 normal_form def
R24924:24926 Coq.Init.Logic <> not def
R25006:25010 Smallstep Temp3 <> mod
mod 25126:25130 <> Temp4
ind 25335:25336 Temp4 tm
constr 25352:25356 Temp4 ttrue
constr 25367:25372 Temp4 tfalse
constr 25383:25385 Temp4 tif
R25360:25361 Smallstep <> tm ind
R25376:25377 Smallstep <> tm ind
R25391:25394 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25397:25400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25403:25406 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25407:25408 Smallstep <> tm ind
R25401:25402 Smallstep <> tm ind
R25395:25396 Smallstep <> tm ind
R25389:25390 Smallstep <> tm ind
ind 25422:25426 Temp4 value
constr 25448:25453 Temp4 v_true
constr 25473:25479 Temp4 v_false
R25432:25435 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25430:25431 Smallstep Temp4 tm ind
R25457:25461 Smallstep <> value ind
R25463:25467 Smallstep Temp4 ttrue constr
R25483:25487 Smallstep <> value ind
R25489:25494 Smallstep Temp4 tfalse constr
ind 25557:25560 Temp4 step
constr 25588:25596 Temp4 ST_IfTrue
constr 25647:25656 Temp4 ST_IfFalse
constr 25708:25712 Temp4 ST_If
R25566:25569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25572:25575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25570:25571 Smallstep Temp4 tm ind
R25564:25565 Smallstep Temp4 tm ind
R25822:25825 Smallstep <> step ind
R25635:25639 Smallstep Temp4 ::x_'==>'_x not
R25620:25622 Smallstep Temp4 tif constr
R25633:25634 Smallstep <> t2 var
R25630:25631 Smallstep <> t1 var
R25624:25628 Smallstep Temp4 ttrue constr
R25640:25641 Smallstep <> t1 var
R25696:25700 Smallstep Temp4 ::x_'==>'_x not
R25680:25682 Smallstep Temp4 tif constr
R25694:25695 Smallstep <> t2 var
R25691:25692 Smallstep <> t1 var
R25684:25689 Smallstep Temp4 tfalse constr
R25701:25702 Smallstep <> t2 var
R25753:25762 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25775:25779 Smallstep Temp4 ::x_'==>'_x not
R25763:25765 Smallstep Temp4 tif constr
R25773:25774 Smallstep <> t3 var
R25770:25771 Smallstep <> t2 var
R25767:25768 Smallstep <> t1 var
R25780:25782 Smallstep Temp4 tif constr
R25791:25792 Smallstep <> t3 var
R25788:25789 Smallstep <> t2 var
R25784:25786 Smallstep <> t1' var
R25745:25749 Smallstep Temp4 ::x_'==>'_x not
R25743:25744 Smallstep <> t1 var
R25750:25752 Smallstep <> t1' var
R25822:25825 Smallstep Temp4 step ind
not 25803:25803 Temp4 ::x_'==>'_x
def 26063:26077 Temp4 bool_step_prop1
R26090:26094 Smallstep Temp4 ::x_'==>'_x not
R26084:26089 Smallstep Temp4 tfalse constr
R26095:26100 Smallstep Temp4 tfalse constr
prf 26157:26175 Temp4 not_bool_step_prop1
R26181:26182 Coq.Init.Logic <> :type_scope:'~'_x not
R26183:26197 Smallstep Temp4 bool_step_prop1 def
R26216:26230 Smallstep Temp4 bool_step_prop1 def
def 26276:26290 Temp4 bool_step_prop2
R26381:26392 Smallstep Temp4 ::x_'==>'_x not
R26300:26302 Smallstep Temp4 tif constr
R26356:26358 Smallstep Temp4 tif constr
R26374:26379 Smallstep Temp4 tfalse constr
R26367:26372 Smallstep Temp4 tfalse constr
R26360:26365 Smallstep Temp4 tfalse constr
R26325:26327 Smallstep Temp4 tif constr
R26341:26345 Smallstep Temp4 ttrue constr
R26335:26339 Smallstep Temp4 ttrue constr
R26329:26333 Smallstep Temp4 ttrue constr
R26311:26315 Smallstep Temp4 ttrue constr
R26393:26397 Smallstep Temp4 ttrue constr
prf 26514:26532 Temp4 not_bool_step_prop2
R26538:26539 Coq.Init.Logic <> :type_scope:'~'_x not
R26540:26554 Smallstep Temp4 bool_step_prop2 def
R26573:26587 Smallstep Temp4 bool_step_prop2 def
def 26633:26647 Temp4 bool_step_prop3
R26736:26748 Smallstep Temp4 ::x_'==>'_x not
R26657:26659 Smallstep Temp4 tif constr
R26730:26735 Smallstep Temp4 tfalse constr
R26700:26702 Smallstep Temp4 tif constr
R26716:26720 Smallstep Temp4 ttrue constr
R26710:26714 Smallstep Temp4 ttrue constr
R26704:26708 Smallstep Temp4 ttrue constr
R26669:26671 Smallstep Temp4 tif constr
R26685:26689 Smallstep Temp4 ttrue constr
R26679:26683 Smallstep Temp4 ttrue constr
R26673:26677 Smallstep Temp4 ttrue constr
R26749:26751 Smallstep Temp4 tif constr
R26804:26809 Smallstep Temp4 tfalse constr
R26774:26776 Smallstep Temp4 tif constr
R26790:26794 Smallstep Temp4 ttrue constr
R26784:26788 Smallstep Temp4 ttrue constr
R26778:26782 Smallstep Temp4 ttrue constr
R26760:26764 Smallstep Temp4 ttrue constr
prf 26887:26904 Temp4 bool_step_prop3_pf
R26910:26924 Smallstep Temp4 bool_step_prop3 def
R26943:26957 Smallstep Temp4 bool_step_prop3 def
R26969:26973 Smallstep Temp4 ST_If constr
R26969:26973 Smallstep Temp4 ST_If constr
R26982:26990 Smallstep Temp4 ST_IfTrue constr
R26982:26990 Smallstep Temp4 ST_IfTrue constr
prf 27193:27207 Temp4 strong_progress
R27230:27234 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27254:27254 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27223:27227 Smallstep Temp4 value ind
R27229:27229 Smallstep <> t var
R27235:27241 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27244:27245 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27247:27251 Smallstep Temp4 ::x_'==>'_x not
R27246:27246 Smallstep <> t var
R27252:27253 Smallstep <> t' var
R27325:27330 Smallstep Temp4 v_true constr
R27325:27330 Smallstep Temp4 v_true constr
R27362:27368 Smallstep Temp4 v_false constr
R27362:27368 Smallstep Temp4 v_false constr
R27483:27491 Smallstep Temp4 ST_IfTrue constr
R27483:27491 Smallstep Temp4 ST_IfTrue constr
R27508:27517 Smallstep Temp4 ST_IfFalse constr
R27508:27517 Smallstep Temp4 ST_IfFalse constr
R27596:27600 Smallstep Temp4 ST_If constr
R27596:27600 Smallstep Temp4 ST_If constr
prf 27703:27720 Temp4 step_deterministic
R27726:27738 Smallstep Temp4 deterministic def
R27740:27743 Smallstep Temp4 step ind
mod 28022:28026 <> Temp4.Temp5
ind 28796:28799 Temp4.Temp5 step
constr 28827:28835 Temp4.Temp5 ST_IfTrue
constr 28886:28895 Temp4.Temp5 ST_IfFalse
constr 28947:28951 Temp4.Temp5 ST_If
constr 29055:29069 Temp4.Temp5 ST_ShortCircuit
R28805:28808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28811:28814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28809:28810 Smallstep Temp4.Temp5 tm ind
R28803:28804 Smallstep Temp4.Temp5 tm ind
R29159:29162 Smallstep <> step ind
R28874:28878 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28859:28861 Smallstep Temp4.Temp5 tif constr
R28872:28873 Smallstep <> t2 var
R28869:28870 Smallstep <> t1 var
R28863:28867 Smallstep Temp4.Temp5 ttrue constr
R28879:28880 Smallstep <> t1 var
R28935:28939 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28919:28921 Smallstep Temp4.Temp5 tif constr
R28933:28934 Smallstep <> t2 var
R28930:28931 Smallstep <> t1 var
R28923:28928 Smallstep Temp4.Temp5 tfalse constr
R28940:28941 Smallstep <> t2 var
R28992:29001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29014:29018 Smallstep Temp4.Temp5 ::x_'==>'_x not
R29002:29004 Smallstep Temp4.Temp5 tif constr
R29012:29013 Smallstep <> t3 var
R29009:29010 Smallstep <> t2 var
R29006:29007 Smallstep <> t1 var
R29019:29021 Smallstep Temp4.Temp5 tif constr
R29030:29031 Smallstep <> t3 var
R29027:29028 Smallstep <> t2 var
R29023:29025 Smallstep <> t1' var
R28984:28988 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28982:28983 Smallstep <> t1 var
R28989:28991 Smallstep <> t1' var
R29101:29110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29123:29127 Smallstep Temp4.Temp5 ::x_'==>'_x not
R29111:29113 Smallstep Temp4.Temp5 tif constr
R29121:29122 Smallstep <> v2 var
R29118:29119 Smallstep <> v2 var
R29115:29116 Smallstep <> t1 var
R29128:29129 Smallstep <> v2 var
R29093:29097 Smallstep Temp4.Temp5 value ind
R29099:29100 Smallstep <> v2 var
R29159:29162 Smallstep Temp4.Temp5 step ind
not 29140:29140 Temp4.Temp5 ::x_'==>'_x
def 29183:29197 Temp4.Temp5 bool_step_prop4
R29288:29306 Smallstep Temp4.Temp5 ::x_'==>'_x not
R29211:29213 Smallstep Temp4.Temp5 tif constr
R29282:29287 Smallstep Temp4.Temp5 tfalse constr
R29263:29268 Smallstep Temp4.Temp5 tfalse constr
R29228:29230 Smallstep Temp4.Temp5 tif constr
R29244:29248 Smallstep Temp4.Temp5 ttrue constr
R29238:29242 Smallstep Temp4.Temp5 ttrue constr
R29232:29236 Smallstep Temp4.Temp5 ttrue constr
R29307:29312 Smallstep Temp4.Temp5 tfalse constr
def 29324:29344 Temp4.Temp5 bool_step_prop4_holds
R29350:29364 Smallstep Temp4.Temp5 bool_step_prop4 def
R29401:29415 Smallstep Temp4.Temp5 bool_step_prop4 def
R29426:29440 Smallstep Temp4.Temp5 ST_ShortCircuit constr
R29426:29440 Smallstep Temp4.Temp5 ST_ShortCircuit constr
R29449:29455 Smallstep Temp4.Temp5 v_false constr
R29449:29455 Smallstep Temp4.Temp5 v_false constr
prf 30106:30126 Temp4.Temp5 step_nondeterministic
R30132:30133 Coq.Init.Logic <> :type_scope:'~'_x not
R30134:30146 Smallstep Temp4.Temp5 deterministic def
R30148:30151 Smallstep Temp4.Temp5 step ind
R30170:30182 Smallstep Temp4.Temp5 deterministic def
R30209:30211 Smallstep Temp4.Temp5 tif constr
R30243:30247 Smallstep Temp4.Temp5 ttrue constr
R30237:30241 Smallstep Temp4.Temp5 ttrue constr
R30214:30216 Smallstep Temp4.Temp5 tif constr
R30230:30234 Smallstep Temp4.Temp5 ttrue constr
R30224:30228 Smallstep Temp4.Temp5 ttrue constr
R30218:30222 Smallstep Temp4.Temp5 ttrue constr
R30209:30211 Smallstep Temp4.Temp5 tif constr
R30243:30247 Smallstep Temp4.Temp5 ttrue constr
R30237:30241 Smallstep Temp4.Temp5 ttrue constr
R30214:30216 Smallstep Temp4.Temp5 tif constr
R30230:30234 Smallstep Temp4.Temp5 ttrue constr
R30224:30228 Smallstep Temp4.Temp5 ttrue constr
R30218:30222 Smallstep Temp4.Temp5 ttrue constr
R30267:30271 Smallstep Temp4.Temp5 ::x_'==>'_x not
R30272:30274 Smallstep Temp4.Temp5 tif constr
R30288:30292 Smallstep Temp4.Temp5 ttrue constr
R30282:30286 Smallstep Temp4.Temp5 ttrue constr
R30276:30280 Smallstep Temp4.Temp5 ttrue constr
R30267:30271 Smallstep Temp4.Temp5 ::x_'==>'_x not
R30272:30274 Smallstep Temp4.Temp5 tif constr
R30288:30292 Smallstep Temp4.Temp5 ttrue constr
R30282:30286 Smallstep Temp4.Temp5 ttrue constr
R30276:30280 Smallstep Temp4.Temp5 ttrue constr
R30323:30327 Smallstep Temp4.Temp5 ST_If constr
R30323:30327 Smallstep Temp4.Temp5 ST_If constr
R30336:30344 Smallstep Temp4.Temp5 ST_IfTrue constr
R30336:30344 Smallstep Temp4.Temp5 ST_IfTrue constr
R30358:30362 Smallstep Temp4.Temp5 ::x_'==>'_x not
R30363:30367 Smallstep Temp4.Temp5 ttrue constr
R30358:30362 Smallstep Temp4.Temp5 ::x_'==>'_x not
R30363:30367 Smallstep Temp4.Temp5 ttrue constr
R30397:30411 Smallstep Temp4.Temp5 ST_ShortCircuit constr
R30397:30411 Smallstep Temp4.Temp5 ST_ShortCircuit constr
R30422:30427 Smallstep Temp4.Temp5 v_true constr
R30422:30427 Smallstep Temp4.Temp5 v_true constr
R30461:30463 Coq.Init.Logic <> :type_scope:x_'='_x not
R30440:30442 Smallstep Temp4.Temp5 tif constr
R30456:30460 Smallstep Temp4.Temp5 ttrue constr
R30450:30454 Smallstep Temp4.Temp5 ttrue constr
R30444:30448 Smallstep Temp4.Temp5 ttrue constr
R30464:30468 Smallstep Temp4.Temp5 ttrue constr
R30461:30463 Coq.Init.Logic <> :type_scope:x_'='_x not
R30440:30442 Smallstep Temp4.Temp5 tif constr
R30456:30460 Smallstep Temp4.Temp5 ttrue constr
R30450:30454 Smallstep Temp4.Temp5 ttrue constr
R30444:30448 Smallstep Temp4.Temp5 ttrue constr
R30464:30468 Smallstep Temp4.Temp5 ttrue constr
prf 30862:30876 Temp4.Temp5 strong_progress
R30899:30903 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30923:30923 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30892:30896 Smallstep Temp4.Temp5 value ind
R30898:30898 Smallstep <> t var
R30904:30910 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30913:30914 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30916:30920 Smallstep Temp4.Temp5 ::x_'==>'_x not
R30915:30915 Smallstep <> t var
R30921:30922 Smallstep <> t' var
R30976:30981 Smallstep Temp4.Temp5 v_true constr
R30976:30981 Smallstep Temp4.Temp5 v_true constr
R31013:31019 Smallstep Temp4.Temp5 v_false constr
R31013:31019 Smallstep Temp4.Temp5 v_false constr
R31134:31142 Smallstep Temp4.Temp5 ST_IfTrue constr
R31134:31142 Smallstep Temp4.Temp5 ST_IfTrue constr
R31159:31168 Smallstep Temp4.Temp5 ST_IfFalse constr
R31159:31168 Smallstep Temp4.Temp5 ST_IfFalse constr
R31247:31251 Smallstep Temp4.Temp5 ST_If constr
R31247:31251 Smallstep Temp4.Temp5 ST_If constr
R31705:31709 Smallstep Temp4.Temp5 <> mod
R31716:31720 Smallstep Temp4 <> mod
ind 32736:32740 <> multi
constr 32787:32796 <> multi_refl
constr 32833:32842 <> multi_step
R32755:32762 Smallstep <> relation def
R32764:32764 Smallstep <> X var
R32769:32776 Smallstep <> relation def
R32817:32821 Smallstep <> multi ind
R32827:32827 Smallstep <> x var
R32825:32825 Smallstep <> x var
R32891:32914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32926:32949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32950:32954 Smallstep <> multi ind
R32960:32960 Smallstep <> z var
R32958:32958 Smallstep <> x var
R32915:32919 Smallstep <> multi ind
R32925:32925 Smallstep <> z var
R32923:32923 Smallstep <> y var
R32890:32890 Smallstep <> y var
R32888:32888 Smallstep <> x var
R33681:33685 Smallstep <> multi ind
R33687:33690 Smallstep <> step ind
not 33661:33661 <> ::x_'==>*'_x
prf 34235:34241 <> multi_R
R34264:34271 Smallstep <> relation def
R34273:34273 Smallstep <> X var
R34283:34283 Smallstep <> X var
R34299:34302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34304:34308 Smallstep <> multi ind
R34310:34310 Smallstep <> R var
R34315:34315 Smallstep <> y var
R34313:34313 Smallstep <> x var
R34294:34294 Smallstep <> R var
R34298:34298 Smallstep <> y var
R34296:34296 Smallstep <> x var
R34353:34362 Smallstep <> multi_step constr
R34353:34362 Smallstep <> multi_step constr
R34387:34396 Smallstep <> multi_refl constr
R34387:34396 Smallstep <> multi_refl constr
prf 34457:34467 <> multi_trans
R34493:34500 Smallstep <> relation def
R34502:34502 Smallstep <> X var
R34514:34514 Smallstep <> X var
R34535:34545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34557:34566 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34567:34571 Smallstep <> multi ind
R34577:34577 Smallstep <> z var
R34575:34575 Smallstep <> x var
R34573:34573 Smallstep <> R var
R34546:34550 Smallstep <> multi ind
R34556:34556 Smallstep <> z var
R34554:34554 Smallstep <> y var
R34552:34552 Smallstep <> R var
R34524:34528 Smallstep <> multi ind
R34534:34534 Smallstep <> y var
R34532:34532 Smallstep <> x var
R34530:34530 Smallstep <> R var
R34696:34705 Smallstep <> multi_step constr
R34696:34705 Smallstep <> multi_step constr
prf 35040:35055 <> test_multistep_1
R35113:35127 Smallstep <> ::x_'==>*'_x not
R35064:35064 Smallstep <> P constr
R35099:35099 Smallstep <> P constr
R35108:35108 Smallstep <> C constr
R35102:35102 Smallstep <> C constr
R35075:35075 Smallstep <> P constr
R35084:35084 Smallstep <> C constr
R35078:35078 Smallstep <> C constr
R35128:35128 Smallstep <> C constr
R35131:35131 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35137:35141 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35147:35147 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35133:35135 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35143:35145 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35195:35195 Smallstep <> P constr
R35242:35242 Smallstep <> P constr
R35251:35251 Smallstep <> C constr
R35245:35245 Smallstep <> C constr
R35214:35214 Smallstep <> C constr
R35218:35220 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35166:35175 Smallstep <> multi_step constr
R35195:35195 Smallstep <> P constr
R35242:35242 Smallstep <> P constr
R35251:35251 Smallstep <> C constr
R35245:35245 Smallstep <> C constr
R35214:35214 Smallstep <> C constr
R35218:35220 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35166:35175 Smallstep <> multi_step constr
R35267:35274 Smallstep <> ST_Plus1 constr
R35267:35274 Smallstep <> ST_Plus1 constr
R35283:35299 Smallstep <> ST_PlusConstConst constr
R35283:35299 Smallstep <> ST_PlusConstConst constr
R35339:35339 Smallstep <> P constr
R35386:35386 Smallstep <> C constr
R35390:35392 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35358:35358 Smallstep <> C constr
R35362:35364 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35310:35319 Smallstep <> multi_step constr
R35339:35339 Smallstep <> P constr
R35386:35386 Smallstep <> C constr
R35390:35392 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35358:35358 Smallstep <> C constr
R35362:35364 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35310:35319 Smallstep <> multi_step constr
R35407:35414 Smallstep <> ST_Plus2 constr
R35407:35414 Smallstep <> ST_Plus2 constr
R35423:35429 Smallstep <> v_const constr
R35423:35429 Smallstep <> v_const constr
R35440:35456 Smallstep <> ST_PlusConstConst constr
R35440:35456 Smallstep <> ST_PlusConstConst constr
R35467:35473 Smallstep <> multi_R thm
R35467:35473 Smallstep <> multi_R thm
R35484:35500 Smallstep <> ST_PlusConstConst constr
R35484:35500 Smallstep <> ST_PlusConstConst constr
prf 35650:35666 <> test_multistep_1'
R35724:35737 Smallstep <> ::x_'==>*'_x not
R35675:35675 Smallstep <> P constr
R35710:35710 Smallstep <> P constr
R35719:35719 Smallstep <> C constr
R35713:35713 Smallstep <> C constr
R35686:35686 Smallstep <> P constr
R35695:35695 Smallstep <> C constr
R35689:35689 Smallstep <> C constr
R35738:35738 Smallstep <> C constr
R35741:35741 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35747:35751 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35757:35757 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35743:35745 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35753:35755 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35777:35786 Smallstep <> multi_step constr
R35777:35786 Smallstep <> multi_step constr
R35795:35802 Smallstep <> ST_Plus1 constr
R35795:35802 Smallstep <> ST_Plus1 constr
R35811:35827 Smallstep <> ST_PlusConstConst constr
R35811:35827 Smallstep <> ST_PlusConstConst constr
R35839:35848 Smallstep <> multi_step constr
R35839:35848 Smallstep <> multi_step constr
R35857:35864 Smallstep <> ST_Plus2 constr
R35857:35864 Smallstep <> ST_Plus2 constr
R35873:35879 Smallstep <> v_const constr
R35873:35879 Smallstep <> v_const constr
R35890:35906 Smallstep <> ST_PlusConstConst constr
R35890:35906 Smallstep <> ST_PlusConstConst constr
R35918:35927 Smallstep <> multi_step constr
R35918:35927 Smallstep <> multi_step constr
R35936:35952 Smallstep <> ST_PlusConstConst constr
R35936:35952 Smallstep <> ST_PlusConstConst constr
R35963:35972 Smallstep <> multi_refl constr
R35963:35972 Smallstep <> multi_refl constr
prf 36047:36062 <> test_multistep_2
R36070:36075 Smallstep <> ::x_'==>*'_x not
R36067:36067 Smallstep <> C constr
R36076:36076 Smallstep <> C constr
R36114:36123 Smallstep <> multi_refl constr
R36114:36123 Smallstep <> multi_refl constr
prf 36208:36223 <> test_multistep_3
R36245:36259 Smallstep <> ::x_'==>*'_x not
R36232:36232 Smallstep <> P constr
R36241:36241 Smallstep <> C constr
R36235:36235 Smallstep <> C constr
R36260:36260 Smallstep <> P constr
R36269:36269 Smallstep <> C constr
R36263:36263 Smallstep <> C constr
R36308:36317 Smallstep <> multi_refl constr
R36308:36317 Smallstep <> multi_refl constr
prf 36394:36409 <> test_multistep_4
R36487:36500 Smallstep <> ::x_'==>*'_x not
R36418:36418 Smallstep <> P constr
R36443:36443 Smallstep <> P constr
R36472:36472 Smallstep <> P constr
R36481:36481 Smallstep <> C constr
R36475:36475 Smallstep <> C constr
R36456:36456 Smallstep <> C constr
R36429:36429 Smallstep <> C constr
R36501:36501 Smallstep <> P constr
R36526:36526 Smallstep <> C constr
R36530:36533 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36539:36539 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36535:36537 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36512:36512 Smallstep <> C constr
R36601:36601 Smallstep <> P constr
R36634:36634 Smallstep <> P constr
R36671:36671 Smallstep <> C constr
R36675:36677 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36651:36651 Smallstep <> C constr
R36616:36616 Smallstep <> C constr
R36577:36586 Smallstep <> multi_step constr
R36601:36601 Smallstep <> P constr
R36634:36634 Smallstep <> P constr
R36671:36671 Smallstep <> C constr
R36675:36677 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36651:36651 Smallstep <> C constr
R36616:36616 Smallstep <> C constr
R36577:36586 Smallstep <> multi_step constr
R36693:36700 Smallstep <> ST_Plus2 constr
R36693:36700 Smallstep <> ST_Plus2 constr
R36709:36715 Smallstep <> v_const constr
R36709:36715 Smallstep <> v_const constr
R36724:36731 Smallstep <> ST_Plus2 constr
R36724:36731 Smallstep <> ST_Plus2 constr
R36748:36754 Smallstep <> v_const constr
R36748:36754 Smallstep <> v_const constr
R36763:36779 Smallstep <> ST_PlusConstConst constr
R36763:36779 Smallstep <> ST_PlusConstConst constr
R36790:36796 Smallstep <> multi_R thm
R36790:36796 Smallstep <> multi_R thm
R36807:36814 Smallstep <> ST_Plus2 constr
R36807:36814 Smallstep <> ST_Plus2 constr
R36823:36829 Smallstep <> v_const constr
R36823:36829 Smallstep <> v_const constr
R36838:36854 Smallstep <> ST_PlusConstConst constr
R36838:36854 Smallstep <> ST_PlusConstConst constr
def 37115:37130 <> step_normal_form
R37135:37145 Smallstep <> normal_form def
R37147:37150 Smallstep <> step ind
def 37165:37178 <> normal_form_of
R37188:37189 Smallstep <> tm ind
R37207:37210 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37199:37204 Smallstep <> ::x_'==>*'_x not
R37198:37198 Smallstep <> t var
R37205:37206 Smallstep <> t' var
R37211:37226 Smallstep <> step_normal_form def
R37228:37229 Smallstep <> t' var
prf 37676:37694 <> normal_forms_unique
R37699:37711 Smallstep <> deterministic def
R37713:37726 Smallstep <> normal_form_of def
R37798:37810 Smallstep <> deterministic def
R37820:37833 Smallstep <> normal_form_of def
R38316:38318 Coq.Init.Logic <> :type_scope:x_'='_x not
R38316:38318 Coq.Init.Logic <> :type_scope:x_'='_x not
R38331:38348 Smallstep <> step_deterministic thm
R38331:38348 Smallstep <> step_deterministic thm
def 38716:38726 <> normalizing
R38740:38747 Smallstep <> relation def
R38749:38749 Smallstep <> X var
R38767:38773 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38776:38781 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38796:38799 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38783:38787 Smallstep <> multi ind
R38789:38789 Smallstep <> R var
R38794:38795 Smallstep <> t' var
R38792:38792 Smallstep <> t var
R38800:38810 Smallstep <> normal_form def
R38814:38815 Smallstep <> t' var
R38812:38812 Smallstep <> R var
prf 39209:39225 <> multistep_congr_1
R39263:39271 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39279:39284 Smallstep <> ::x_'==>*'_x not
R39272:39272 Smallstep <> P constr
R39277:39278 Smallstep <> t2 var
R39274:39275 Smallstep <> t1 var
R39285:39285 Smallstep <> P constr
R39291:39292 Smallstep <> t2 var
R39287:39289 Smallstep <> t1' var
R39254:39259 Smallstep <> ::x_'==>*'_x not
R39252:39253 Smallstep <> t1 var
R39260:39262 Smallstep <> t1' var
R39366:39375 Smallstep <> multi_refl constr
R39366:39375 Smallstep <> multi_refl constr
R39424:39424 Smallstep <> P constr
R39407:39416 Smallstep <> multi_step constr
R39424:39424 Smallstep <> P constr
R39407:39416 Smallstep <> multi_step constr
R39447:39454 Smallstep <> ST_Plus1 constr
R39447:39454 Smallstep <> ST_Plus1 constr
prf 39553:39569 <> multistep_congr_2
R39604:39612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39624:39632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39640:39645 Smallstep <> ::x_'==>*'_x not
R39633:39633 Smallstep <> P constr
R39638:39639 Smallstep <> t2 var
R39635:39636 Smallstep <> t1 var
R39646:39646 Smallstep <> P constr
R39651:39653 Smallstep <> t2' var
R39648:39649 Smallstep <> t1 var
R39615:39620 Smallstep <> ::x_'==>*'_x not
R39613:39614 Smallstep <> t2 var
R39621:39623 Smallstep <> t2' var
R39596:39600 Smallstep <> value ind
R39602:39603 Smallstep <> t1 var
R39748:39757 Smallstep <> multi_refl constr
R39748:39757 Smallstep <> multi_refl constr
R39812:39812 Smallstep <> P constr
R39795:39804 Smallstep <> multi_step constr
R39812:39812 Smallstep <> P constr
R39795:39804 Smallstep <> multi_step constr
R39835:39842 Smallstep <> ST_Plus2 constr
R39835:39842 Smallstep <> ST_Plus2 constr
prf 41080:41095 <> step_normalizing
R41101:41111 Smallstep <> normalizing def
R41113:41116 Smallstep <> step ind
R41135:41145 Smallstep <> normalizing def
R41191:41191 Smallstep <> C constr
R41191:41191 Smallstep <> C constr
R41232:41241 Smallstep <> multi_refl constr
R41232:41241 Smallstep <> multi_refl constr
R41366:41381 Smallstep <> nf_same_as_value thm
R41366:41381 Smallstep <> nf_same_as_value thm
R41366:41381 Smallstep <> nf_same_as_value thm
R41390:41396 Smallstep <> v_const constr
R41390:41396 Smallstep <> v_const constr
R41599:41614 Smallstep <> nf_same_as_value thm
R41599:41614 Smallstep <> nf_same_as_value thm
R41599:41614 Smallstep <> nf_same_as_value thm
R41632:41647 Smallstep <> nf_same_as_value thm
R41632:41647 Smallstep <> nf_same_as_value thm
R41632:41647 Smallstep <> nf_same_as_value thm
R41778:41778 Smallstep <> C constr
R41783:41785 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R41778:41778 Smallstep <> C constr
R41783:41785 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R41857:41857 Smallstep <> P constr
R41860:41860 Smallstep <> C constr
R41839:41849 Smallstep <> multi_trans thm
R41857:41857 Smallstep <> P constr
R41860:41860 Smallstep <> C constr
R41839:41849 Smallstep <> multi_trans thm
R41887:41903 Smallstep <> multistep_congr_1 thm
R41887:41903 Smallstep <> multistep_congr_1 thm
R41964:41964 Smallstep <> P constr
R41974:41974 Smallstep <> C constr
R41967:41967 Smallstep <> C constr
R41933:41943 Smallstep <> multi_trans thm
R41964:41964 Smallstep <> P constr
R41974:41974 Smallstep <> C constr
R41967:41967 Smallstep <> C constr
R41933:41943 Smallstep <> multi_trans thm
R41998:42014 Smallstep <> multistep_congr_2 thm
R41998:42014 Smallstep <> multistep_congr_2 thm
R42023:42029 Smallstep <> v_const constr
R42023:42029 Smallstep <> v_const constr
R42059:42065 Smallstep <> multi_R thm
R42059:42065 Smallstep <> multi_R thm
R42074:42090 Smallstep <> ST_PlusConstConst constr
R42074:42090 Smallstep <> ST_PlusConstConst constr
R42129:42144 Smallstep <> nf_same_as_value thm
R42129:42144 Smallstep <> nf_same_as_value thm
R42129:42144 Smallstep <> nf_same_as_value thm
R42153:42159 Smallstep <> v_const constr
R42153:42159 Smallstep <> v_const constr
prf 42686:42700 <> eval__multistep
R42724:42727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42729:42734 Smallstep <> ::x_'==>*'_x not
R42728:42728 Smallstep <> t var
R42735:42735 Smallstep <> C constr
R42737:42737 Smallstep <> n var
R42719:42722 Smallstep <> ::x_'\\'_x not
R42718:42718 Smallstep <> t var
R42723:42723 Smallstep <> n var
R44111:44120 Smallstep <> multi_refl constr
R44111:44120 Smallstep <> multi_refl constr
R44159:44164 Smallstep <> ::x_'==>*'_x not
R44152:44152 Smallstep <> P constr
R44165:44165 Smallstep <> P constr
R44168:44168 Smallstep <> C constr
R44159:44164 Smallstep <> ::x_'==>*'_x not
R44152:44152 Smallstep <> P constr
R44165:44165 Smallstep <> P constr
R44168:44168 Smallstep <> C constr
R44198:44214 Smallstep <> multistep_congr_1 thm
R44198:44214 Smallstep <> multistep_congr_1 thm
R44252:44269 Smallstep <> ::x_'==>*'_x not
R44241:44241 Smallstep <> P constr
R44244:44244 Smallstep <> C constr
R44270:44270 Smallstep <> P constr
R44280:44280 Smallstep <> C constr
R44273:44273 Smallstep <> C constr
R44252:44269 Smallstep <> ::x_'==>*'_x not
R44241:44241 Smallstep <> P constr
R44244:44244 Smallstep <> C constr
R44270:44270 Smallstep <> P constr
R44280:44280 Smallstep <> C constr
R44273:44273 Smallstep <> C constr
R44307:44323 Smallstep <> multistep_congr_2 thm
R44307:44323 Smallstep <> multistep_congr_2 thm
R44332:44338 Smallstep <> v_const constr
R44332:44338 Smallstep <> v_const constr
R44380:44397 Smallstep <> ::x_'==>*'_x not
R44365:44365 Smallstep <> P constr
R44375:44375 Smallstep <> C constr
R44368:44368 Smallstep <> C constr
R44398:44398 Smallstep <> C constr
R44403:44405 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44380:44397 Smallstep <> ::x_'==>*'_x not
R44365:44365 Smallstep <> P constr
R44375:44375 Smallstep <> C constr
R44368:44368 Smallstep <> C constr
R44398:44398 Smallstep <> C constr
R44403:44405 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44432:44441 Smallstep <> multi_step constr
R44432:44441 Smallstep <> multi_step constr
R44451:44467 Smallstep <> ST_PlusConstConst constr
R44451:44467 Smallstep <> ST_PlusConstConst constr
R44476:44485 Smallstep <> multi_refl constr
R44476:44485 Smallstep <> multi_refl constr
R44499:44509 Smallstep <> multi_trans thm
R44499:44509 Smallstep <> multi_trans thm
R44542:44552 Smallstep <> multi_trans thm
R44542:44552 Smallstep <> multi_trans thm
prf 46147:46156 <> step__eval
R46188:46196 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46204:46212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46214:46217 Smallstep <> ::x_'\\'_x not
R46213:46213 Smallstep <> t var
R46218:46218 Smallstep <> n var
R46199:46202 Smallstep <> ::x_'\\'_x not
R46197:46198 Smallstep <> t' var
R46203:46203 Smallstep <> n var
R46181:46185 Smallstep <> ::x_'==>'_x not
R46180:46180 Smallstep <> t var
R46186:46187 Smallstep <> t' var
R46378:46383 Smallstep <> E_Plus constr
R46392:46398 Smallstep <> E_Const constr
R46378:46383 Smallstep <> E_Plus constr
R46392:46398 Smallstep <> E_Const constr
R46392:46398 Smallstep <> E_Const constr
R46448:46453 Smallstep <> E_Plus constr
R46448:46453 Smallstep <> E_Plus constr
R46515:46520 Smallstep <> E_Plus constr
R46515:46520 Smallstep <> E_Plus constr
prf 46971:46985 <> multistep__eval
R47023:47026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47027:47033 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R47035:47036 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R47045:47048 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47039:47041 Coq.Init.Logic <> :type_scope:x_'='_x not
R47037:47038 Smallstep <> t' var
R47042:47042 Smallstep <> C constr
R47044:47044 Smallstep <> n var
R47050:47053 Smallstep <> ::x_'\\'_x not
R47049:47049 Smallstep <> t var
R47054:47054 Smallstep <> n var
R47004:47017 Smallstep <> normal_form_of def
R47021:47022 Smallstep <> t' var
R47019:47019 Smallstep <> t var
R47112:47125 Smallstep <> normal_form_of def
R47242:47257 Smallstep <> nf_same_as_value thm
R47242:47257 Smallstep <> nf_same_as_value thm
R47242:47257 Smallstep <> nf_same_as_value thm
R47379:47385 Smallstep <> E_Const constr
R47379:47385 Smallstep <> E_Const constr
R47420:47429 Smallstep <> step__eval thm
R47420:47429 Smallstep <> step__eval thm
prf 47974:47983 <> evalF_eval
R48012:48016 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48008:48010 Coq.Init.Logic <> :type_scope:x_'='_x not
R48001:48005 Smallstep <> evalF def
R48007:48007 Smallstep <> t var
R48011:48011 Smallstep <> n var
R48018:48021 Smallstep <> ::x_'\\'_x not
R48017:48017 Smallstep <> t var
R48022:48022 Smallstep <> n var
R48173:48179 Smallstep <> E_Const constr
R48173:48179 Smallstep <> E_Const constr
R48249:48254 Smallstep <> E_Plus constr
R48249:48254 Smallstep <> E_Plus constr
mod 48739:48746 <> Combined
ind 48760:48761 Combined tm
constr 48777:48777 Combined C
constr 48795:48795 Combined P
constr 48818:48822 Combined ttrue
constr 48833:48838 Combined tfalse
constr 48849:48851 Combined tif
R48784:48787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48788:48789 Smallstep <> tm ind
R48781:48783 Coq.Init.Datatypes <> nat ind
R48801:48804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48807:48810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48811:48812 Smallstep <> tm ind
R48805:48806 Smallstep <> tm ind
R48799:48800 Smallstep <> tm ind
R48826:48827 Smallstep <> tm ind
R48842:48843 Smallstep <> tm ind
R48857:48860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48863:48866 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48869:48872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48873:48874 Smallstep <> tm ind
R48867:48868 Smallstep <> tm ind
R48861:48862 Smallstep <> tm ind
R48855:48856 Smallstep <> tm ind
ind 48888:48892 Combined value
constr 48914:48920 Combined v_const
constr 48950:48955 Combined v_true
constr 48975:48981 Combined v_false
R48898:48901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48896:48897 Smallstep Combined tm ind
R48934:48938 Smallstep <> value ind
R48941:48941 Smallstep Combined C constr
R48943:48943 Smallstep <> n var
R48959:48963 Smallstep <> value ind
R48965:48969 Smallstep Combined ttrue constr
R48985:48989 Smallstep <> value ind
R48991:48996 Smallstep Combined tfalse constr
ind 49059:49062 Combined step
constr 49090:49106 Combined ST_PlusConstConst
constr 49166:49173 Combined ST_Plus1
constr 49246:49253 Combined ST_Plus2
constr 49344:49352 Combined ST_IfTrue
constr 49403:49412 Combined ST_IfFalse
constr 49464:49468 Combined ST_If
R49068:49071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49074:49077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49072:49073 Smallstep Combined tm ind
R49066:49067 Smallstep Combined tm ind
R49578:49581 Smallstep <> step ind
R49145:49149 Smallstep Combined ::x_'==>'_x not
R49130:49130 Smallstep Combined P constr
R49140:49140 Smallstep Combined C constr
R49142:49143 Smallstep <> n2 var
R49133:49133 Smallstep Combined C constr
R49135:49136 Smallstep <> n1 var
R49150:49150 Smallstep Combined C constr
R49155:49157 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R49153:49154 Smallstep <> n1 var
R49158:49159 Smallstep <> n2 var
R49211:49220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49228:49232 Smallstep Combined ::x_'==>'_x not
R49221:49221 Smallstep Combined P constr
R49226:49227 Smallstep <> t2 var
R49223:49224 Smallstep <> t1 var
R49233:49233 Smallstep Combined P constr
R49239:49240 Smallstep <> t2 var
R49235:49237 Smallstep <> t1' var
R49203:49207 Smallstep Combined ::x_'==>'_x not
R49201:49202 Smallstep <> t1 var
R49208:49210 Smallstep <> t1' var
R49289:49298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49309:49318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49326:49330 Smallstep Combined ::x_'==>'_x not
R49319:49319 Smallstep Combined P constr
R49324:49325 Smallstep <> t2 var
R49321:49322 Smallstep <> v1 var
R49331:49331 Smallstep Combined P constr
R49336:49338 Smallstep <> t2' var
R49333:49334 Smallstep <> v1 var
R49301:49305 Smallstep Combined ::x_'==>'_x not
R49299:49300 Smallstep <> t2 var
R49306:49308 Smallstep <> t2' var
R49281:49285 Smallstep Combined value ind
R49287:49288 Smallstep <> v1 var
R49391:49395 Smallstep Combined ::x_'==>'_x not
R49376:49378 Smallstep Combined tif constr
R49389:49390 Smallstep <> t2 var
R49386:49387 Smallstep <> t1 var
R49380:49384 Smallstep Combined ttrue constr
R49396:49397 Smallstep <> t1 var
R49452:49456 Smallstep Combined ::x_'==>'_x not
R49436:49438 Smallstep Combined tif constr
R49450:49451 Smallstep <> t2 var
R49447:49448 Smallstep <> t1 var
R49440:49445 Smallstep Combined tfalse constr
R49457:49458 Smallstep <> t2 var
R49509:49518 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49531:49535 Smallstep Combined ::x_'==>'_x not
R49519:49521 Smallstep Combined tif constr
R49529:49530 Smallstep <> t3 var
R49526:49527 Smallstep <> t2 var
R49523:49524 Smallstep <> t1 var
R49536:49538 Smallstep Combined tif constr
R49547:49548 Smallstep <> t3 var
R49544:49545 Smallstep <> t2 var
R49540:49542 Smallstep <> t1' var
R49501:49505 Smallstep Combined ::x_'==>'_x not
R49499:49500 Smallstep <> t1 var
R49506:49508 Smallstep <> t1' var
R49578:49581 Smallstep Combined step ind
not 49559:49559 Combined ::x_'==>'_x
prf 49914:49931 Combined step_deterministic
R49934:49946 Smallstep Combined deterministic def
R49948:49951 Smallstep Combined step ind
R49970:49982 Smallstep Combined deterministic def
prf 50288:50302 Combined strong_progress
R50308:50310 Coq.Init.Logic <> :type_scope:'~'_x not
R50353:50353 Coq.Init.Logic <> :type_scope:'~'_x not
R50328:50332 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50352:50352 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50321:50325 Smallstep Combined value ind
R50327:50327 Smallstep <> t var
R50333:50339 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50342:50343 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50345:50349 Smallstep Combined ::x_'==>'_x not
R50344:50344 Smallstep <> t var
R50350:50351 Smallstep <> t' var
R50387:50387 Smallstep Combined P constr
R50395:50399 Smallstep Combined ttrue constr
R50389:50393 Smallstep Combined ttrue constr
R50387:50387 Smallstep Combined P constr
R50395:50399 Smallstep Combined ttrue constr
R50389:50393 Smallstep Combined ttrue constr
R50425:50429 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50449:50449 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50418:50422 Smallstep Combined value ind
R50430:50436 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50439:50440 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50442:50446 Smallstep Combined ::x_'==>'_x not
R50447:50448 Smallstep <> t' var
R50425:50429 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50449:50449 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50418:50422 Smallstep Combined value ind
R50430:50436 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50439:50440 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50442:50446 Smallstep Combined ::x_'==>'_x not
R50447:50448 Smallstep <> t' var
R50636:50643 Smallstep Combined <> mod
ind 51165:51168 <> aval
constr 51190:51195 <> av_num
R51176:51179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51172:51175 Imp <> aexp ind
R51209:51212 Smallstep <> aval ind
R51215:51218 Imp <> ANum constr
R51220:51220 Smallstep <> n var
ind 51520:51524 <> astep
constr 51565:51569 <> AS_Id
constr 51624:51630 <> AS_Plus
constr 51712:51719 <> AS_Plus1
constr 51819:51826 <> AS_Plus2
constr 51943:51950 <> AS_Minus
constr 52041:52049 <> AS_Minus1
constr 52151:52159 <> AS_Minus2
constr 52278:52284 <> AS_Mult
constr 52373:52380 <> AS_Mult1
constr 52488:52495 <> AS_Mult2
R51533:51536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51541:51544 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51549:51552 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51545:51548 Imp <> aexp ind
R51537:51540 Imp <> aexp ind
R51528:51532 Imp <> state def
R52646:52650 Smallstep <> astep ind
R51597:51599 Smallstep <> ::x_'/'_x_'==>a'_x not
R51602:51607 Smallstep <> ::x_'/'_x_'==>a'_x not
R51600:51601 Smallstep <> st var
R51592:51594 Imp <> AId constr
R51596:51596 Smallstep <> i var
R51608:51611 Imp <> ANum constr
R51614:51615 Smallstep <> st var
R51617:51617 Smallstep <> i var
R51682:51684 Smallstep <> ::x_'/'_x_'==>a'_x not
R51687:51692 Smallstep <> ::x_'/'_x_'==>a'_x not
R51685:51686 Smallstep <> st var
R51657:51661 Imp <> APlus constr
R51674:51677 Imp <> ANum constr
R51679:51680 Smallstep <> n2 var
R51664:51667 Imp <> ANum constr
R51669:51670 Smallstep <> n1 var
R51693:51696 Imp <> ANum constr
R51701:51703 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51699:51700 Smallstep <> n1 var
R51704:51705 Smallstep <> n2 var
R51766:51775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51776:51776 Smallstep <> ::x_'/'_x_'==>a'_x not
R51788:51791 Smallstep <> ::x_'/'_x_'==>a'_x not
R51794:51800 Smallstep <> ::x_'/'_x_'==>a'_x not
R51813:51813 Smallstep <> ::x_'/'_x_'==>a'_x not
R51792:51793 Smallstep <> st var
R51777:51781 Imp <> APlus constr
R51786:51787 Smallstep <> a2 var
R51783:51784 Smallstep <> a1 var
R51801:51805 Imp <> APlus constr
R51811:51812 Smallstep <> a2 var
R51807:51809 Smallstep <> a1' var
R51752:51754 Smallstep <> ::x_'/'_x_'==>a'_x not
R51757:51762 Smallstep <> ::x_'/'_x_'==>a'_x not
R51755:51756 Smallstep <> st var
R51750:51751 Smallstep <> a1 var
R51763:51765 Smallstep <> a1' var
R51864:51873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51890:51899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51900:51900 Smallstep <> ::x_'/'_x_'==>a'_x not
R51912:51915 Smallstep <> ::x_'/'_x_'==>a'_x not
R51918:51924 Smallstep <> ::x_'/'_x_'==>a'_x not
R51937:51937 Smallstep <> ::x_'/'_x_'==>a'_x not
R51916:51917 Smallstep <> st var
R51901:51905 Imp <> APlus constr
R51910:51911 Smallstep <> a2 var
R51907:51908 Smallstep <> v1 var
R51925:51929 Imp <> APlus constr
R51934:51936 Smallstep <> a2' var
R51931:51932 Smallstep <> v1 var
R51876:51878 Smallstep <> ::x_'/'_x_'==>a'_x not
R51881:51886 Smallstep <> ::x_'/'_x_'==>a'_x not
R51879:51880 Smallstep <> st var
R51874:51875 Smallstep <> a2 var
R51887:51889 Smallstep <> a2' var
R51857:51860 Smallstep <> aval ind
R51862:51863 Smallstep <> v1 var
R51977:51977 Smallstep <> ::x_'/'_x_'==>a'_x not
R52004:52007 Smallstep <> ::x_'/'_x_'==>a'_x not
R52010:52016 Smallstep <> ::x_'/'_x_'==>a'_x not
R52035:52035 Smallstep <> ::x_'/'_x_'==>a'_x not
R52008:52009 Smallstep <> st var
R51978:51983 Imp <> AMinus constr
R51996:51999 Imp <> ANum constr
R52001:52002 Smallstep <> n2 var
R51986:51989 Imp <> ANum constr
R51991:51992 Smallstep <> n1 var
R52017:52020 Imp <> ANum constr
R52023:52027 Coq.Init.Peano <> minus syndef
R52032:52033 Smallstep <> n2 var
R52029:52030 Smallstep <> n1 var
R52096:52105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52106:52106 Smallstep <> ::x_'/'_x_'==>a'_x not
R52119:52122 Smallstep <> ::x_'/'_x_'==>a'_x not
R52125:52131 Smallstep <> ::x_'/'_x_'==>a'_x not
R52145:52145 Smallstep <> ::x_'/'_x_'==>a'_x not
R52123:52124 Smallstep <> st var
R52107:52112 Imp <> AMinus constr
R52117:52118 Smallstep <> a2 var
R52114:52115 Smallstep <> a1 var
R52132:52137 Imp <> AMinus constr
R52143:52144 Smallstep <> a2 var
R52139:52141 Smallstep <> a1' var
R52082:52084 Smallstep <> ::x_'/'_x_'==>a'_x not
R52087:52092 Smallstep <> ::x_'/'_x_'==>a'_x not
R52085:52086 Smallstep <> st var
R52080:52081 Smallstep <> a1 var
R52093:52095 Smallstep <> a1' var
R52197:52206 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52223:52232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52233:52233 Smallstep <> ::x_'/'_x_'==>a'_x not
R52246:52249 Smallstep <> ::x_'/'_x_'==>a'_x not
R52252:52258 Smallstep <> ::x_'/'_x_'==>a'_x not
R52272:52272 Smallstep <> ::x_'/'_x_'==>a'_x not
R52250:52251 Smallstep <> st var
R52234:52239 Imp <> AMinus constr
R52244:52245 Smallstep <> a2 var
R52241:52242 Smallstep <> v1 var
R52259:52264 Imp <> AMinus constr
R52269:52271 Smallstep <> a2' var
R52266:52267 Smallstep <> v1 var
R52209:52211 Smallstep <> ::x_'/'_x_'==>a'_x not
R52214:52219 Smallstep <> ::x_'/'_x_'==>a'_x not
R52212:52213 Smallstep <> st var
R52207:52208 Smallstep <> a2 var
R52220:52222 Smallstep <> a2' var
R52190:52193 Smallstep <> aval ind
R52195:52196 Smallstep <> v1 var
R52311:52311 Smallstep <> ::x_'/'_x_'==>a'_x not
R52337:52340 Smallstep <> ::x_'/'_x_'==>a'_x not
R52343:52349 Smallstep <> ::x_'/'_x_'==>a'_x not
R52367:52367 Smallstep <> ::x_'/'_x_'==>a'_x not
R52341:52342 Smallstep <> st var
R52312:52316 Imp <> AMult constr
R52329:52332 Imp <> ANum constr
R52334:52335 Smallstep <> n2 var
R52319:52322 Imp <> ANum constr
R52324:52325 Smallstep <> n1 var
R52350:52353 Imp <> ANum constr
R52356:52359 Coq.Init.Peano <> mult syndef
R52364:52365 Smallstep <> n2 var
R52361:52362 Smallstep <> n1 var
R52427:52436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52437:52437 Smallstep <> ::x_'/'_x_'==>a'_x not
R52453:52456 Smallstep <> ::x_'/'_x_'==>a'_x not
R52459:52465 Smallstep <> ::x_'/'_x_'==>a'_x not
R52482:52482 Smallstep <> ::x_'/'_x_'==>a'_x not
R52457:52458 Smallstep <> st var
R52438:52442 Imp <> AMult constr
R52450:52451 Smallstep <> a2 var
R52445:52446 Smallstep <> a1 var
R52466:52470 Imp <> AMult constr
R52479:52480 Smallstep <> a2 var
R52473:52475 Smallstep <> a1' var
R52413:52415 Smallstep <> ::x_'/'_x_'==>a'_x not
R52418:52423 Smallstep <> ::x_'/'_x_'==>a'_x not
R52416:52417 Smallstep <> st var
R52411:52412 Smallstep <> a1 var
R52424:52426 Smallstep <> a1' var
R52533:52542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52559:52568 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52569:52569 Smallstep <> ::x_'/'_x_'==>a'_x not
R52581:52584 Smallstep <> ::x_'/'_x_'==>a'_x not
R52587:52593 Smallstep <> ::x_'/'_x_'==>a'_x not
R52606:52606 Smallstep <> ::x_'/'_x_'==>a'_x not
R52585:52586 Smallstep <> st var
R52570:52574 Imp <> AMult constr
R52579:52580 Smallstep <> a2 var
R52576:52577 Smallstep <> v1 var
R52594:52598 Imp <> AMult constr
R52603:52605 Smallstep <> a2' var
R52600:52601 Smallstep <> v1 var
R52545:52547 Smallstep <> ::x_'/'_x_'==>a'_x not
R52550:52555 Smallstep <> ::x_'/'_x_'==>a'_x not
R52548:52549 Smallstep <> st var
R52543:52544 Smallstep <> a2 var
R52556:52558 Smallstep <> a2' var
R52526:52529 Smallstep <> aval ind
R52531:52532 Smallstep <> v1 var
R52646:52650 Smallstep <> astep ind
not 52619:52619 <> ::x_'/'_x_'==>a'_x
ind 52750:52754 <> bstep
constr 52795:52799 <> BS_Eq
constr 52916:52921 <> BS_Eq1
constr 53017:53022 <> BS_Eq2
constr 53135:53141 <> BS_LtEq
constr 53263:53270 <> BS_LtEq1
constr 53366:53373 <> BS_LtEq2
constr 53488:53497 <> BS_NotTrue
constr 53552:53562 <> BS_NotFalse
constr 53617:53626 <> BS_NotStep
constr 53715:53728 <> BS_AndTrueTrue
constr 53788:53802 <> BS_AndTrueFalse
constr 53864:53874 <> BS_AndFalse
constr 53936:53949 <> BS_AndTrueStep
constr 54050:54059 <> BS_AndStep
R52763:52766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52771:52774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52779:52782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52775:52778 Imp <> bexp ind
R52767:52770 Imp <> bexp ind
R52758:52762 Imp <> state def
R54189:54193 Smallstep <> bstep ind
R52826:52826 Smallstep <> ::x_'/'_x_'==>b'_x not
R52850:52853 Smallstep <> ::x_'/'_x_'==>b'_x not
R52856:52868 Smallstep <> ::x_'/'_x_'==>b'_x not
R52910:52910 Smallstep <> ::x_'/'_x_'==>b'_x not
R52854:52855 Smallstep <> st var
R52827:52829 Imp <> BEq constr
R52842:52845 Imp <> ANum constr
R52847:52848 Smallstep <> n2 var
R52832:52835 Imp <> ANum constr
R52837:52838 Smallstep <> n1 var
R52873:52879 Coq.Arith.EqNat <> beq_nat syndef
R52884:52885 Smallstep <> n2 var
R52881:52882 Smallstep <> n1 var
R52904:52909 Imp <> BFalse constr
R52893:52897 Imp <> BTrue constr
R52968:52977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52978:52978 Smallstep <> ::x_'/'_x_'==>b'_x not
R52988:52991 Smallstep <> ::x_'/'_x_'==>b'_x not
R52994:53000 Smallstep <> ::x_'/'_x_'==>b'_x not
R53011:53011 Smallstep <> ::x_'/'_x_'==>b'_x not
R52992:52993 Smallstep <> st var
R52979:52981 Imp <> BEq constr
R52986:52987 Smallstep <> a2 var
R52983:52984 Smallstep <> a1 var
R53001:53003 Imp <> BEq constr
R53009:53010 Smallstep <> a2 var
R53005:53007 Smallstep <> a1' var
R52954:52956 Smallstep <> ::x_'/'_x_'==>a'_x not
R52959:52964 Smallstep <> ::x_'/'_x_'==>a'_x not
R52957:52958 Smallstep <> st var
R52952:52953 Smallstep <> a1 var
R52965:52967 Smallstep <> a1' var
R53060:53069 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53086:53095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53096:53096 Smallstep <> ::x_'/'_x_'==>b'_x not
R53106:53109 Smallstep <> ::x_'/'_x_'==>b'_x not
R53112:53118 Smallstep <> ::x_'/'_x_'==>b'_x not
R53129:53129 Smallstep <> ::x_'/'_x_'==>b'_x not
R53110:53111 Smallstep <> st var
R53097:53099 Imp <> BEq constr
R53104:53105 Smallstep <> a2 var
R53101:53102 Smallstep <> v1 var
R53119:53121 Imp <> BEq constr
R53126:53128 Smallstep <> a2' var
R53123:53124 Smallstep <> v1 var
R53072:53074 Smallstep <> ::x_'/'_x_'==>a'_x not
R53077:53082 Smallstep <> ::x_'/'_x_'==>a'_x not
R53075:53076 Smallstep <> st var
R53070:53071 Smallstep <> a2 var
R53083:53085 Smallstep <> a2' var
R53053:53056 Smallstep <> aval ind
R53058:53059 Smallstep <> v1 var
R53168:53168 Smallstep <> ::x_'/'_x_'==>b'_x not
R53192:53195 Smallstep <> ::x_'/'_x_'==>b'_x not
R53198:53219 Smallstep <> ::x_'/'_x_'==>b'_x not
R53257:53257 Smallstep <> ::x_'/'_x_'==>b'_x not
R53196:53197 Smallstep <> st var
R53169:53171 Imp <> BLe constr
R53184:53187 Imp <> ANum constr
R53189:53190 Smallstep <> n2 var
R53174:53177 Imp <> ANum constr
R53179:53180 Smallstep <> n1 var
R53224:53226 Coq.Arith.Compare_dec <> leb syndef
R53231:53232 Smallstep <> n2 var
R53228:53229 Smallstep <> n1 var
R53251:53256 Imp <> BFalse constr
R53240:53244 Imp <> BTrue constr
R53317:53326 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53327:53327 Smallstep <> ::x_'/'_x_'==>b'_x not
R53337:53340 Smallstep <> ::x_'/'_x_'==>b'_x not
R53343:53349 Smallstep <> ::x_'/'_x_'==>b'_x not
R53360:53360 Smallstep <> ::x_'/'_x_'==>b'_x not
R53341:53342 Smallstep <> st var
R53328:53330 Imp <> BLe constr
R53335:53336 Smallstep <> a2 var
R53332:53333 Smallstep <> a1 var
R53350:53352 Imp <> BLe constr
R53358:53359 Smallstep <> a2 var
R53354:53356 Smallstep <> a1' var
R53303:53305 Smallstep <> ::x_'/'_x_'==>a'_x not
R53308:53313 Smallstep <> ::x_'/'_x_'==>a'_x not
R53306:53307 Smallstep <> st var
R53301:53302 Smallstep <> a1 var
R53314:53316 Smallstep <> a1' var
R53411:53420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53437:53446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53447:53447 Smallstep <> ::x_'/'_x_'==>b'_x not
R53457:53460 Smallstep <> ::x_'/'_x_'==>b'_x not
R53463:53469 Smallstep <> ::x_'/'_x_'==>b'_x not
R53482:53482 Smallstep <> ::x_'/'_x_'==>b'_x not
R53461:53462 Smallstep <> st var
R53448:53450 Imp <> BLe constr
R53455:53456 Smallstep <> a2 var
R53452:53453 Smallstep <> v1 var
R53470:53472 Imp <> BLe constr
R53478:53480 Smallstep <> a2' var
R53474:53475 Smallstep <> v1 var
R53423:53425 Smallstep <> ::x_'/'_x_'==>a'_x not
R53428:53433 Smallstep <> ::x_'/'_x_'==>a'_x not
R53426:53427 Smallstep <> st var
R53421:53422 Smallstep <> a2 var
R53434:53436 Smallstep <> a2' var
R53404:53407 Smallstep <> aval ind
R53409:53410 Smallstep <> v1 var
R53518:53518 Smallstep <> ::x_'/'_x_'==>b'_x not
R53529:53532 Smallstep <> ::x_'/'_x_'==>b'_x not
R53535:53540 Smallstep <> ::x_'/'_x_'==>b'_x not
R53533:53534 Smallstep <> st var
R53519:53522 Imp <> BNot constr
R53524:53528 Imp <> BTrue constr
R53541:53546 Imp <> BFalse constr
R53583:53583 Smallstep <> ::x_'/'_x_'==>b'_x not
R53595:53598 Smallstep <> ::x_'/'_x_'==>b'_x not
R53601:53606 Smallstep <> ::x_'/'_x_'==>b'_x not
R53599:53600 Smallstep <> st var
R53584:53587 Imp <> BNot constr
R53589:53594 Imp <> BFalse constr
R53607:53611 Imp <> BTrue constr
R53670:53679 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53680:53680 Smallstep <> ::x_'/'_x_'==>b'_x not
R53688:53691 Smallstep <> ::x_'/'_x_'==>b'_x not
R53694:53700 Smallstep <> ::x_'/'_x_'==>b'_x not
R53709:53709 Smallstep <> ::x_'/'_x_'==>b'_x not
R53692:53693 Smallstep <> st var
R53681:53684 Imp <> BNot constr
R53686:53687 Smallstep <> b1 var
R53701:53704 Imp <> BNot constr
R53706:53708 Smallstep <> b1' var
R53656:53658 Smallstep <> ::x_'/'_x_'==>b'_x not
R53661:53666 Smallstep <> ::x_'/'_x_'==>b'_x not
R53659:53660 Smallstep <> st var
R53654:53655 Smallstep <> b1 var
R53667:53669 Smallstep <> b1' var
R53749:53749 Smallstep <> ::x_'/'_x_'==>b'_x not
R53766:53769 Smallstep <> ::x_'/'_x_'==>b'_x not
R53772:53777 Smallstep <> ::x_'/'_x_'==>b'_x not
R53770:53771 Smallstep <> st var
R53750:53753 Imp <> BAnd constr
R53761:53765 Imp <> BTrue constr
R53755:53759 Imp <> BTrue constr
R53778:53782 Imp <> BTrue constr
R53823:53823 Smallstep <> ::x_'/'_x_'==>b'_x not
R53841:53844 Smallstep <> ::x_'/'_x_'==>b'_x not
R53847:53852 Smallstep <> ::x_'/'_x_'==>b'_x not
R53845:53846 Smallstep <> st var
R53824:53827 Imp <> BAnd constr
R53835:53840 Imp <> BFalse constr
R53829:53833 Imp <> BTrue constr
R53853:53858 Imp <> BFalse constr
R53898:53898 Smallstep <> ::x_'/'_x_'==>b'_x not
R53913:53916 Smallstep <> ::x_'/'_x_'==>b'_x not
R53919:53924 Smallstep <> ::x_'/'_x_'==>b'_x not
R53917:53918 Smallstep <> st var
R53899:53902 Imp <> BAnd constr
R53911:53912 Smallstep <> b2 var
R53904:53909 Imp <> BFalse constr
R53925:53930 Imp <> BFalse constr
R53993:54002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54003:54003 Smallstep <> ::x_'/'_x_'==>b'_x not
R54017:54020 Smallstep <> ::x_'/'_x_'==>b'_x not
R54023:54029 Smallstep <> ::x_'/'_x_'==>b'_x not
R54044:54044 Smallstep <> ::x_'/'_x_'==>b'_x not
R54021:54022 Smallstep <> st var
R54004:54007 Imp <> BAnd constr
R54015:54016 Smallstep <> b2 var
R54009:54013 Imp <> BTrue constr
R54030:54033 Imp <> BAnd constr
R54041:54043 Smallstep <> b2' var
R54035:54039 Imp <> BTrue constr
R53979:53981 Smallstep <> ::x_'/'_x_'==>b'_x not
R53984:53989 Smallstep <> ::x_'/'_x_'==>b'_x not
R53982:53983 Smallstep <> st var
R53977:53978 Smallstep <> b2 var
R53990:53992 Smallstep <> b2' var
R54106:54115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54116:54116 Smallstep <> ::x_'/'_x_'==>b'_x not
R54127:54130 Smallstep <> ::x_'/'_x_'==>b'_x not
R54133:54139 Smallstep <> ::x_'/'_x_'==>b'_x not
R54151:54151 Smallstep <> ::x_'/'_x_'==>b'_x not
R54131:54132 Smallstep <> st var
R54117:54120 Imp <> BAnd constr
R54125:54126 Smallstep <> b2 var
R54122:54123 Smallstep <> b1 var
R54140:54143 Imp <> BAnd constr
R54149:54150 Smallstep <> b2 var
R54145:54147 Smallstep <> b1' var
R54092:54094 Smallstep <> ::x_'/'_x_'==>b'_x not
R54097:54102 Smallstep <> ::x_'/'_x_'==>b'_x not
R54095:54096 Smallstep <> st var
R54090:54091 Smallstep <> b1 var
R54103:54105 Smallstep <> b1' var
R54189:54193 Smallstep <> bstep ind
not 54162:54162 <> ::x_'/'_x_'==>b'_x
ind 55205:55209 <> cstep
constr 55259:55268 <> CS_AssStep
constr 55359:55364 <> CS_Ass
constr 55444:55453 <> CS_SeqStep
constr 55561:55572 <> CS_SeqFinish
constr 55630:55638 <> CS_IfTrue
constr 55715:55724 <> CS_IfFalse
constr 55802:55810 <> CS_IfStep
constr 55948:55955 <> CS_While
R55213:55213 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55225:55229 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55230:55230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55242:55246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55234:55236 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55231:55233 Imp <> com ind
R55237:55241 Imp <> state def
R55217:55219 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55214:55216 Imp <> com ind
R55220:55224 Imp <> state def
R56121:56125 Smallstep <> cstep ind
R56134:56134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56137:56137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56141:56141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56127:56127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56129:56129 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56132:56132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55310:55319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55320:55320 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55328:55331 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55334:55339 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55348:55351 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55322:55326 Imp <> ::x_'::='_x not
R55321:55321 Smallstep <> i var
R55327:55327 Smallstep <> a var
R55332:55333 Smallstep <> st var
R55341:55345 Imp <> ::x_'::='_x not
R55340:55340 Smallstep <> i var
R55346:55347 Smallstep <> a' var
R55352:55353 Smallstep <> st var
R55297:55299 Smallstep <> ::x_'/'_x_'==>a'_x not
R55302:55307 Smallstep <> ::x_'/'_x_'==>a'_x not
R55300:55301 Smallstep <> st var
R55296:55296 Smallstep <> a var
R55308:55309 Smallstep <> a' var
R55389:55389 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55404:55407 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55410:55414 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55419:55422 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55438:55438 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55391:55396 Imp <> ::x_'::='_x not
R55403:55403 Imp <> ::x_'::='_x not
R55390:55390 Smallstep <> i var
R55397:55400 Imp <> ANum constr
R55402:55402 Smallstep <> n var
R55408:55409 Smallstep <> st var
R55415:55418 Imp <> ::'SKIP' not
R55423:55430 Maps <> t_update def
R55437:55437 Smallstep <> n var
R55435:55435 Smallstep <> i var
R55432:55433 Smallstep <> st var
R55509:55518 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55519:55519 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55528:55531 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55534:55539 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55549:55552 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55522:55525 Imp <> ::x_';;'_x not
R55520:55521 Smallstep <> c1 var
R55526:55527 Smallstep <> c2 var
R55532:55533 Smallstep <> st var
R55543:55546 Imp <> ::x_';;'_x not
R55540:55542 Smallstep <> c1' var
R55547:55548 Smallstep <> c2 var
R55553:55555 Smallstep <> st' var
R55490:55492 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55495:55499 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55503:55505 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55488:55489 Smallstep <> c1 var
R55493:55494 Smallstep <> st var
R55500:55502 Smallstep <> c1' var
R55506:55508 Smallstep <> st' var
R55596:55596 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55607:55610 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55613:55617 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55620:55622 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55601:55604 Imp <> ::x_';;'_x not
R55597:55600 Imp <> ::'SKIP' not
R55605:55606 Smallstep <> c2 var
R55611:55612 Smallstep <> st var
R55618:55619 Smallstep <> c2 var
R55623:55624 Smallstep <> st var
R55693:55695 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55698:55702 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55705:55707 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55665:55668 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55674:55679 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55682:55687 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55690:55692 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55669:55673 Imp <> BTrue constr
R55680:55681 Smallstep <> c1 var
R55688:55689 Smallstep <> c2 var
R55696:55697 Smallstep <> st var
R55703:55704 Smallstep <> c1 var
R55708:55709 Smallstep <> st var
R55780:55782 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55785:55789 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55792:55794 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55751:55754 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55761:55766 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55769:55774 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55777:55779 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55755:55760 Imp <> BFalse constr
R55767:55768 Smallstep <> c1 var
R55775:55776 Smallstep <> c2 var
R55783:55784 Smallstep <> st var
R55790:55791 Smallstep <> c2 var
R55795:55796 Smallstep <> st var
R55856:55869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55894:55896 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55899:55911 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55937:55940 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55870:55873 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55875:55880 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55883:55888 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55891:55893 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55874:55874 Smallstep <> b var
R55881:55882 Smallstep <> c1 var
R55889:55890 Smallstep <> c2 var
R55897:55898 Smallstep <> st var
R55912:55915 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55918:55923 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55926:55931 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55934:55936 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55916:55917 Smallstep <> b' var
R55924:55925 Smallstep <> c1 var
R55932:55933 Smallstep <> c2 var
R55941:55942 Smallstep <> st var
R55843:55845 Smallstep <> ::x_'/'_x_'==>b'_x not
R55848:55853 Smallstep <> ::x_'/'_x_'==>b'_x not
R55846:55847 Smallstep <> st var
R55842:55842 Smallstep <> b var
R55854:55855 Smallstep <> b' var
R55985:55985 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56003:56006 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56009:56020 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56071:56074 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R55986:55991 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R55993:55996 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R55999:56002 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R55992:55992 Smallstep <> b var
R55997:55998 Smallstep <> c1 var
R56007:56008 Smallstep <> st var
R56021:56024 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56026:56032 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56057:56063 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56068:56070 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56025:56025 Smallstep <> b var
R56035:56038 Imp <> ::x_';;'_x not
R56056:56056 Imp <> ::x_';;'_x not
R56033:56034 Smallstep <> c1 var
R56039:56044 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56046:56049 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56052:56055 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56045:56045 Smallstep <> b var
R56050:56051 Smallstep <> c1 var
R56064:56067 Imp <> ::'SKIP' not
R56075:56076 Smallstep <> st var
R56121:56125 Smallstep <> cstep ind
R56134:56134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56137:56137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56141:56141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56127:56127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56129:56129 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56132:56132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 56087:56087 <> ::x_'/'_x_'==>'_x_'/'_x
mod 56664:56667 <> CImp
ind 56681:56683 CImp com
constr 56699:56703 CImp CSkip
constr 56715:56718 CImp CAss
constr 56744:56747 CImp CSeq
constr 56773:56775 CImp CIf
constr 56809:56814 CImp CWhile
constr 56854:56857 CImp CPar
R56707:56709 Smallstep <> com ind
R56724:56727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56732:56735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56736:56738 Smallstep <> com ind
R56728:56731 Imp <> aexp ind
R56722:56723 Maps <> id ind
R56754:56757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56761:56764 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56765:56767 Smallstep <> com ind
R56758:56760 Smallstep <> com ind
R56751:56753 Smallstep <> com ind
R56783:56786 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56790:56793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56797:56800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56801:56803 Smallstep <> com ind
R56794:56796 Smallstep <> com ind
R56787:56789 Smallstep <> com ind
R56779:56782 Imp <> bexp ind
R56822:56825 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56829:56832 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56833:56835 Smallstep <> com ind
R56826:56828 Smallstep <> com ind
R56818:56821 Imp <> bexp ind
R56864:56867 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56871:56874 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56875:56877 Smallstep <> com ind
R56868:56870 Smallstep <> com ind
R56861:56863 Smallstep <> com ind
R56904:56908 Smallstep CImp CSkip constr
not 56890:56890 CImp ::'SKIP'
R56938:56941 Smallstep CImp CAss constr
not 56920:56920 CImp ::x_'::='_x
R56989:56992 Smallstep CImp CSeq constr
not 56972:56972 CImp ::x_';;'_x
R57077:57082 Smallstep CImp CWhile constr
not 57046:57046 CImp ::'WHILE'_x_'DO'_x_'END'
R57175:57177 Smallstep CImp CIf constr
not 57134:57134 CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R57266:57269 Smallstep CImp CPar constr
not 57233:57233 CImp ::'PAR'_x_'WITH'_x_'END'
ind 57325:57329 CImp cstep
constr 57399:57408 CImp CS_AssStep
constr 57499:57504 CImp CS_Ass
constr 57584:57593 CImp CS_SeqStep
constr 57701:57712 CImp CS_SeqFinish
constr 57770:57778 CImp CS_IfTrue
constr 57857:57866 CImp CS_IfFalse
constr 57946:57954 CImp CS_IfStep
constr 58093:58100 CImp CS_While
constr 58248:58254 CImp CS_Par1
constr 58382:58388 CImp CS_Par2
constr 58516:58525 CImp CS_ParDone
R57333:57333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57345:57350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57351:57351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57363:57367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57355:57357 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R57352:57354 Smallstep CImp com ind
R57358:57362 Imp <> state def
R57337:57339 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R57334:57336 Smallstep CImp com ind
R57340:57344 Imp <> state def
R58632:58636 Smallstep <> cstep ind
R58645:58645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58648:58648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58652:58652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58638:58638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58640:58640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58643:58643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57450:57459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57460:57460 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57468:57471 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57474:57479 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57488:57491 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57462:57466 Smallstep CImp ::x_'::='_x not
R57461:57461 Smallstep <> i var
R57467:57467 Smallstep <> a var
R57472:57473 Smallstep <> st var
R57481:57485 Smallstep CImp ::x_'::='_x not
R57480:57480 Smallstep <> i var
R57486:57487 Smallstep <> a' var
R57492:57493 Smallstep <> st var
R57437:57439 Smallstep <> ::x_'/'_x_'==>a'_x not
R57442:57447 Smallstep <> ::x_'/'_x_'==>a'_x not
R57440:57441 Smallstep <> st var
R57436:57436 Smallstep <> a var
R57448:57449 Smallstep <> a' var
R57529:57529 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57544:57547 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57550:57554 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57559:57562 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57578:57578 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57531:57536 Smallstep CImp ::x_'::='_x not
R57543:57543 Smallstep CImp ::x_'::='_x not
R57530:57530 Smallstep <> i var
R57537:57540 Imp <> ANum constr
R57542:57542 Smallstep <> n var
R57548:57549 Smallstep <> st var
R57555:57558 Smallstep CImp ::'SKIP' not
R57563:57570 Maps <> t_update def
R57577:57577 Smallstep <> n var
R57575:57575 Smallstep <> i var
R57572:57573 Smallstep <> st var
R57649:57658 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57659:57659 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57668:57671 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57674:57679 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57689:57692 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57662:57665 Smallstep CImp ::x_';;'_x not
R57660:57661 Smallstep <> c1 var
R57666:57667 Smallstep <> c2 var
R57672:57673 Smallstep <> st var
R57683:57686 Smallstep CImp ::x_';;'_x not
R57680:57682 Smallstep <> c1' var
R57687:57688 Smallstep <> c2 var
R57693:57695 Smallstep <> st' var
R57630:57632 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57635:57639 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57643:57645 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57628:57629 Smallstep <> c1 var
R57633:57634 Smallstep <> st var
R57640:57642 Smallstep <> c1' var
R57646:57648 Smallstep <> st' var
R57736:57736 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57747:57750 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57753:57757 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57760:57762 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57741:57744 Smallstep CImp ::x_';;'_x not
R57737:57740 Smallstep CImp ::'SKIP' not
R57745:57746 Smallstep <> c2 var
R57751:57752 Smallstep <> st var
R57758:57759 Smallstep <> c2 var
R57763:57764 Smallstep <> st var
R57805:57805 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57834:57837 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57840:57844 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57847:57849 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57806:57809 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57815:57820 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57823:57828 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57831:57833 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57810:57814 Imp <> BTrue constr
R57821:57822 Smallstep <> c1 var
R57829:57830 Smallstep <> c2 var
R57838:57839 Smallstep <> st var
R57845:57846 Smallstep <> c1 var
R57850:57851 Smallstep <> st var
R57893:57893 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57923:57926 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57929:57933 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57936:57938 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R57894:57897 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57904:57909 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57912:57917 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57920:57922 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57898:57903 Imp <> BFalse constr
R57910:57911 Smallstep <> c1 var
R57918:57919 Smallstep <> c2 var
R57927:57928 Smallstep <> st var
R57934:57935 Smallstep <> c2 var
R57939:57940 Smallstep <> st var
R57999:58012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58013:58013 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58038:58041 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58044:58056 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58082:58085 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58014:58017 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58019:58024 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58027:58032 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58035:58037 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58018:58018 Smallstep <> b var
R58025:58026 Smallstep <> c1 var
R58033:58034 Smallstep <> c2 var
R58042:58043 Smallstep <> st var
R58057:58060 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58063:58068 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58071:58076 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58079:58081 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58061:58062 Smallstep <> b' var
R58069:58070 Smallstep <> c1 var
R58077:58078 Smallstep <> c2 var
R58086:58087 Smallstep <> st var
R57987:57988 Smallstep <> ::x_'/'_x_'==>b'_x not
R57991:57996 Smallstep <> ::x_'/'_x_'==>b'_x not
R57989:57990 Smallstep <> st var
R57986:57986 Smallstep <> b var
R57997:57998 Smallstep <> b' var
R58130:58130 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58148:58151 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58154:58166 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58217:58220 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58131:58136 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58138:58141 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58144:58147 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58137:58137 Smallstep <> b var
R58142:58143 Smallstep <> c1 var
R58152:58153 Smallstep <> st var
R58167:58170 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58172:58178 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58203:58209 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58214:58216 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58171:58171 Smallstep <> b var
R58181:58184 Smallstep CImp ::x_';;'_x not
R58202:58202 Smallstep CImp ::x_';;'_x not
R58179:58180 Smallstep <> c1 var
R58185:58190 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58192:58195 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58198:58201 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58191:58191 Smallstep <> b var
R58196:58197 Smallstep <> c1 var
R58210:58213 Smallstep CImp ::'SKIP' not
R58221:58222 Smallstep <> st var
R58310:58319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58320:58320 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58339:58342 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58345:58350 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58370:58373 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58321:58324 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58327:58332 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58335:58338 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58325:58326 Smallstep <> c1 var
R58333:58334 Smallstep <> c2 var
R58343:58344 Smallstep <> st var
R58351:58354 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58358:58363 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58366:58369 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58355:58357 Smallstep <> c1' var
R58364:58365 Smallstep <> c2 var
R58374:58376 Smallstep <> st' var
R58291:58293 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58296:58300 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58304:58306 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58289:58290 Smallstep <> c1 var
R58294:58295 Smallstep <> st var
R58301:58303 Smallstep <> c1' var
R58307:58309 Smallstep <> st' var
R58444:58453 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58454:58454 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58473:58476 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58479:58484 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58504:58507 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58455:58458 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58461:58466 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58469:58472 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58459:58460 Smallstep <> c1 var
R58467:58468 Smallstep <> c2 var
R58477:58478 Smallstep <> st var
R58485:58488 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58491:58496 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58500:58503 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58489:58490 Smallstep <> c1 var
R58497:58499 Smallstep <> c2' var
R58508:58510 Smallstep <> st' var
R58425:58427 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58430:58434 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58438:58440 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58423:58424 Smallstep <> c2 var
R58428:58429 Smallstep <> st var
R58435:58437 Smallstep <> c2' var
R58441:58443 Smallstep <> st' var
R58546:58546 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58569:58572 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58575:58579 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58584:58586 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58547:58550 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58555:58560 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58565:58568 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R58551:58554 Smallstep CImp ::'SKIP' not
R58561:58564 Smallstep CImp ::'SKIP' not
R58573:58574 Smallstep <> st var
R58580:58583 Smallstep CImp ::'SKIP' not
R58587:58588 Smallstep <> st var
R58632:58636 Smallstep CImp cstep ind
R58645:58645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58648:58648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58652:58652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58638:58638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58640:58640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58643:58643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 58598:58598 CImp ::x_'/'_x_'==>'_x_'/'_x
def 58668:58677 CImp cmultistep
R58682:58686 Smallstep CImp multi ind
R58688:58692 Smallstep CImp cstep ind
R58743:58747 Smallstep CImp multi ind
R58763:58763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58766:58766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58770:58770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58756:58756 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58758:58758 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58761:58761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58749:58753 Smallstep CImp cstep ind
not 58705:58705 CImp ::x_'/'_x_'==>*'_x_'/'_x
def 58999:59006 CImp par_loop
R59010:59012 Smallstep CImp com ind
R59019:59026 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59039:59050 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59123:59128 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59028:59032 Smallstep CImp ::x_'::='_x not
R59027:59027 Imp <> Y def
R59033:59036 Imp <> ANum constr
R59051:59056 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59077:59086 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59115:59122 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59057:59059 Imp <> BEq constr
R59070:59073 Imp <> ANum constr
R59062:59064 Imp <> AId constr
R59066:59066 Imp <> Y def
R59088:59092 Smallstep CImp ::x_'::='_x not
R59087:59087 Imp <> X def
R59093:59097 Imp <> APlus constr
R59108:59111 Imp <> ANum constr
R59100:59102 Imp <> AId constr
R59104:59104 Imp <> X def
def 59201:59218 CImp par_loop_example_0
R59223:59229 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59233:59241 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59281:59288 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59250:59252 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R59264:59270 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R59275:59277 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R59242:59249 Smallstep CImp par_loop def
R59253:59263 Imp <> empty_state def
R59271:59274 Smallstep CImp ::'SKIP' not
R59278:59280 Smallstep <> st' var
R59294:59296 Coq.Init.Logic <> :type_scope:x_'='_x not
R59289:59291 Smallstep <> st' var
R59293:59293 Imp <> X def
R59316:59323 Coq.Init.Logic <> ex_intro constr
R59316:59323 Coq.Init.Logic <> ex_intro constr
R59342:59349 Smallstep CImp par_loop def
R59361:59370 Smallstep CImp multi_step constr
R59361:59370 Smallstep CImp multi_step constr
R59379:59385 Smallstep CImp CS_Par1 constr
R59379:59385 Smallstep CImp CS_Par1 constr
R59398:59403 Smallstep CImp CS_Ass constr
R59398:59403 Smallstep CImp CS_Ass constr
R59415:59424 Smallstep CImp multi_step constr
R59415:59424 Smallstep CImp multi_step constr
R59433:59439 Smallstep CImp CS_Par2 constr
R59433:59439 Smallstep CImp CS_Par2 constr
R59448:59455 Smallstep CImp CS_While constr
R59448:59455 Smallstep CImp CS_While constr
R59467:59476 Smallstep CImp multi_step constr
R59467:59476 Smallstep CImp multi_step constr
R59485:59491 Smallstep CImp CS_Par2 constr
R59485:59491 Smallstep CImp CS_Par2 constr
R59500:59508 Smallstep CImp CS_IfStep constr
R59500:59508 Smallstep CImp CS_IfStep constr
R59521:59526 Smallstep CImp BS_Eq1 constr
R59521:59526 Smallstep CImp BS_Eq1 constr
R59535:59539 Smallstep CImp AS_Id constr
R59535:59539 Smallstep CImp AS_Id constr
R59551:59560 Smallstep CImp multi_step constr
R59551:59560 Smallstep CImp multi_step constr
R59569:59575 Smallstep CImp CS_Par2 constr
R59569:59575 Smallstep CImp CS_Par2 constr
R59584:59592 Smallstep CImp CS_IfStep constr
R59584:59592 Smallstep CImp CS_IfStep constr
R59605:59609 Smallstep CImp BS_Eq constr
R59605:59609 Smallstep CImp BS_Eq constr
R59628:59637 Smallstep CImp multi_step constr
R59628:59637 Smallstep CImp multi_step constr
R59646:59652 Smallstep CImp CS_Par2 constr
R59646:59652 Smallstep CImp CS_Par2 constr
R59661:59670 Smallstep CImp CS_IfFalse constr
R59661:59670 Smallstep CImp CS_IfFalse constr
R59682:59691 Smallstep CImp multi_step constr
R59682:59691 Smallstep CImp multi_step constr
R59700:59709 Smallstep CImp CS_ParDone constr
R59700:59709 Smallstep CImp CS_ParDone constr
R59721:59730 Smallstep CImp multi_refl constr
R59721:59730 Smallstep CImp multi_refl constr
def 59813:59830 CImp par_loop_example_2
R59835:59841 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59845:59853 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59892:59899 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59862:59864 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R59876:59881 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R59886:59888 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R59854:59861 Smallstep CImp par_loop def
R59865:59875 Imp <> empty_state def
R59882:59885 Smallstep CImp ::'SKIP' not
R59889:59891 Smallstep <> st' var
R59905:59907 Coq.Init.Logic <> :type_scope:x_'='_x not
R59900:59902 Smallstep <> st' var
R59904:59904 Imp <> X def
R59927:59934 Coq.Init.Logic <> ex_intro constr
R59927:59934 Coq.Init.Logic <> ex_intro constr
R59953:59962 Smallstep CImp multi_step constr
R59953:59962 Smallstep CImp multi_step constr
R59971:59977 Smallstep CImp CS_Par2 constr
R59971:59977 Smallstep CImp CS_Par2 constr
R59986:59993 Smallstep CImp CS_While constr
R59986:59993 Smallstep CImp CS_While constr
R60005:60014 Smallstep CImp multi_step constr
R60005:60014 Smallstep CImp multi_step constr
R60023:60029 Smallstep CImp CS_Par2 constr
R60023:60029 Smallstep CImp CS_Par2 constr
R60038:60046 Smallstep CImp CS_IfStep constr
R60038:60046 Smallstep CImp CS_IfStep constr
R60059:60064 Smallstep CImp BS_Eq1 constr
R60059:60064 Smallstep CImp BS_Eq1 constr
R60073:60077 Smallstep CImp AS_Id constr
R60073:60077 Smallstep CImp AS_Id constr
R60089:60098 Smallstep CImp multi_step constr
R60089:60098 Smallstep CImp multi_step constr
R60107:60113 Smallstep CImp CS_Par2 constr
R60107:60113 Smallstep CImp CS_Par2 constr
R60122:60130 Smallstep CImp CS_IfStep constr
R60122:60130 Smallstep CImp CS_IfStep constr
R60143:60147 Smallstep CImp BS_Eq constr
R60143:60147 Smallstep CImp BS_Eq constr
R60166:60175 Smallstep CImp multi_step constr
R60166:60175 Smallstep CImp multi_step constr
R60184:60190 Smallstep CImp CS_Par2 constr
R60184:60190 Smallstep CImp CS_Par2 constr
R60199:60207 Smallstep CImp CS_IfTrue constr
R60199:60207 Smallstep CImp CS_IfTrue constr
R60219:60228 Smallstep CImp multi_step constr
R60219:60228 Smallstep CImp multi_step constr
R60237:60243 Smallstep CImp CS_Par2 constr
R60237:60243 Smallstep CImp CS_Par2 constr
R60252:60261 Smallstep CImp CS_SeqStep constr
R60252:60261 Smallstep CImp CS_SeqStep constr
R60274:60283 Smallstep CImp CS_AssStep constr
R60274:60283 Smallstep CImp CS_AssStep constr
R60292:60299 Smallstep CImp AS_Plus1 constr
R60292:60299 Smallstep CImp AS_Plus1 constr
R60308:60312 Smallstep CImp AS_Id constr
R60308:60312 Smallstep CImp AS_Id constr
R60324:60333 Smallstep CImp multi_step constr
R60324:60333 Smallstep CImp multi_step constr
R60342:60348 Smallstep CImp CS_Par2 constr
R60342:60348 Smallstep CImp CS_Par2 constr
R60357:60366 Smallstep CImp CS_SeqStep constr
R60357:60366 Smallstep CImp CS_SeqStep constr
R60379:60388 Smallstep CImp CS_AssStep constr
R60379:60388 Smallstep CImp CS_AssStep constr
R60397:60403 Smallstep CImp AS_Plus constr
R60397:60403 Smallstep CImp AS_Plus constr
R60415:60424 Smallstep CImp multi_step constr
R60415:60424 Smallstep CImp multi_step constr
R60433:60439 Smallstep CImp CS_Par2 constr
R60433:60439 Smallstep CImp CS_Par2 constr
R60448:60457 Smallstep CImp CS_SeqStep constr
R60448:60457 Smallstep CImp CS_SeqStep constr
R60470:60475 Smallstep CImp CS_Ass constr
R60470:60475 Smallstep CImp CS_Ass constr
R60487:60496 Smallstep CImp multi_step constr
R60487:60496 Smallstep CImp multi_step constr
R60505:60511 Smallstep CImp CS_Par2 constr
R60505:60511 Smallstep CImp CS_Par2 constr
R60520:60531 Smallstep CImp CS_SeqFinish constr
R60520:60531 Smallstep CImp CS_SeqFinish constr
R60544:60553 Smallstep CImp multi_step constr
R60544:60553 Smallstep CImp multi_step constr
R60562:60568 Smallstep CImp CS_Par2 constr
R60562:60568 Smallstep CImp CS_Par2 constr
R60577:60584 Smallstep CImp CS_While constr
R60577:60584 Smallstep CImp CS_While constr
R60596:60605 Smallstep CImp multi_step constr
R60596:60605 Smallstep CImp multi_step constr
R60614:60620 Smallstep CImp CS_Par2 constr
R60614:60620 Smallstep CImp CS_Par2 constr
R60629:60637 Smallstep CImp CS_IfStep constr
R60629:60637 Smallstep CImp CS_IfStep constr
R60650:60655 Smallstep CImp BS_Eq1 constr
R60650:60655 Smallstep CImp BS_Eq1 constr
R60664:60668 Smallstep CImp AS_Id constr
R60664:60668 Smallstep CImp AS_Id constr
R60680:60689 Smallstep CImp multi_step constr
R60680:60689 Smallstep CImp multi_step constr
R60698:60704 Smallstep CImp CS_Par2 constr
R60698:60704 Smallstep CImp CS_Par2 constr
R60713:60721 Smallstep CImp CS_IfStep constr
R60713:60721 Smallstep CImp CS_IfStep constr
R60734:60738 Smallstep CImp BS_Eq constr
R60734:60738 Smallstep CImp BS_Eq constr
R60757:60766 Smallstep CImp multi_step constr
R60757:60766 Smallstep CImp multi_step constr
R60775:60781 Smallstep CImp CS_Par2 constr
R60775:60781 Smallstep CImp CS_Par2 constr
R60790:60798 Smallstep CImp CS_IfTrue constr
R60790:60798 Smallstep CImp CS_IfTrue constr
R60810:60819 Smallstep CImp multi_step constr
R60810:60819 Smallstep CImp multi_step constr
R60828:60834 Smallstep CImp CS_Par2 constr
R60828:60834 Smallstep CImp CS_Par2 constr
R60843:60852 Smallstep CImp CS_SeqStep constr
R60843:60852 Smallstep CImp CS_SeqStep constr
R60865:60874 Smallstep CImp CS_AssStep constr
R60865:60874 Smallstep CImp CS_AssStep constr
R60883:60890 Smallstep CImp AS_Plus1 constr
R60883:60890 Smallstep CImp AS_Plus1 constr
R60899:60903 Smallstep CImp AS_Id constr
R60899:60903 Smallstep CImp AS_Id constr
R60915:60924 Smallstep CImp multi_step constr
R60915:60924 Smallstep CImp multi_step constr
R60933:60939 Smallstep CImp CS_Par2 constr
R60933:60939 Smallstep CImp CS_Par2 constr
R60948:60957 Smallstep CImp CS_SeqStep constr
R60948:60957 Smallstep CImp CS_SeqStep constr
R60970:60979 Smallstep CImp CS_AssStep constr
R60970:60979 Smallstep CImp CS_AssStep constr
R60988:60994 Smallstep CImp AS_Plus constr
R60988:60994 Smallstep CImp AS_Plus constr
R61006:61015 Smallstep CImp multi_step constr
R61006:61015 Smallstep CImp multi_step constr
R61024:61030 Smallstep CImp CS_Par2 constr
R61024:61030 Smallstep CImp CS_Par2 constr
R61039:61048 Smallstep CImp CS_SeqStep constr
R61039:61048 Smallstep CImp CS_SeqStep constr
R61061:61066 Smallstep CImp CS_Ass constr
R61061:61066 Smallstep CImp CS_Ass constr
R61079:61088 Smallstep CImp multi_step constr
R61079:61088 Smallstep CImp multi_step constr
R61097:61103 Smallstep CImp CS_Par1 constr
R61097:61103 Smallstep CImp CS_Par1 constr
R61112:61117 Smallstep CImp CS_Ass constr
R61112:61117 Smallstep CImp CS_Ass constr
R61129:61138 Smallstep CImp multi_step constr
R61129:61138 Smallstep CImp multi_step constr
R61147:61153 Smallstep CImp CS_Par2 constr
R61147:61153 Smallstep CImp CS_Par2 constr
R61162:61173 Smallstep CImp CS_SeqFinish constr
R61162:61173 Smallstep CImp CS_SeqFinish constr
R61185:61194 Smallstep CImp multi_step constr
R61185:61194 Smallstep CImp multi_step constr
R61203:61209 Smallstep CImp CS_Par2 constr
R61203:61209 Smallstep CImp CS_Par2 constr
R61218:61225 Smallstep CImp CS_While constr
R61218:61225 Smallstep CImp CS_While constr
R61237:61246 Smallstep CImp multi_step constr
R61237:61246 Smallstep CImp multi_step constr
R61255:61261 Smallstep CImp CS_Par2 constr
R61255:61261 Smallstep CImp CS_Par2 constr
R61270:61278 Smallstep CImp CS_IfStep constr
R61270:61278 Smallstep CImp CS_IfStep constr
R61291:61296 Smallstep CImp BS_Eq1 constr
R61291:61296 Smallstep CImp BS_Eq1 constr
R61305:61309 Smallstep CImp AS_Id constr
R61305:61309 Smallstep CImp AS_Id constr
R61321:61330 Smallstep CImp multi_step constr
R61321:61330 Smallstep CImp multi_step constr
R61339:61345 Smallstep CImp CS_Par2 constr
R61339:61345 Smallstep CImp CS_Par2 constr
R61354:61362 Smallstep CImp CS_IfStep constr
R61354:61362 Smallstep CImp CS_IfStep constr
R61375:61379 Smallstep CImp BS_Eq constr
R61375:61379 Smallstep CImp BS_Eq constr
R61398:61407 Smallstep CImp multi_step constr
R61398:61407 Smallstep CImp multi_step constr
R61416:61422 Smallstep CImp CS_Par2 constr
R61416:61422 Smallstep CImp CS_Par2 constr
R61431:61440 Smallstep CImp CS_IfFalse constr
R61431:61440 Smallstep CImp CS_IfFalse constr
R61452:61461 Smallstep CImp multi_step constr
R61452:61461 Smallstep CImp multi_step constr
R61470:61479 Smallstep CImp CS_ParDone constr
R61470:61479 Smallstep CImp CS_ParDone constr
R61491:61500 Smallstep CImp multi_refl constr
R61491:61500 Smallstep CImp multi_refl constr
prf 61597:61610 CImp par_body_n__Sn
R61649:61654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61663:61665 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R61668:61673 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R61682:61685 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R61705:61705 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R61655:61662 Smallstep CImp par_loop def
R61666:61667 Smallstep <> st var
R61674:61681 Smallstep CImp par_loop def
R61686:61693 Maps <> t_update def
R61701:61701 Coq.Init.Datatypes <> S constr
R61703:61703 Smallstep <> n var
R61698:61698 Imp <> X def
R61695:61696 Smallstep <> st var
R61637:61640 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61633:61635 Coq.Init.Logic <> :type_scope:x_'='_x not
R61629:61630 Smallstep <> st var
R61632:61632 Imp <> X def
R61636:61636 Smallstep <> n var
R61645:61647 Coq.Init.Logic <> :type_scope:x_'='_x not
R61641:61642 Smallstep <> st var
R61644:61644 Imp <> Y def
R61765:61774 Smallstep CImp multi_step constr
R61765:61774 Smallstep CImp multi_step constr
R61783:61789 Smallstep CImp CS_Par2 constr
R61783:61789 Smallstep CImp CS_Par2 constr
R61798:61805 Smallstep CImp CS_While constr
R61798:61805 Smallstep CImp CS_While constr
R61817:61826 Smallstep CImp multi_step constr
R61817:61826 Smallstep CImp multi_step constr
R61835:61841 Smallstep CImp CS_Par2 constr
R61835:61841 Smallstep CImp CS_Par2 constr
R61850:61858 Smallstep CImp CS_IfStep constr
R61850:61858 Smallstep CImp CS_IfStep constr
R61871:61876 Smallstep CImp BS_Eq1 constr
R61871:61876 Smallstep CImp BS_Eq1 constr
R61885:61889 Smallstep CImp AS_Id constr
R61885:61889 Smallstep CImp AS_Id constr
R61913:61922 Smallstep CImp multi_step constr
R61913:61922 Smallstep CImp multi_step constr
R61931:61937 Smallstep CImp CS_Par2 constr
R61931:61937 Smallstep CImp CS_Par2 constr
R61946:61954 Smallstep CImp CS_IfStep constr
R61946:61954 Smallstep CImp CS_IfStep constr
R61967:61971 Smallstep CImp BS_Eq constr
R61967:61971 Smallstep CImp BS_Eq constr
R61983:61992 Smallstep CImp multi_step constr
R61983:61992 Smallstep CImp multi_step constr
R62001:62007 Smallstep CImp CS_Par2 constr
R62001:62007 Smallstep CImp CS_Par2 constr
R62016:62024 Smallstep CImp CS_IfTrue constr
R62016:62024 Smallstep CImp CS_IfTrue constr
R62036:62045 Smallstep CImp multi_step constr
R62036:62045 Smallstep CImp multi_step constr
R62054:62060 Smallstep CImp CS_Par2 constr
R62054:62060 Smallstep CImp CS_Par2 constr
R62069:62078 Smallstep CImp CS_SeqStep constr
R62069:62078 Smallstep CImp CS_SeqStep constr
R62091:62100 Smallstep CImp CS_AssStep constr
R62091:62100 Smallstep CImp CS_AssStep constr
R62109:62116 Smallstep CImp AS_Plus1 constr
R62109:62116 Smallstep CImp AS_Plus1 constr
R62125:62129 Smallstep CImp AS_Id constr
R62125:62129 Smallstep CImp AS_Id constr
R62153:62162 Smallstep CImp multi_step constr
R62153:62162 Smallstep CImp multi_step constr
R62171:62177 Smallstep CImp CS_Par2 constr
R62171:62177 Smallstep CImp CS_Par2 constr
R62186:62195 Smallstep CImp CS_SeqStep constr
R62186:62195 Smallstep CImp CS_SeqStep constr
R62208:62217 Smallstep CImp CS_AssStep constr
R62208:62217 Smallstep CImp CS_AssStep constr
R62226:62232 Smallstep CImp AS_Plus constr
R62226:62232 Smallstep CImp AS_Plus constr
R62244:62253 Smallstep CImp multi_step constr
R62244:62253 Smallstep CImp multi_step constr
R62262:62268 Smallstep CImp CS_Par2 constr
R62262:62268 Smallstep CImp CS_Par2 constr
R62277:62286 Smallstep CImp CS_SeqStep constr
R62277:62286 Smallstep CImp CS_SeqStep constr
R62296:62301 Smallstep CImp CS_Ass constr
R62296:62301 Smallstep CImp CS_Ass constr
R62314:62314 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R62324:62324 Coq.Init.Datatypes <> S constr
R62324:62324 Coq.Init.Datatypes <> S constr
R62314:62314 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R62349:62358 Smallstep CImp multi_step constr
R62349:62358 Smallstep CImp multi_step constr
R62367:62373 Smallstep CImp CS_Par2 constr
R62367:62373 Smallstep CImp CS_Par2 constr
R62382:62393 Smallstep CImp CS_SeqFinish constr
R62382:62393 Smallstep CImp CS_SeqFinish constr
R62404:62413 Smallstep CImp multi_refl constr
R62404:62413 Smallstep CImp multi_refl constr
prf 62479:62488 CImp par_body_n
R62527:62532 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62533:62539 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R62543:62548 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R62583:62586 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R62557:62559 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R62562:62568 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R62577:62579 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R62549:62556 Smallstep CImp par_loop def
R62560:62561 Smallstep <> st var
R62569:62576 Smallstep CImp par_loop def
R62580:62582 Smallstep <> st' var
R62596:62599 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R62592:62594 Coq.Init.Logic <> :type_scope:x_'='_x not
R62587:62589 Smallstep <> st' var
R62591:62591 Imp <> X def
R62595:62595 Smallstep <> n var
R62605:62607 Coq.Init.Logic <> :type_scope:x_'='_x not
R62600:62602 Smallstep <> st' var
R62604:62604 Imp <> Y def
R62515:62518 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R62511:62513 Coq.Init.Logic <> :type_scope:x_'='_x not
R62507:62508 Smallstep <> st var
R62510:62510 Imp <> X def
R62523:62525 Coq.Init.Logic <> :type_scope:x_'='_x not
R62519:62520 Smallstep <> st var
R62522:62522 Imp <> Y def
R62726:62735 Smallstep CImp multi_refl constr
R62726:62735 Smallstep CImp multi_refl constr
R62847:62854 Maps <> t_update def
R62863:62863 Coq.Init.Datatypes <> S constr
R62860:62860 Imp <> X def
R62847:62854 Maps <> t_update def
R62863:62863 Coq.Init.Datatypes <> S constr
R62860:62860 Imp <> X def
R62905:62905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62914:62915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62919:62919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62906:62913 Smallstep CImp par_loop def
R62888:62898 Smallstep CImp multi_trans thm
R62905:62905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62914:62915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62919:62919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62906:62913 Smallstep CImp par_loop def
R62888:62898 Smallstep CImp multi_trans thm
R62952:62965 Smallstep CImp par_body_n__Sn thm
R62952:62965 Smallstep CImp par_body_n__Sn thm
R63018:63025 Maps <> t_update def
prf 63149:63162 CImp par_loop_any_X
R63177:63183 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63187:63192 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63232:63239 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63201:63203 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R63215:63221 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R63226:63228 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R63193:63200 Smallstep CImp par_loop def
R63204:63214 Imp <> empty_state def
R63222:63225 Smallstep CImp ::'SKIP' not
R63229:63231 Smallstep <> st' var
R63245:63247 Coq.Init.Logic <> :type_scope:x_'='_x not
R63240:63242 Smallstep <> st' var
R63244:63244 Imp <> X def
R63248:63248 Smallstep <> n var
R63282:63291 Smallstep CImp par_body_n thm
R63295:63305 Imp <> empty_state def
R63282:63291 Smallstep CImp par_body_n thm
R63295:63305 Imp <> empty_state def
R63327:63334 Maps <> t_update def
R63421:63428 Maps <> t_update def
R63433:63433 Imp <> Y def
R63421:63428 Maps <> t_update def
R63433:63433 Imp <> Y def
R63472:63472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63481:63481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63484:63484 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63473:63480 Smallstep CImp par_loop def
R63455:63465 Smallstep CImp multi_trans thm
R63472:63472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63481:63481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63484:63484 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63473:63480 Smallstep CImp par_loop def
R63455:63465 Smallstep CImp multi_trans thm
R63506:63515 Smallstep CImp multi_step constr
R63506:63515 Smallstep CImp multi_step constr
R63524:63530 Smallstep CImp CS_Par1 constr
R63524:63530 Smallstep CImp CS_Par1 constr
R63539:63544 Smallstep CImp CS_Ass constr
R63539:63544 Smallstep CImp CS_Ass constr
R63556:63565 Smallstep CImp multi_step constr
R63556:63565 Smallstep CImp multi_step constr
R63574:63580 Smallstep CImp CS_Par2 constr
R63574:63580 Smallstep CImp CS_Par2 constr
R63589:63596 Smallstep CImp CS_While constr
R63589:63596 Smallstep CImp CS_While constr
R63608:63617 Smallstep CImp multi_step constr
R63608:63617 Smallstep CImp multi_step constr
R63626:63632 Smallstep CImp CS_Par2 constr
R63626:63632 Smallstep CImp CS_Par2 constr
R63641:63649 Smallstep CImp CS_IfStep constr
R63641:63649 Smallstep CImp CS_IfStep constr
R63662:63667 Smallstep CImp BS_Eq1 constr
R63662:63667 Smallstep CImp BS_Eq1 constr
R63676:63680 Smallstep CImp AS_Id constr
R63676:63680 Smallstep CImp AS_Id constr
R63691:63701 Maps <> t_update_eq thm
R63691:63701 Maps <> t_update_eq thm
R63691:63701 Maps <> t_update_eq thm
R63713:63722 Smallstep CImp multi_step constr
R63713:63722 Smallstep CImp multi_step constr
R63731:63737 Smallstep CImp CS_Par2 constr
R63731:63737 Smallstep CImp CS_Par2 constr
R63746:63754 Smallstep CImp CS_IfStep constr
R63746:63754 Smallstep CImp CS_IfStep constr
R63767:63771 Smallstep CImp BS_Eq constr
R63767:63771 Smallstep CImp BS_Eq constr
R63790:63799 Smallstep CImp multi_step constr
R63790:63799 Smallstep CImp multi_step constr
R63808:63814 Smallstep CImp CS_Par2 constr
R63808:63814 Smallstep CImp CS_Par2 constr
R63823:63832 Smallstep CImp CS_IfFalse constr
R63823:63832 Smallstep CImp CS_IfFalse constr
R63844:63853 Smallstep CImp multi_step constr
R63844:63853 Smallstep CImp multi_step constr
R63862:63871 Smallstep CImp CS_ParDone constr
R63862:63871 Smallstep CImp CS_ParDone constr
R63882:63891 Smallstep CImp multi_refl constr
R63882:63891 Smallstep CImp multi_refl constr
R63905:63916 Maps <> t_update_neq thm
R63905:63916 Maps <> t_update_neq thm
R63905:63916 Maps <> t_update_neq thm
R63905:63916 Maps <> t_update_neq thm
R63963:63966 Smallstep CImp <> mod
def 64199:64203 <> stack
R64208:64211 Coq.Init.Datatypes <> list ind
R64213:64215 Coq.Init.Datatypes <> nat ind
def 64229:64232 <> prog
R64238:64241 Coq.Init.Datatypes <> list ind
R64243:64248 Imp <> sinstr ind
ind 64262:64271 <> stack_step
constr 64328:64334 <> SS_Push
constr 64421:64427 <> SS_Load
constr 64517:64523 <> SS_Plus
constr 64614:64621 <> SS_Minus
constr 64712:64718 <> SS_Mult
R64280:64283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64296:64299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64312:64315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64304:64306 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R64300:64303 Smallstep <> prog def
R64307:64311 Smallstep <> stack def
R64288:64290 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R64284:64287 Smallstep <> prog def
R64291:64295 Smallstep <> stack def
R64275:64279 Imp <> state def
R64362:64371 Smallstep <> stack_step ind
R64402:64402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64405:64406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64415:64415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64403:64404 Smallstep <> p' var
R64408:64411 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64407:64407 Smallstep <> n var
R64412:64414 Smallstep <> stk var
R64376:64376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64390:64391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64395:64395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64384:64387 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64377:64381 Imp <> SPush constr
R64383:64383 Smallstep <> n var
R64388:64389 Smallstep <> p' var
R64392:64394 Smallstep <> stk var
R64373:64374 Smallstep <> st var
R64455:64464 Smallstep <> stack_step ind
R64495:64495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64498:64499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64511:64511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64496:64497 Smallstep <> p' var
R64504:64507 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64500:64501 Smallstep <> st var
R64503:64503 Smallstep <> i var
R64508:64510 Smallstep <> stk var
R64469:64469 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64483:64484 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64488:64488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64477:64480 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64470:64474 Imp <> SLoad constr
R64476:64476 Smallstep <> i var
R64481:64482 Smallstep <> p' var
R64485:64487 Smallstep <> stk var
R64466:64467 Smallstep <> st var
R64553:64562 Smallstep <> stack_step ind
R64593:64593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64596:64597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64608:64608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64594:64595 Smallstep <> p' var
R64598:64598 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64602:64604 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64600:64600 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R64599:64599 Smallstep <> m var
R64601:64601 Smallstep <> n var
R64605:64607 Smallstep <> stk var
R64567:64567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64579:64580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64590:64590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64573:64576 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64568:64572 Imp <> SPlus constr
R64577:64578 Smallstep <> p' var
R64582:64583 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64581:64581 Smallstep <> n var
R64585:64586 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64584:64584 Smallstep <> m var
R64587:64589 Smallstep <> stk var
R64564:64565 Smallstep <> st var
R64651:64660 Smallstep <> stack_step ind
R64691:64691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64694:64695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64706:64706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64692:64693 Smallstep <> p' var
R64696:64696 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64700:64702 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64698:64698 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R64697:64697 Smallstep <> m var
R64699:64699 Smallstep <> n var
R64703:64705 Smallstep <> stk var
R64665:64665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64678:64679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64689:64689 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64672:64675 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64666:64671 Imp <> SMinus constr
R64676:64677 Smallstep <> p' var
R64681:64682 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64680:64680 Smallstep <> n var
R64684:64685 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64683:64683 Smallstep <> m var
R64686:64688 Smallstep <> stk var
R64662:64663 Smallstep <> st var
R64748:64757 Smallstep <> stack_step ind
R64788:64788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64791:64792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64803:64803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64789:64790 Smallstep <> p' var
R64793:64793 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64797:64799 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64795:64795 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R64794:64794 Smallstep <> m var
R64796:64796 Smallstep <> n var
R64800:64802 Smallstep <> stk var
R64762:64762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64774:64775 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64785:64785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64768:64771 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64763:64767 Imp <> SMult constr
R64772:64773 Smallstep <> p' var
R64777:64778 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64776:64776 Smallstep <> n var
R64780:64781 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R64779:64779 Smallstep <> m var
R64782:64784 Smallstep <> stk var
R64759:64760 Smallstep <> st var
prf 64815:64838 <> stack_step_deterministic
R64855:64867 Smallstep <> deterministic def
R64870:64879 Smallstep <> stack_step ind
R64881:64882 Smallstep <> st var
R64902:64914 Smallstep <> deterministic def
def 65002:65016 <> stack_multistep
R65024:65028 Smallstep <> multi ind
R65031:65040 Smallstep <> stack_step ind
R65042:65043 Smallstep <> st var
def 65419:65447 <> compiler_is_correct_statement
R65491:65495 Imp <> state def
R65503:65506 Imp <> aexp ind
R65512:65526 Smallstep <> stack_multistep def
R65549:65549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65552:65553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65568:65568 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65550:65551 Coq.Lists.List ListNotations :list_scope:'['_']' not
R65554:65555 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R65566:65567 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R65556:65560 Imp <> aeval def
R65565:65565 Smallstep <> e var
R65562:65563 Smallstep <> st var
R65531:65531 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65543:65544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65547:65547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65532:65540 Imp <> s_compile def
R65542:65542 Smallstep <> e var
R65545:65546 Coq.Lists.List ListNotations :list_scope:'['_']' not
R65528:65529 Smallstep <> st var
prf 65581:65593 <> s_compile_aux
R65609:65612 Imp <> aexp ind
R65619:65622 Smallstep <> prog def
R65631:65635 Imp <> state def
R65646:65650 Smallstep <> stack def
R65656:65670 Smallstep <> stack_multistep def
R65700:65700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65702:65703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65722:65722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65701:65701 Smallstep <> t var
R65714:65717 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65704:65708 Imp <> aeval def
R65713:65713 Smallstep <> e var
R65710:65711 Smallstep <> st var
R65718:65721 Smallstep <> stk1 var
R65675:65675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65692:65693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65698:65698 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65687:65690 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R65676:65684 Imp <> s_compile def
R65686:65686 Smallstep <> e var
R65691:65691 Smallstep <> t var
R65694:65697 Smallstep <> stk1 var
R65672:65673 Smallstep <> st var
prf 65997:66015 <> compiler_is_correct
R66019:66047 Smallstep <> compiler_is_correct_statement def
R66082:66110 Smallstep <> compiler_is_correct_statement def
R66137:66145 Coq.Lists.List <> app_nil_r thm
R66148:66156 Imp <> s_compile def
R66137:66145 Coq.Lists.List <> app_nil_r thm
R66148:66156 Imp <> s_compile def
R66137:66145 Coq.Lists.List <> app_nil_r thm
R66148:66156 Imp <> s_compile def
R66172:66184 Smallstep <> s_compile_aux prfax
R66172:66184 Smallstep <> s_compile_aux prfax
